// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.JSSyntaxRegExp = {"": ["_lib1_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = $.regExpMatchStart(m);
  t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib1_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern?", "str", "start", "end", "_groups"],
 "super": "Object",
 start$0: function() { return this.start.call$0(); },
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_lib1_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._lib1_next;
  this._lib1_next = null;
  return next;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib1_next == null))
    return true;
  this._lib1_next = this._re.firstMatch$1(this._str);
  if (this._lib1_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.ArgumentError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'RangeError: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0))
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    t4 = t1.i_2;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    $.add$1(t3, $.NoSuchMethodError_safeToString(t2[t4]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  actualParameters = $.toString(t1.sb_1);
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t2.length; ++i) {
    if (i > 0)
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    if (i >= t2.length)
      throw $.ioore(i);
    $.add$1(t3, t2[i]);
  }
  formalParameters = $.toString(t1.sb_1);
  t2 = this._memberName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer('');
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0))
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._memberName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(t1.sb_1) + ']';
      else {
        actualParameters = $.toString(t1.sb_1);
        t1.sb_1 = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t2)); ++i) {
          if (i > 0)
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.index(t2, i));
        }
        formalParameters = $.toString(t1.sb_1);
        t2 = this._memberName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: ' + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? 'UnimplementedError: ' + $.S(t1) : 'UnimplementedError';
},
 is$Exception: true
};

$$.StateError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: ' + this.message;
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.ExpectException = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.FutureUnhandledException = {"": ["source", "stackTrace?"],
 "super": "Object",
 toString$0: function() {
  return 'FutureUnhandledException: exception while executing Future\n  ' + $.S($.replaceAll($.toString(this.source), '\n', '\n  ')) + '\n' + 'original stack trace:\n  ' + $.S($.replaceAll($.toString(this.stackTrace), '\n', '\n  '));
},
 is$Exception: true
};

$$._FutureImpl = {"": ["_isComplete", "_value", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.iterator(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$._HashMapImpl = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  hash = $.and($.get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $._ListImpl_List(newCapacity);
  this._values = $._ListImpl_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC1)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC1)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC1;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC1)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.i_10 = 0;
  this.forEach$1(new $._HashMapImpl_keys__(list, t1));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $._HashMapImpl_values__(t1, list));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $._ListImpl_List(8);
  this._values = $._ListImpl_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$._KeyValuePair = {"": ["key?", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.index_10 = 0;
  this._list.forEach$1(new $._LinkedHashMapImpl_keys__(list, t1));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List($.get$length(this));
  t1.index_1 = 0;
  this._list.forEach$1(new $._LinkedHashMapImpl_values__(list, t1));
  return list;
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  $.clear(this._map);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"": ["_previous!", "_next=", "_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 append$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this, this._next);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addFirst$1: function(value) {
  this._sentinel.append$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 filter$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.addLast(other, entry.get$_element());
  }
  return other;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._StopwatchImpl = {"": ["_start", "_stop"],
 "super": "Object",
 start$0: function() {
  var t1, t2, t4;
  if (this._start == null)
    this._start = $.Primitives_dateNow();
  else {
    if (this._stop == null)
      return;
    t1 = $.Primitives_dateNow();
    t2 = this._stop;
    if (typeof t2 !== 'number')
      return this.start$0$bailout(1, t2, t1);
    t4 = this._start;
    if (typeof t4 !== 'number')
      return this.start$0$bailout(2, t2, t1, t4);
    this._start = t1 - (t2 - t4);
    this._stop = null;
  }
},
 start$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      t2 = env0;
      break;
    case 2:
      t4 = env2;
      t1 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var t1, t2, t4;
      if (state0 === 0 && this._start == null)
        this._start = $.Primitives_dateNow();
      else
        switch (state0) {
          case 0:
            if (this._stop == null)
              return;
            t1 = $.Primitives_dateNow();
            t2 = this._stop;
          case 1:
            state0 = 0;
            t4 = this._start;
          case 2:
            state0 = 0;
            t4 = $.sub(t2, t4);
            if (typeof t4 !== 'number')
              throw $.iae(t4);
            this._start = t1 - t4;
            this._stop = null;
        }
  }
},
 stop$0: function() {
  if (this._start == null || !(this._stop == null))
    return;
  this._stop = $.Primitives_dateNow();
},
 reset$0: function() {
  if (this._start == null)
    return;
  this._start = $.Primitives_dateNow();
  if (!(this._stop == null))
    this._stop = this._start;
},
 get$frequency: function() {
  return $._StopwatchImpl__frequency();
}
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 clear$0: function() {
  this._buffer = $._ListImpl_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.stringJoinUnchecked($._StringImpl__toJsStringArray(this._buffer), '');
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$.StackTrace = {"": ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.MetaInfo = {"": ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"": ["start", "str", "pattern?"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 start$0: function() { return this.start.call$0(); }
};

$$.Bench2d = {"": ["canvas", "ctx", "viewport", "debugDraw", "world"],
 "super": "Object",
 initialize$0: function() {
  var bd, ground, shape, fixDef, x, y, deltaX, deltaY, i, j;
  bd = $.BodyDef$();
  ground = this.world.createBody$1(bd);
  shape = $.PolygonShape$();
  shape.setAsEdge$2($.Vector$(-40, 0), $.Vector$(40, 0));
  fixDef = $.FixtureDef$();
  fixDef.shape = shape;
  fixDef.density = 0;
  ground.createFixture$1(fixDef);
  shape = $.PolygonShape$();
  shape.setAsBox$2(0.5, 0.5);
  fixDef = $.FixtureDef$();
  fixDef.shape = shape;
  fixDef.density = 5;
  x = $.Vector$(-7, 0.75);
  y = $.Vector$(0, 0);
  deltaX = $.Vector$(0.5625, 1);
  deltaY = $.Vector$(1.125, 0);
  for (i = 0; i < 20; ++i) {
    y.setFrom$1(x);
    for (j = i; j < 20; ++j) {
      bd = $.BodyDef$();
      bd.type = 2;
      bd.position.setFrom$1(y);
      this.world.createBody$1(bd).createFixture$1(fixDef);
      y.addLocal$1(deltaY);
    }
    x.addLocal$1(deltaX);
  }
},
 step$0: function() {
  this.world.step$3(0.016666666666666666, 10, 10);
},
 warmup$0: function() {
  var i;
  for (var i = 0; i < 256; ++i)
    this.world.step$3(0.016666666666666666, 10, 10);
},
 bench$0: function() {
  var bench2d, times, i, watch, total, t1;
  bench2d = $.Bench2d$();
  times = $._ListImpl_List(256);
  for (i = 0; i < 256; ++i) {
    watch = $.Stopwatch_Stopwatch();
    watch.start$0();
    bench2d.step$0();
    watch.stop$0();
    times[i] = $.div(watch.elapsed$0(), watch.get$frequency());
    $.print(times[i]);
  }
  for (total = 0, i = 0; i < 256; ++i) {
    t1 = times[i];
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    total += t1;
  }
  $.print(total);
},
 Bench2d$0: function() {
  this.world = $.World$($.Vector$(0, -10), true, $.DefaultWorldPool$());
}
};

$$._ListWrapper = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._lib_list);
},
 contains$1: function(element) {
  return $.contains$1(this._lib_list, element);
},
 forEach$1: function(f) {
  return $.forEach(this._lib_list, f);
},
 filter$1: function(f) {
  return $.filter(this._lib_list, f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.get$isEmpty(this._lib_list);
},
 get$length: function() {
  return $.get$length(this._lib_list);
},
 operator$index$1: function(index) {
  return $.index(this._lib_list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._lib_list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._lib_list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._lib_list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._lib_list, value);
},
 sort$1: function(compare) {
  return $.sort$1(this._lib_list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._lib_list, element, start);
},
 clear$0: function() {
  return $.clear(this._lib_list);
},
 removeLast$0: function() {
  return $.removeLast(this._lib_list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._lib_list, start, rangeLength);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  return $.setRange$4(this._lib_list, start, rangeLength, from, startFrom);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"": ["_lib_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._lib_list, f));
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._lib_list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 close$0: function() {
  return this._window.close();
}
};

$$._FixedSizeListIterator = {"": ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._lib_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$._Manager = {"": ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.get$isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.Map_Map();
  this.managers = $.Map_Map();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"": ["id?", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old, result, t1;
  old = $._globalState0().get$currentContext();
  $._globalState0().set$currentContext(this);
  this._setGlobals$0();
  result = null;
  try {
    result = code.call$0();
  } finally {
    t1 = old;
    $._globalState0().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($._ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState0().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.get$isEmpty(this.ports) === true)
    $._globalState0().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1, t2;
  t1 = $._globalState0();
  t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.Map_Map();
  this.initGlobals$0();
}
};

$$._EventLoop = {"": ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState0().get$isWorker() === true)
      $._globalState0().maybeCloseWorker$0();
    else if (!($._globalState0().get$rootContext() == null) && $._globalState0().get$isolates().containsKey$1($._globalState0().get$rootContext().get$id()) === true && $._globalState0().get$fromCommandLine() === true && $.get$isEmpty($._globalState0().get$rootContext().get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function(exception) {
  var t1, e, trace;
  if ($._globalState0().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $._globalState0().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"": ["isolate", "fn", "message"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"": [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"": ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($._ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer, port;
  completer = $.Completer_Completer();
  port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(completer, port));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"": ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(replyTo, message, this));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 get$hashCode: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"": ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(message, replyTo, this));
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"": ["_id?", "_callback?"],
 "super": "Object",
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._callback = onMessage;
},
 close$0: function() {
  this._callback = null;
  $._globalState0().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState0().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState0().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"": ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"": ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return ['sendport', x._workerId, x._isolateId, x._receivePortId];
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState0().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"": ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"": ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId, isolateId, receivePortId, isolate;
  managerId = $.index(x, 1);
  isolateId = $.index(x, 2);
  receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState0().get$currentManagerId())) {
    isolate = $.index($._globalState0().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"": ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return object['__MessageTraverser__attached_info__'];
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  object['__MessageTraverser__attached_info__'] = info;
},
 reset$0: function() {
  this.tagged = $._ListImpl_List(null);
},
 cleanup$0: function() {
  var length$, i;
  length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  i = 0;
  for (; i < length$; ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
}
};

$$._MessageTraverserVisitedMap = {"": [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"": [],
 "super": "Object",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copy, len, i;
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = list.length;
  copy = $._ListImpl_List(len);
  $.indexSet(this._visited, list, copy);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy, len, i, t1;
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = $.get$length(list);
  copy = $._ListImpl_List(len);
  $.indexSet(this._visited, list, copy);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1, t2;
  t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.Map_Map();
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  len = list.length;
  result = $._ListImpl_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len, result, i, t1;
  len = $.get$length(list);
  result = $._ListImpl_List(len);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"": [],
 "super": "Object",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._deserialized = $.HashMap_HashMap();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  var len, i;
  $.indexSet(this._deserialized, id, dartList);
  len = $.get$length(dartList);
  for (i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      len = $.get$length(keys);
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"": ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon0(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon(this, callback), milliSeconds);
}
};

$$.ContactFilter = {"": [],
 "super": "Object",
 shouldCollide$2: function(fixtureA, fixtureB) {
  var filterA, filterB, t1, t3, t5;
  filterA = fixtureA.get$filter();
  filterB = fixtureB.get$filter();
  t1 = filterA.get$groupIndex();
  if (typeof t1 !== 'number')
    return this.shouldCollide$2$bailout(1, t1, filterA, filterB);
  if (!(t1 === 0) && t1 === filterB.get$groupIndex()) {
    t1 = filterA.get$groupIndex();
    if (typeof t1 !== 'number')
      return this.shouldCollide$2$bailout(2, t1);
    return t1 > 0;
  }
  t1 = filterA.get$maskBits();
  if (t1 !== (t1 | 0))
    return this.shouldCollide$2$bailout(3, t1, filterA, filterB);
  t3 = filterB.get$categoryBits();
  if (t3 !== (t3 | 0))
    return this.shouldCollide$2$bailout(4, t1, t3, filterA, filterB);
  if ((t1 & t3) >>> 0 !== 0) {
    t1 = filterA.get$categoryBits();
    if (t1 !== (t1 | 0))
      return this.shouldCollide$2$bailout(5, t1, filterB);
    t3 = filterB.get$maskBits();
    if (t3 !== (t3 | 0))
      return this.shouldCollide$2$bailout(6, t1, t3);
    t5 = (t1 & t3) >>> 0 !== 0;
    t1 = t5;
  } else
    t1 = false;
  return t1;
},
 shouldCollide$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      filterB = env2;
      filterA = env1;
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      filterB = env2;
      filterA = env1;
      t1 = env0;
      break;
    case 4:
      filterB = env3;
      filterA = env2;
      t3 = env1;
      t1 = env0;
      break;
    case 5:
      filterB = env1;
      t1 = env0;
      break;
    case 6:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      filterA = fixtureA.get$filter();
      filterB = fixtureB.get$filter();
      t1 = filterA.get$groupIndex();
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 0) && $.eqB(filterA.get$groupIndex(), filterB.get$groupIndex()))
        switch (state0) {
          case 0:
            t1 = filterA.get$groupIndex();
          case 2:
            state0 = 0;
            return $.gt(t1, 0);
        }
      t1 = filterA.get$maskBits();
    case 3:
      state0 = 0;
      t3 = filterB.get$categoryBits();
    case 4:
      state0 = 0;
    default:
      var filterA, filterB, t1, t3, t5;
      if (state0 === 6 || state0 === 5 || state0 === 0 && !$.eqB($.and(t1, t3), 0))
        switch (state0) {
          case 0:
            t1 = filterA.get$categoryBits();
          case 5:
            state0 = 0;
            t3 = filterB.get$maskBits();
          case 6:
            state0 = 0;
            t5 = !$.eqB($.and(t1, t3), 0);
            t1 = t5;
        }
      else
        t1 = false;
      return t1;
  }
}
};

$$.ContactImpulse = {"": ["normalImpulses?", "tangentImpulses?"],
 "super": "Object"
};

$$.AxisAlignedBox = {"": ["lowerBound?", "upperBound?"],
 "super": "Object",
 setFromCombination$2: function(boxOne, boxTwo) {
  var t1 = $.min(boxOne.get$lowerBound().get$x(), boxTwo.get$lowerBound().get$x());
  this.lowerBound.set$x(t1);
  t1 = $.min(boxOne.get$lowerBound().get$y(), boxTwo.get$lowerBound().get$y());
  this.lowerBound.set$y(t1);
  t1 = $.max(boxOne.get$upperBound().get$x(), boxTwo.get$upperBound().get$x());
  this.upperBound.set$x(t1);
  t1 = $.max(boxOne.get$upperBound().get$y(), boxTwo.get$upperBound().get$y());
  this.upperBound.set$y(t1);
},
 get$center: function() {
  var c = $.Vector$copy(this.lowerBound);
  c.addLocal$1(this.upperBound);
  c.mulLocal$1(0.5);
  return c;
},
 contains$1: function(aabb) {
  return $.gtB(this.lowerBound.get$x(), aabb.get$lowerBound().get$x()) && $.gtB(this.lowerBound.get$y(), aabb.get$lowerBound().get$y()) && $.ltB(this.upperBound.get$y(), aabb.get$upperBound().get$y()) && $.ltB(this.upperBound.get$x(), aabb.get$upperBound().get$x());
},
 setFrom$1: function(other) {
  this.lowerBound.setFrom$1(other.get$lowerBound());
  this.upperBound.setFrom$1(other.get$upperBound());
},
 toString$0: function() {
  return $.S(this.lowerBound) + ', ' + $.S(this.upperBound);
},
 AxisAlignedBox$2: function(lowerBound, upperBound) {
  if (this.lowerBound == null)
    this.lowerBound = $.Vector$(0, 0);
  if (this.upperBound == null)
    this.upperBound = $.Vector$(0, 0);
}
};

$$.Collision = {"": ["_pool", "cache", "input", "output", "results1", "results2", "incidentEdge?", "localTangent", "localNormal?", "planePoint", "tangent", "normal?", "normal1", "v11", "v12", "clipPoints1", "clipPoints2"],
 "super": "Object",
 testOverlap$4: function(shapeA, shapeB, transformA, transformB) {
  var t1, t2, t3, t4;
  t1 = this.input;
  t1.proxyA.setFromShape$1(shapeA);
  t1.proxyB.setFromShape$1(shapeB);
  t1.transformA.setFrom$1(transformA);
  t1.transformB.setFrom$1(transformB);
  t1.useRadii = true;
  t2 = this.cache;
  t2.count = 0;
  t3 = this._pool.distance;
  t4 = this.output;
  t3.distance$3(t4, t2, t1);
  return $.lt(t4.distance, 0.000001192);
},
 collideCircles$5: function(manifold, circle1, xfA, circle2, xfB) {
  var v, pAy, pAx, v1, pBy, dx, dy, distSqr, radius;
  manifold.set$pointCount(0);
  v = circle1.get$position();
  pAy = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), v.get$y()));
  pAx = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), v.get$y()));
  v1 = circle2.get$position();
  pBy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v1.get$y()));
  dx = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v1.get$y())), pAx);
  dy = $.sub(pBy, pAy);
  distSqr = $.add($.mul(dx, dx), $.mul(dy, dy));
  radius = $.add(circle1.get$radius(), circle2.get$radius());
  if ($.gtB(distSqr, $.mul(radius, radius)))
    return;
  manifold.set$type(0);
  manifold.get$localPoint().setFrom$1(circle1.get$position());
  manifold.get$localNormal().setZero$0();
  manifold.set$pointCount(1);
  $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle2.get$position());
  $.index(manifold.get$points(), 0).get$id().zero$0();
},
 collidePolygonAndCircle$5: function(manifold, polygon, xfA, circle, xfB) {
  var v, cy, v1x, v1y, t1, b, b1, cLocaly, cLocalx, radius, vertexCount, vertices, normals, i, normalIndex, separation, vertex, tempx, tempy, norm, s, vertIndex2, v1, v2, mpoint, tempX, t2, tempY, temp2X, temp2Y, u1, temp3X, temp3Y, temp4X, temp4Y, u2, dx, dy, fcx, fcy, tx, ty, t3;
  manifold.set$pointCount(0);
  v = circle.get$position();
  cy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
  v1x = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y())), xfA.get$position().get$x());
  v1y = $.sub(cy, xfA.get$position().get$y());
  t1 = xfA.get$rotation();
  b = t1.get$col1();
  b1 = t1.get$col2();
  cLocaly = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
  if (typeof cLocaly !== 'number')
    return this.collidePolygonAndCircle$5$bailout(1, manifold, cLocaly, polygon, circle, v1x, v1y, b);
  cLocalx = $.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y()));
  if (typeof cLocalx !== 'number')
    return this.collidePolygonAndCircle$5$bailout(2, manifold, cLocaly, polygon, circle, cLocalx);
  radius = $.add(polygon.get$radius(), circle.get$radius());
  if (typeof radius !== 'number')
    return this.collidePolygonAndCircle$5$bailout(3, manifold, cLocaly, polygon, circle, cLocalx, radius);
  vertexCount = polygon.get$vertexCount();
  if (typeof vertexCount !== 'number')
    return this.collidePolygonAndCircle$5$bailout(4, manifold, cLocaly, polygon, circle, cLocalx, radius, vertexCount);
  vertices = polygon.get$vertices();
  if (typeof vertices !== 'string' && (typeof vertices !== 'object' || vertices === null || vertices.constructor !== Array && !vertices.is$JavaScriptIndexingBehavior()))
    return this.collidePolygonAndCircle$5$bailout(5, manifold, cLocaly, polygon, circle, vertices, cLocalx, radius, vertexCount);
  normals = polygon.get$normals();
  if (typeof normals !== 'string' && (typeof normals !== 'object' || normals === null || normals.constructor !== Array && !normals.is$JavaScriptIndexingBehavior()))
    return this.collidePolygonAndCircle$5$bailout(6, manifold, cLocaly, normals, circle, vertices, cLocalx, radius, vertexCount);
  for (i = 0, normalIndex = 0, separation = 1e-12; i < vertexCount; ++i) {
    if (i >= vertices.length)
      throw $.ioore(i);
    vertex = vertices[i];
    t1 = vertex.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    tempx = cLocalx - t1;
    t1 = vertex.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    tempy = cLocaly - t1;
    if (i >= normals.length)
      throw $.ioore(i);
    norm = normals[i];
    s = $.add($.mul(norm.get$x(), tempx), $.mul(norm.get$y(), tempy));
    if ($.gtB(s, radius))
      return;
    if ($.gtB(s, separation)) {
      separation = s;
      normalIndex = i;
    }
  }
  vertIndex2 = normalIndex + 1;
  vertIndex2 = vertIndex2 < vertexCount ? vertIndex2 : 0;
  t1 = vertices.length;
  if (normalIndex < 0 || normalIndex >= t1)
    throw $.ioore(normalIndex);
  v1 = vertices[normalIndex];
  if (vertIndex2 < 0 || vertIndex2 >= t1)
    throw $.ioore(vertIndex2);
  v2 = vertices[vertIndex2];
  if ($.ltB(separation, 1.192e-7)) {
    manifold.set$pointCount(1);
    manifold.set$type(1);
    if (normalIndex >= normals.length)
      throw $.ioore(normalIndex);
    norm = normals[normalIndex];
    t1 = norm.get$x();
    manifold.get$localNormal().set$x(t1);
    t1 = norm.get$y();
    manifold.get$localNormal().set$y(t1);
    t1 = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
    manifold.get$localPoint().set$x(t1);
    t1 = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
    manifold.get$localPoint().set$y(t1);
    mpoint = $.index(manifold.get$points(), 0);
    t1 = circle.get$position().get$x();
    mpoint.get$localPoint().set$x(t1);
    t1 = circle.get$position().get$y();
    mpoint.get$localPoint().set$y(t1);
    mpoint.get$id().zero$0();
    return;
  }
  t1 = v1.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  tempX = cLocalx - t1;
  t2 = v1.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  tempY = cLocaly - t2;
  temp2X = $.sub(v2.get$x(), t1);
  temp2Y = $.sub(v2.get$y(), v1.get$y());
  if (typeof temp2X !== 'number')
    throw $.iae(temp2X);
  t1 = tempX * temp2X;
  if (typeof temp2Y !== 'number')
    throw $.iae(temp2Y);
  u1 = t1 + tempY * temp2Y;
  t1 = v2.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  temp3X = cLocalx - t1;
  t2 = v2.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  temp3Y = cLocaly - t2;
  temp4X = $.sub(v1.get$x(), t1);
  temp4Y = $.sub(v1.get$y(), v2.get$y());
  if (typeof temp4X !== 'number')
    throw $.iae(temp4X);
  t1 = temp3X * temp4X;
  if (typeof temp4Y !== 'number')
    throw $.iae(temp4Y);
  u2 = t1 + temp3Y * temp4Y;
  if (u1 <= 0) {
    t1 = v1.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dx = cLocalx - t1;
    t1 = v1.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    dy = cLocaly - t1;
    if (dx * dx + dy * dy > radius * radius)
      return;
    manifold.set$pointCount(1);
    manifold.set$type(1);
    t1 = v1.get$x();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocalx - t1;
    manifold.get$localNormal().set$x(t1);
    t1 = v1.get$y();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = cLocaly - t1;
    manifold.get$localNormal().set$y(t1);
    manifold.get$localNormal().normalize$0();
    manifold.get$localPoint().setFrom$1(v1);
    $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
    $.index(manifold.get$points(), 0).get$id().zero$0();
  } else {
    t1 = u2 <= 0;
    t2 = v2.get$x();
    if (t1) {
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      dx = cLocalx - t2;
      t1 = v2.get$y();
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      dy = cLocaly - t1;
      if (dx * dx + dy * dy > radius * radius)
        return;
      manifold.set$pointCount(1);
      manifold.set$type(1);
      t1 = v2.get$x();
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t1 = cLocalx - t1;
      manifold.get$localNormal().set$x(t1);
      t1 = v2.get$y();
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t1 = cLocaly - t1;
      manifold.get$localNormal().set$y(t1);
      manifold.get$localNormal().normalize$0();
      manifold.get$localPoint().setFrom$1(v2);
      $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
      $.index(manifold.get$points(), 0).get$id().zero$0();
    } else {
      fcx = $.mul($.add(v1.get$x(), t2), 0.5);
      fcy = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
      if (typeof fcx !== 'number')
        throw $.iae(fcx);
      tx = cLocalx - fcx;
      if (typeof fcy !== 'number')
        throw $.iae(fcy);
      ty = cLocaly - fcy;
      if (normalIndex >= normals.length)
        throw $.ioore(normalIndex);
      norm = normals[normalIndex];
      t1 = norm.get$x();
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t1 = tx * t1;
      t3 = norm.get$y();
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      if (t1 + ty * t3 > radius)
        return;
      manifold.set$pointCount(1);
      manifold.set$type(1);
      t1 = manifold.get$localNormal();
      if (normalIndex >= normals.length)
        throw $.ioore(normalIndex);
      t1.setFrom$1(normals[normalIndex]);
      manifold.get$localPoint().set$x(fcx);
      manifold.get$localPoint().set$y(fcy);
      $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
      $.index(manifold.get$points(), 0).get$id().zero$0();
    }
  }
},
 collidePolygonAndCircle$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      b = env6;
      v1y = env5;
      v1x = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 2:
      cLocalx = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 3:
      radius = env5;
      cLocalx = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 4:
      vertexCount = env6;
      radius = env5;
      cLocalx = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 5:
      vertexCount = env7;
      radius = env6;
      cLocalx = env5;
      vertices = env4;
      circle = env3;
      polygon = env2;
      cLocaly = env1;
      manifold = env0;
      break;
    case 6:
      vertexCount = env7;
      radius = env6;
      cLocalx = env5;
      vertices = env4;
      circle = env3;
      normals = env2;
      cLocaly = env1;
      manifold = env0;
      break;
  }
  switch (state0) {
    case 0:
      manifold.set$pointCount(0);
      v = circle.get$position();
      cy = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
      v1x = $.sub($.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y())), xfA.get$position().get$x());
      v1y = $.sub(cy, xfA.get$position().get$y());
      t1 = xfA.get$rotation();
      b = t1.get$col1();
      b1 = t1.get$col2();
      cLocaly = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
    case 1:
      state0 = 0;
      cLocalx = $.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y()));
    case 2:
      state0 = 0;
      radius = $.add(polygon.get$radius(), circle.get$radius());
    case 3:
      state0 = 0;
      vertexCount = polygon.get$vertexCount();
    case 4:
      state0 = 0;
      vertices = polygon.get$vertices();
    case 5:
      state0 = 0;
      normals = polygon.get$normals();
    case 6:
      var v, cy, v1x, v1y, t1, b, b1, cLocaly, circle, polygon, manifold, cLocalx, radius, vertexCount, vertices, normals, i, normalIndex, separation, vertex, tempx, tempy, norm, s, vertIndex2, v1, v2, mpoint, tempX, tempY, temp2X, temp2Y, u1, temp3X, temp3Y, temp4X, temp4Y, u2, dx, dy, t2, fcx, fcy, tx, ty;
      state0 = 0;
      for (i = 0, normalIndex = 0, separation = 1e-12; $.ltB(i, vertexCount); ++i) {
        vertex = $.index(vertices, i);
        tempx = $.sub(cLocalx, vertex.get$x());
        tempy = $.sub(cLocaly, vertex.get$y());
        norm = $.index(normals, i);
        s = $.add($.mul(norm.get$x(), tempx), $.mul(norm.get$y(), tempy));
        if ($.gtB(s, radius))
          return;
        if ($.gtB(s, separation)) {
          separation = s;
          normalIndex = i;
        }
      }
      vertIndex2 = normalIndex + 1;
      vertIndex2 = $.ltB(vertIndex2, vertexCount) ? vertIndex2 : 0;
      v1 = $.index(vertices, normalIndex);
      v2 = $.index(vertices, vertIndex2);
      if ($.ltB(separation, 1.192e-7)) {
        manifold.set$pointCount(1);
        manifold.set$type(1);
        norm = $.index(normals, normalIndex);
        t1 = norm.get$x();
        manifold.get$localNormal().set$x(t1);
        t1 = norm.get$y();
        manifold.get$localNormal().set$y(t1);
        t1 = $.mul($.add(v1.get$x(), v2.get$x()), 0.5);
        manifold.get$localPoint().set$x(t1);
        t1 = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
        manifold.get$localPoint().set$y(t1);
        mpoint = $.index(manifold.get$points(), 0);
        t1 = circle.get$position().get$x();
        mpoint.get$localPoint().set$x(t1);
        t1 = circle.get$position().get$y();
        mpoint.get$localPoint().set$y(t1);
        mpoint.get$id().zero$0();
        return;
      }
      tempX = $.sub(cLocalx, v1.get$x());
      tempY = $.sub(cLocaly, v1.get$y());
      temp2X = $.sub(v2.get$x(), v1.get$x());
      temp2Y = $.sub(v2.get$y(), v1.get$y());
      u1 = $.add($.mul(tempX, temp2X), $.mul(tempY, temp2Y));
      temp3X = $.sub(cLocalx, v2.get$x());
      temp3Y = $.sub(cLocaly, v2.get$y());
      temp4X = $.sub(v1.get$x(), v2.get$x());
      temp4Y = $.sub(v1.get$y(), v2.get$y());
      u2 = $.add($.mul(temp3X, temp4X), $.mul(temp3Y, temp4Y));
      if ($.leB(u1, 0)) {
        dx = $.sub(cLocalx, v1.get$x());
        dy = $.sub(cLocaly, v1.get$y());
        if ($.gtB($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(radius, radius)))
          return;
        manifold.set$pointCount(1);
        manifold.set$type(1);
        t1 = $.sub(cLocalx, v1.get$x());
        manifold.get$localNormal().set$x(t1);
        t1 = $.sub(cLocaly, v1.get$y());
        manifold.get$localNormal().set$y(t1);
        manifold.get$localNormal().normalize$0();
        manifold.get$localPoint().setFrom$1(v1);
        $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
        $.index(manifold.get$points(), 0).get$id().zero$0();
      } else {
        t1 = $.leB(u2, 0);
        t2 = v2.get$x();
        if (t1) {
          dx = $.sub(cLocalx, t2);
          dy = $.sub(cLocaly, v2.get$y());
          if ($.gtB($.add($.mul(dx, dx), $.mul(dy, dy)), $.mul(radius, radius)))
            return;
          manifold.set$pointCount(1);
          manifold.set$type(1);
          t1 = $.sub(cLocalx, v2.get$x());
          manifold.get$localNormal().set$x(t1);
          t1 = $.sub(cLocaly, v2.get$y());
          manifold.get$localNormal().set$y(t1);
          manifold.get$localNormal().normalize$0();
          manifold.get$localPoint().setFrom$1(v2);
          $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
          $.index(manifold.get$points(), 0).get$id().zero$0();
        } else {
          fcx = $.mul($.add(v1.get$x(), t2), 0.5);
          fcy = $.mul($.add(v1.get$y(), v2.get$y()), 0.5);
          tx = $.sub(cLocalx, fcx);
          ty = $.sub(cLocaly, fcy);
          norm = $.index(normals, normalIndex);
          if ($.gtB($.add($.mul(tx, norm.get$x()), $.mul(ty, norm.get$y())), radius))
            return;
          manifold.set$pointCount(1);
          manifold.set$type(1);
          manifold.get$localNormal().setFrom$1($.index(normals, normalIndex));
          manifold.get$localPoint().set$x(fcx);
          manifold.get$localPoint().set$y(fcy);
          $.index(manifold.get$points(), 0).get$localPoint().setFrom$1(circle.get$position());
          $.index(manifold.get$points(), 0).get$id().zero$0();
        }
      }
  }
},
 edgeSeparation$5: function(poly1, xf1, edge1, poly2, xf2) {
  var vertices1, normals1, count2, vertices2, R, v, t5, t6, t8, t10, t11, t13, normal1Worldy, normal1Worldx, R1, t15, normal1x, t18, normal1y, t1, index, minDot, i, a, t2, t4, dot, v3, t3, t7, t9, v1y, t12, t14, t16, v1x, v4, t21, t23, t25, t27, v2y, t29, t31, t33, t35, t37;
  poly1.get$vertexCount();
  vertices1 = poly1.get$vertices();
  if (typeof vertices1 !== 'string' && (typeof vertices1 !== 'object' || vertices1 === null || vertices1.constructor !== Array && !vertices1.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(1, poly1, xf1, edge1, poly2, xf2, vertices1);
  normals1 = poly1.get$normals();
  if (typeof normals1 !== 'string' && (typeof normals1 !== 'object' || normals1 === null || normals1.constructor !== Array && !normals1.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(2, xf1, edge1, poly2, xf2, vertices1, normals1);
  count2 = poly2.get$vertexCount();
  if (typeof count2 !== 'number')
    return this.edgeSeparation$5$bailout(3, xf1, edge1, poly2, xf2, vertices1, normals1, count2);
  vertices2 = poly2.get$vertices();
  if (typeof vertices2 !== 'string' && (typeof vertices2 !== 'object' || vertices2 === null || vertices2.constructor !== Array && !vertices2.is$JavaScriptIndexingBehavior()))
    return this.edgeSeparation$5$bailout(4, xf1, edge1, xf2, vertices1, normals1, count2, vertices2);
  R = xf1.get$rotation();
  if (edge1 !== (edge1 | 0))
    throw $.iae(edge1);
  if (edge1 < 0 || edge1 >= normals1.length)
    throw $.ioore(edge1);
  v = normals1[edge1];
  t5 = R.get$col1();
  t6 = t5.get$y();
  if (t6 !== (t6 | 0))
    return this.edgeSeparation$5$bailout(5, xf1, edge1, xf2, t6, vertices1, count2, vertices2, R, v);
  t8 = v.get$x();
  if (t8 !== (t8 | 0))
    return this.edgeSeparation$5$bailout(6, xf1, edge1, t8, xf2, t6, vertices1, count2, vertices2, R, v);
  t6 *= t8;
  t10 = R.get$col2();
  t11 = t10.get$y();
  if (t11 !== (t11 | 0))
    return this.edgeSeparation$5$bailout(7, xf1, edge1, xf2, t6, t11, vertices1, count2, vertices2, R, v);
  t13 = v.get$y();
  if (t13 !== (t13 | 0))
    return this.edgeSeparation$5$bailout(8, xf1, edge1, xf2, t6, t11, t13, vertices1, count2, vertices2, R, v);
  normal1Worldy = t6 + t11 * t13;
  t5 = t5.get$x();
  if (t5 !== (t5 | 0))
    return this.edgeSeparation$5$bailout(9, xf1, edge1, xf2, vertices1, count2, vertices2, normal1Worldy, R, t5, v);
  t8 = t5 * t8;
  t10 = t10.get$x();
  if (t10 !== (t10 | 0))
    return this.edgeSeparation$5$bailout(11, t8, xf1, edge1, t10, xf2, vertices1, count2, vertices2, normal1Worldy, R, v);
  normal1Worldx = t8 + t10 * t13;
  R1 = xf2.get$rotation();
  t8 = R1.get$col1();
  t15 = t8.get$x();
  if (t15 !== (t15 | 0))
    return this.edgeSeparation$5$bailout(13, t15, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, normal1Worldy, R);
  t15 = normal1Worldx * t15;
  t8 = t8.get$y();
  if (t8 !== (t8 | 0))
    return this.edgeSeparation$5$bailout(14, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, t15, R, t8, normal1Worldy);
  normal1x = t15 + normal1Worldy * t8;
  t15 = R1.get$col2();
  t18 = t15.get$x();
  if (t18 !== (t18 | 0))
    return this.edgeSeparation$5$bailout(15, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, normal1x, t18, normal1Worldy);
  t18 = normal1Worldx * t18;
  t15 = t15.get$y();
  if (t15 !== (t15 | 0))
    return this.edgeSeparation$5$bailout(16, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, normal1x, t18, t15, normal1Worldy);
  normal1y = t18 + normal1Worldy * t15;
  for (t1 = vertices2.length, index = 0, minDot = 99999999999999, i = 0; i < count2; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    a = vertices2[i];
    t2 = a.get$x();
    if (t2 !== (t2 | 0))
      return this.edgeSeparation$5$bailout(17, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, index, minDot, i, normal1x, a, t2, normal1y, normal1Worldy);
    t2 *= normal1x;
    t4 = a.get$y();
    if (t4 !== (t4 | 0))
      return this.edgeSeparation$5$bailout(18, xf1, edge1, xf2, normal1Worldx, R1, vertices1, count2, vertices2, R, index, minDot, i, normal1x, normal1Worldy, normal1y, t2, t4);
    dot = t2 + t4 * normal1y;
    if (dot < minDot) {
      minDot = dot;
      index = i;
    }
  }
  if (edge1 >= vertices1.length)
    throw $.ioore(edge1);
  v3 = vertices1[edge1];
  t1 = xf1.get$position().get$y();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(19, xf1, v3, xf2, t1, normal1Worldx, R1, vertices2, normal1Worldy, R, index);
  t3 = R.get$col1().get$y();
  if (typeof t3 !== 'number')
    return this.edgeSeparation$5$bailout(20, xf1, v3, xf2, t1, t3, normal1Worldx, R1, vertices2, normal1Worldy, R, index);
  t5 = v3.get$x();
  if (typeof t5 !== 'number')
    return this.edgeSeparation$5$bailout(21, xf1, xf2, normal1Worldx, R1, vertices2, R, index, v3, t1, t3, t5, normal1Worldy);
  t1 += t3 * t5;
  t7 = R.get$col2().get$y();
  if (typeof t7 !== 'number')
    return this.edgeSeparation$5$bailout(22, t7, xf1, v3, xf2, normal1Worldx, R1, vertices2, normal1Worldy, R, t1, index);
  t9 = v3.get$y();
  if (typeof t9 !== 'number')
    return this.edgeSeparation$5$bailout(23, xf1, xf2, normal1Worldx, R1, vertices2, R, index, v3, normal1Worldy, t1, t7, t9);
  v1y = t1 + t7 * t9;
  t1 = xf1.get$position().get$x();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(24, v1y, v3, xf2, t1, normal1Worldx, R1, vertices2, normal1Worldy, R, index);
  t12 = R.get$col1().get$x();
  if (typeof t12 !== 'number')
    return this.edgeSeparation$5$bailout(25, v1y, v3, xf2, t1, t12, normal1Worldx, R1, vertices2, normal1Worldy, R, index);
  t14 = v3.get$x();
  if (typeof t14 !== 'number')
    return this.edgeSeparation$5$bailout(26, v1y, xf2, t1, t12, normal1Worldx, R1, t14, vertices2, R, index, v3, normal1Worldy);
  t1 += t12 * t14;
  t16 = R.get$col2().get$x();
  if (typeof t16 !== 'number')
    return this.edgeSeparation$5$bailout(27, v1y, v3, xf2, normal1Worldx, R1, normal1Worldy, vertices2, t16, t1, index);
  t18 = v3.get$y();
  if (typeof t18 !== 'number')
    return this.edgeSeparation$5$bailout(28, t1, v1y, xf2, normal1Worldx, R1, normal1Worldy, vertices2, t16, t18, index);
  v1x = t1 + t16 * t18;
  if (index < 0 || index >= vertices2.length)
    throw $.ioore(index);
  v4 = vertices2[index];
  t1 = xf2.get$position().get$y();
  if (typeof t1 !== 'number')
    return this.edgeSeparation$5$bailout(29, v1x, v1y, v4, xf2, t1, normal1Worldx, R1, normal1Worldy);
  t21 = R1.get$col1().get$y();
  if (typeof t21 !== 'number')
    return this.edgeSeparation$5$bailout(30, v1x, v1y, v4, xf2, t1, normal1Worldx, R1, t21, normal1Worldy);
  t23 = v4.get$x();
  if (typeof t23 !== 'number')
    return this.edgeSeparation$5$bailout(31, v1x, v1y, v4, xf2, t1, normal1Worldx, R1, t21, t23, normal1Worldy);
  t1 += t21 * t23;
  t25 = R1.get$col2().get$y();
  if (typeof t25 !== 'number')
    return this.edgeSeparation$5$bailout(32, v1x, v1y, v4, xf2, normal1Worldx, R1, normal1Worldy, t1, t25);
  t27 = v4.get$y();
  if (typeof t27 !== 'number')
    return this.edgeSeparation$5$bailout(33, t27, v1x, v1y, v4, xf2, normal1Worldx, R1, normal1Worldy, t1, t25);
  v2y = t1 + t25 * t27 - v1y;
  t29 = xf2.get$position().get$x();
  if (typeof t29 !== 'number')
    return this.edgeSeparation$5$bailout(34, v1x, v4, v2y, normal1Worldx, R1, t29, normal1Worldy);
  t31 = R1.get$col1().get$x();
  if (typeof t31 !== 'number')
    return this.edgeSeparation$5$bailout(35, v1x, v4, v2y, normal1Worldx, R1, t29, t31, normal1Worldy);
  t33 = v4.get$x();
  if (typeof t33 !== 'number')
    return this.edgeSeparation$5$bailout(36, v1x, v4, v2y, normal1Worldx, R1, t29, t31, normal1Worldy, t33);
  t29 += t31 * t33;
  t35 = R1.get$col2().get$x();
  if (typeof t35 !== 'number')
    return this.edgeSeparation$5$bailout(37, t35, v1x, v4, v2y, normal1Worldx, normal1Worldy, t29);
  t37 = v4.get$y();
  if (typeof t37 !== 'number')
    return this.edgeSeparation$5$bailout(38, t35, v1x, t37, v2y, normal1Worldx, normal1Worldy, t29);
  return (t29 + t35 * t37 - v1x) * normal1Worldx + v2y * normal1Worldy;
},
 edgeSeparation$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16) {
  switch (state0) {
    case 1:
      vertices1 = env5;
      xf2 = env4;
      poly2 = env3;
      edge1 = env2;
      xf1 = env1;
      poly1 = env0;
      break;
    case 2:
      normals1 = env5;
      vertices1 = env4;
      xf2 = env3;
      poly2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 3:
      count2 = env6;
      normals1 = env5;
      vertices1 = env4;
      xf2 = env3;
      poly2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 4:
      vertices2 = env6;
      count2 = env5;
      normals1 = env4;
      vertices1 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 5:
      v = env8;
      R = env7;
      vertices2 = env6;
      count2 = env5;
      vertices1 = env4;
      t5 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 6:
      v = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      t5 = env4;
      xf2 = env3;
      t7 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 7:
      v = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      t5 = env4;
      t7 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 8:
      v = env10;
      R = env9;
      vertices2 = env8;
      count2 = env7;
      vertices1 = env6;
      t10 = env5;
      t5 = env4;
      t7 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 9:
      v = env9;
      t7 = env8;
      R = env7;
      normal1Worldy = env6;
      vertices2 = env5;
      count2 = env4;
      vertices1 = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 10:
      v = env10;
      t7 = env9;
      R = env8;
      normal1Worldy = env7;
      vertices2 = env6;
      count2 = env5;
      vertices1 = env4;
      xf2 = env3;
      t13 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 11:
      v = env10;
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      xf2 = env4;
      t7 = env3;
      edge1 = env2;
      xf1 = env1;
      t13 = env0;
      break;
    case 12:
      R = env10;
      normal1Worldy = env9;
      vertices2 = env8;
      count2 = env7;
      vertices1 = env6;
      t16 = env5;
      xf2 = env4;
      t7 = env3;
      edge1 = env2;
      xf1 = env1;
      t13 = env0;
      break;
    case 13:
      R = env10;
      normal1Worldy = env9;
      vertices2 = env8;
      count2 = env7;
      vertices1 = env6;
      R1 = env5;
      normal1Worldx = env4;
      xf2 = env3;
      edge1 = env2;
      xf1 = env1;
      t13 = env0;
      break;
    case 14:
      normal1Worldy = env11;
      t19 = env10;
      R = env9;
      t13 = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 15:
      normal1Worldy = env11;
      t13 = env10;
      normal1x = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 16:
      normal1Worldy = env12;
      t22 = env11;
      t13 = env10;
      normal1x = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 17:
      normal1Worldy = env16;
      normal1y = env15;
      t1 = env14;
      a = env13;
      normal1x = env12;
      i = env11;
      minDot = env10;
      index = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 18:
      t3 = env16;
      t1 = env15;
      normal1y = env14;
      normal1Worldy = env13;
      normal1x = env12;
      i = env11;
      minDot = env10;
      index = env9;
      R = env8;
      vertices2 = env7;
      count2 = env6;
      vertices1 = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      edge1 = env1;
      xf1 = env0;
      break;
    case 19:
      index = env9;
      R = env8;
      normal1Worldy = env7;
      vertices2 = env6;
      R1 = env5;
      normal1Worldx = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      xf1 = env0;
      break;
    case 20:
      index = env10;
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      R1 = env6;
      normal1Worldx = env5;
      t3 = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      xf1 = env0;
      break;
    case 21:
      normal1Worldy = env11;
      t5 = env10;
      t3 = env9;
      t1 = env8;
      v3 = env7;
      index = env6;
      R = env5;
      vertices2 = env4;
      R1 = env3;
      normal1Worldx = env2;
      xf2 = env1;
      xf1 = env0;
      break;
    case 22:
      index = env10;
      t1 = env9;
      R = env8;
      normal1Worldy = env7;
      vertices2 = env6;
      R1 = env5;
      normal1Worldx = env4;
      xf2 = env3;
      v3 = env2;
      xf1 = env1;
      t7 = env0;
      break;
    case 23:
      t9 = env11;
      t7 = env10;
      t1 = env9;
      normal1Worldy = env8;
      v3 = env7;
      index = env6;
      R = env5;
      vertices2 = env4;
      R1 = env3;
      normal1Worldx = env2;
      xf2 = env1;
      xf1 = env0;
      break;
    case 24:
      index = env9;
      R = env8;
      normal1Worldy = env7;
      vertices2 = env6;
      R1 = env5;
      normal1Worldx = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      v1y = env0;
      break;
    case 25:
      index = env10;
      R = env9;
      normal1Worldy = env8;
      vertices2 = env7;
      R1 = env6;
      normal1Worldx = env5;
      t12 = env4;
      t1 = env3;
      xf2 = env2;
      v3 = env1;
      v1y = env0;
      break;
    case 26:
      normal1Worldy = env11;
      v3 = env10;
      index = env9;
      R = env8;
      vertices2 = env7;
      t14 = env6;
      R1 = env5;
      normal1Worldx = env4;
      t12 = env3;
      t1 = env2;
      xf2 = env1;
      v1y = env0;
      break;
    case 27:
      index = env9;
      t1 = env8;
      t16 = env7;
      vertices2 = env6;
      normal1Worldy = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      v3 = env1;
      v1y = env0;
      break;
    case 28:
      index = env9;
      t18 = env8;
      t16 = env7;
      vertices2 = env6;
      normal1Worldy = env5;
      R1 = env4;
      normal1Worldx = env3;
      xf2 = env2;
      v1y = env1;
      t1 = env0;
      break;
    case 29:
      normal1Worldy = env7;
      R1 = env6;
      normal1Worldx = env5;
      t1 = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 30:
      normal1Worldy = env8;
      t21 = env7;
      R1 = env6;
      normal1Worldx = env5;
      t1 = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 31:
      normal1Worldy = env9;
      t23 = env8;
      t21 = env7;
      R1 = env6;
      normal1Worldx = env5;
      t1 = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 32:
      t25 = env8;
      t1 = env7;
      normal1Worldy = env6;
      R1 = env5;
      normal1Worldx = env4;
      xf2 = env3;
      v4 = env2;
      v1y = env1;
      v1x = env0;
      break;
    case 33:
      t25 = env9;
      t1 = env8;
      normal1Worldy = env7;
      R1 = env6;
      normal1Worldx = env5;
      xf2 = env4;
      v4 = env3;
      v1y = env2;
      v1x = env1;
      t27 = env0;
      break;
    case 34:
      normal1Worldy = env6;
      t29 = env5;
      R1 = env4;
      normal1Worldx = env3;
      v2y = env2;
      v4 = env1;
      v1x = env0;
      break;
    case 35:
      normal1Worldy = env7;
      t31 = env6;
      t29 = env5;
      R1 = env4;
      normal1Worldx = env3;
      v2y = env2;
      v4 = env1;
      v1x = env0;
      break;
    case 36:
      t33 = env8;
      normal1Worldy = env7;
      t31 = env6;
      t29 = env5;
      R1 = env4;
      normal1Worldx = env3;
      v2y = env2;
      v4 = env1;
      v1x = env0;
      break;
    case 37:
      t29 = env6;
      normal1Worldy = env5;
      normal1Worldx = env4;
      v2y = env3;
      v4 = env2;
      v1x = env1;
      t35 = env0;
      break;
    case 38:
      t29 = env6;
      normal1Worldy = env5;
      normal1Worldx = env4;
      v2y = env3;
      t37 = env2;
      v1x = env1;
      t35 = env0;
      break;
  }
  switch (state0) {
    case 0:
      poly1.get$vertexCount();
      vertices1 = poly1.get$vertices();
    case 1:
      state0 = 0;
      normals1 = poly1.get$normals();
    case 2:
      state0 = 0;
      count2 = poly2.get$vertexCount();
    case 3:
      state0 = 0;
      vertices2 = poly2.get$vertices();
    case 4:
      state0 = 0;
      R = xf1.get$rotation();
      v = $.index(normals1, edge1);
      t5 = R.get$col1().get$y();
    case 5:
      state0 = 0;
      t7 = v.get$x();
    case 6:
      state0 = 0;
      t7 = $.mul(t5, t7);
      t5 = R.get$col2().get$y();
    case 7:
      state0 = 0;
      t10 = v.get$y();
    case 8:
      state0 = 0;
      normal1Worldy = $.add(t7, $.mul(t5, t10));
      t7 = R.get$col1().get$x();
    case 9:
      state0 = 0;
      t13 = v.get$x();
    case 10:
      state0 = 0;
      t13 = $.mul(t7, t13);
      t7 = R.get$col2().get$x();
    case 11:
      state0 = 0;
      t16 = v.get$y();
    case 12:
      state0 = 0;
      normal1Worldx = $.add(t13, $.mul(t7, t16));
      R1 = xf2.get$rotation();
      t13 = R1.get$col1().get$x();
    case 13:
      state0 = 0;
      t13 = $.mul(normal1Worldx, t13);
      t19 = R1.get$col1().get$y();
    case 14:
      state0 = 0;
      normal1x = $.add(t13, $.mul(normal1Worldy, t19));
      t13 = R1.get$col2().get$x();
    case 15:
      state0 = 0;
      t13 = $.mul(normal1Worldx, t13);
      t22 = R1.get$col2().get$y();
    case 16:
      state0 = 0;
      normal1y = $.add(t13, $.mul(normal1Worldy, t22));
      index = 0;
      minDot = 99999999999999;
      i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, count2))
                break L0;
              a = $.index(vertices2, i);
              t1 = a.get$x();
            case 17:
              state0 = 0;
              t1 = $.mul(t1, normal1x);
              t3 = a.get$y();
            case 18:
              state0 = 0;
              dot = $.add(t1, $.mul(t3, normal1y));
              if ($.ltB(dot, minDot)) {
                minDot = dot;
                index = i;
              }
              ++i;
          }
      v3 = $.index(vertices1, edge1);
      t1 = xf1.get$position().get$y();
    case 19:
      state0 = 0;
      t3 = R.get$col1().get$y();
    case 20:
      state0 = 0;
      t5 = v3.get$x();
    case 21:
      state0 = 0;
      t1 = $.add(t1, $.mul(t3, t5));
      t7 = R.get$col2().get$y();
    case 22:
      state0 = 0;
      t9 = v3.get$y();
    case 23:
      state0 = 0;
      v1y = $.add(t1, $.mul(t7, t9));
      t1 = xf1.get$position().get$x();
    case 24:
      state0 = 0;
      t12 = R.get$col1().get$x();
    case 25:
      state0 = 0;
      t14 = v3.get$x();
    case 26:
      state0 = 0;
      t1 = $.add(t1, $.mul(t12, t14));
      t16 = R.get$col2().get$x();
    case 27:
      state0 = 0;
      t18 = v3.get$y();
    case 28:
      state0 = 0;
      v1x = $.add(t1, $.mul(t16, t18));
      v4 = $.index(vertices2, index);
      t1 = xf2.get$position().get$y();
    case 29:
      state0 = 0;
      t21 = R1.get$col1().get$y();
    case 30:
      state0 = 0;
      t23 = v4.get$x();
    case 31:
      state0 = 0;
      t1 = $.add(t1, $.mul(t21, t23));
      t25 = R1.get$col2().get$y();
    case 32:
      state0 = 0;
      t27 = v4.get$y();
    case 33:
      state0 = 0;
      v2y = $.sub($.add(t1, $.mul(t25, t27)), v1y);
      t29 = xf2.get$position().get$x();
    case 34:
      state0 = 0;
      t31 = R1.get$col1().get$x();
    case 35:
      state0 = 0;
      t33 = v4.get$x();
    case 36:
      state0 = 0;
      t29 = $.add(t29, $.mul(t31, t33));
      t35 = R1.get$col2().get$x();
    case 37:
      state0 = 0;
      t37 = v4.get$y();
    case 38:
      var vertices1, xf2, poly2, edge1, xf1, poly1, normals1, count2, vertices2, R, v, t5, t7, t10, normal1Worldy, t13, t16, normal1Worldx, R1, t19, normal1x, t22, normal1y, index, minDot, i, a, t1, t3, dot, v3, t9, v1y, t12, t14, t18, v1x, v4, t21, t23, t25, t27, v2y, t29, t31, t33, t35, t37;
      state0 = 0;
      return $.add($.mul($.sub($.add(t29, $.mul(t35, t37)), v1x), normal1Worldx), $.mul(v2y, normal1Worldy));
  }
},
 findMaxSeparation$5: function(results, poly1, xf1, poly2, xf2) {
  var count1, normals1, v, predy, predx, v1, tempy, dx, dy, R, dLocal1x, dLocal1y, maxDot, i, edge, norm, dot, s, prevEdge, sPrev, nextEdge, sNext, bestSeparation, bestEdge, increment, t1, edge0;
  count1 = poly1.get$vertexCount();
  if (typeof count1 !== 'number')
    return this.findMaxSeparation$5$bailout(1, results, poly1, xf1, poly2, xf2, count1);
  normals1 = poly1.get$normals();
  if (typeof normals1 !== 'string' && (typeof normals1 !== 'object' || normals1 === null || normals1.constructor !== Array && !normals1.is$JavaScriptIndexingBehavior()))
    return this.findMaxSeparation$5$bailout(2, results, poly1, xf1, poly2, xf2, count1, normals1);
  v = poly2.get$centroid();
  predy = $.add($.add(xf2.get$position().get$y(), $.mul(xf2.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$y(), v.get$y()));
  predx = $.add($.add(xf2.get$position().get$x(), $.mul(xf2.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$x(), v.get$y()));
  v1 = poly1.get$centroid();
  tempy = $.add($.add(xf1.get$position().get$y(), $.mul(xf1.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$y(), v1.get$y()));
  dx = $.sub(predx, $.add($.add(xf1.get$position().get$x(), $.mul(xf1.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$x(), v1.get$y())));
  dy = $.sub(predy, tempy);
  R = xf1.get$rotation();
  dLocal1x = $.add($.mul(dx, R.get$col1().get$x()), $.mul(dy, R.get$col1().get$y()));
  if (typeof dLocal1x !== 'number')
    return this.findMaxSeparation$5$bailout(3, results, dLocal1x, xf1, poly2, xf2, dx, dy, poly1, normals1, count1, R);
  dLocal1y = $.add($.mul(dx, R.get$col2().get$x()), $.mul(dy, R.get$col2().get$y()));
  if (typeof dLocal1y !== 'number')
    return this.findMaxSeparation$5$bailout(4, results, dLocal1x, xf1, poly2, xf2, poly1, normals1, count1, dLocal1y);
  for (maxDot = 1e-12, i = 0, edge = 0; i < count1; ++i) {
    if (i >= normals1.length)
      throw $.ioore(i);
    norm = normals1[i];
    dot = $.add($.mul(norm.get$x(), dLocal1x), $.mul(norm.get$y(), dLocal1y));
    if ($.gtB(dot, maxDot)) {
      maxDot = dot;
      edge = i;
    }
  }
  s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
  prevEdge = edge - 1;
  prevEdge = prevEdge >= 0 ? prevEdge : count1 - 1;
  sPrev = this.edgeSeparation$5(poly1, xf1, prevEdge, poly2, xf2);
  nextEdge = edge + 1;
  nextEdge = nextEdge < count1 ? nextEdge : 0;
  sNext = this.edgeSeparation$5(poly1, xf1, nextEdge, poly2, xf2);
  if ($.gtB(sPrev, s) && $.gtB(sPrev, sNext)) {
    bestSeparation = sPrev;
    bestEdge = prevEdge;
    increment = -1;
  } else {
    if ($.gtB(sNext, s))
      ;
    else {
      results.edgeIndex = edge;
      results.separation = s;
      return;
    }
    bestSeparation = sNext;
    bestEdge = nextEdge;
    increment = 1;
  }
  if (typeof bestSeparation !== 'number')
    return this.findMaxSeparation$5$bailout(5, results, poly1, xf1, poly2, xf2, increment, count1, bestEdge, bestSeparation);
  for (t1 = increment === -1, edge = count1 - 1; true; bestSeparation = s, bestEdge = edge0) {
    if (t1) {
      edge0 = bestEdge - 1;
      edge0 = edge0 >= 0 ? edge0 : edge;
    } else {
      edge0 = bestEdge + 1;
      edge0 = edge0 < count1 ? edge0 : 0;
    }
    s = this.edgeSeparation$5(poly1, xf1, edge0, poly2, xf2);
    if ($.gtB(s, bestSeparation))
      ;
    else
      break;
  }
  results.edgeIndex = bestEdge;
  results.separation = bestSeparation;
},
 findMaxSeparation$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      count1 = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      poly1 = env1;
      results = env0;
      break;
    case 2:
      normals1 = env6;
      count1 = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      poly1 = env1;
      results = env0;
      break;
    case 3:
      R = env10;
      count1 = env9;
      normals1 = env8;
      poly1 = env7;
      dy = env6;
      dx = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      dLocal1x = env1;
      results = env0;
      break;
    case 4:
      dLocal1y = env8;
      count1 = env7;
      normals1 = env6;
      poly1 = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      dLocal1x = env1;
      results = env0;
      break;
    case 5:
      bestSeparation = env8;
      bestEdge = env7;
      count1 = env6;
      increment = env5;
      xf2 = env4;
      poly2 = env3;
      xf1 = env2;
      poly1 = env1;
      results = env0;
      break;
  }
  switch (state0) {
    case 0:
      count1 = poly1.get$vertexCount();
    case 1:
      state0 = 0;
      normals1 = poly1.get$normals();
    case 2:
      state0 = 0;
      v = poly2.get$centroid();
      predy = $.add($.add(xf2.get$position().get$y(), $.mul(xf2.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$y(), v.get$y()));
      predx = $.add($.add(xf2.get$position().get$x(), $.mul(xf2.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xf2.get$rotation().get$col2().get$x(), v.get$y()));
      v1 = poly1.get$centroid();
      tempy = $.add($.add(xf1.get$position().get$y(), $.mul(xf1.get$rotation().get$col1().get$y(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$y(), v1.get$y()));
      dx = $.sub(predx, $.add($.add(xf1.get$position().get$x(), $.mul(xf1.get$rotation().get$col1().get$x(), v1.get$x())), $.mul(xf1.get$rotation().get$col2().get$x(), v1.get$y())));
      dy = $.sub(predy, tempy);
      R = xf1.get$rotation();
      dLocal1x = $.add($.mul(dx, R.get$col1().get$x()), $.mul(dy, R.get$col1().get$y()));
    case 3:
      state0 = 0;
      dLocal1y = $.add($.mul(dx, R.get$col2().get$x()), $.mul(dy, R.get$col2().get$y()));
    case 4:
      state0 = 0;
      for (maxDot = 1e-12, i = 0, edge = 0; $.ltB(i, count1); ++i) {
        norm = $.index(normals1, i);
        dot = $.add($.mul(norm.get$x(), dLocal1x), $.mul(norm.get$y(), dLocal1y));
        if ($.gtB(dot, maxDot)) {
          maxDot = dot;
          edge = i;
        }
      }
      s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
      prevEdge = edge - 1;
      prevEdge = prevEdge >= 0 ? prevEdge : $.sub(count1, 1);
      sPrev = this.edgeSeparation$5(poly1, xf1, prevEdge, poly2, xf2);
      nextEdge = edge + 1;
      nextEdge = $.ltB(nextEdge, count1) ? nextEdge : 0;
      sNext = this.edgeSeparation$5(poly1, xf1, nextEdge, poly2, xf2);
      if ($.gtB(sPrev, s) && $.gtB(sPrev, sNext)) {
        bestSeparation = sPrev;
        bestEdge = prevEdge;
        increment = -1;
      } else {
        if ($.gtB(sNext, s))
          ;
        else {
          results.edgeIndex = edge;
          results.separation = s;
          return;
        }
        bestSeparation = sNext;
        bestEdge = nextEdge;
        increment = 1;
      }
    case 5:
      var count1, xf2, poly2, xf1, poly1, results, normals1, v, predy, predx, v1, tempy, dx, dy, R, dLocal1x, dLocal1y, maxDot, i, edge, norm, dot, s, prevEdge, sPrev, nextEdge, sNext, bestSeparation, bestEdge, increment, t1;
      state0 = 0;
      for (t1 = increment === -1; true; bestSeparation = s, bestEdge = edge) {
        if (t1)
          edge = $.geB($.sub(bestEdge, 1), 0) ? $.sub(bestEdge, 1) : $.sub(count1, 1);
        else
          edge = $.ltB($.add(bestEdge, 1), count1) ? $.add(bestEdge, 1) : 0;
        s = this.edgeSeparation$5(poly1, xf1, edge, poly2, xf2);
        if ($.gtB(s, bestSeparation))
          ;
        else
          break;
      }
      results.edgeIndex = bestEdge;
      results.separation = bestSeparation;
  }
},
 findIncidentEdge$6: function(c, poly1, xf1, edge1, poly2, xf2) {
  var normals1, count2, vertices2, normals2, t3, t4, t5, index, minDot, i, t1, dot, i2;
  poly1.get$vertexCount();
  normals1 = poly1.get$normals();
  count2 = poly2.get$vertexCount();
  if (typeof count2 !== 'number')
    return this.findIncidentEdge$6$bailout(1, c, xf1, edge1, poly2, xf2, normals1, count2);
  vertices2 = poly2.get$vertices();
  normals2 = poly2.get$normals();
  if (typeof normals2 !== 'string' && (typeof normals2 !== 'object' || normals2 === null || normals2.constructor !== Array && !normals2.is$JavaScriptIndexingBehavior()))
    return this.findIncidentEdge$6$bailout(2, c, xf1, edge1, xf2, normals1, count2, vertices2, normals2);
  t3 = xf1.get$rotation();
  t4 = $.index(normals1, edge1);
  t5 = this.normal1;
  $.Matrix22_mulMatrixAndVectorToOut(t3, t4, t5);
  $.Matrix22_mulTransMatrixAndVectorToOut(xf2.get$rotation(), t5, t5);
  for (index = 0, minDot = 99999999999999, i = 0; i < count2; ++i) {
    if (i >= normals2.length)
      throw $.ioore(i);
    t1 = normals2[i];
    dot = $.add($.mul(t5.x, t1.get$x()), $.mul(t5.y, t1.get$y()));
    if ($.ltB(dot, minDot)) {
      minDot = dot;
      index = i;
    }
  }
  i2 = index + 1;
  i2 = i2 < count2 ? i2 : 0;
  $.Transform_mulToOut(xf2, $.index(vertices2, index), $.index(c, 0).get$v());
  $.index(c, 0).get$id().get$features().set$referenceEdge(edge1);
  $.index(c, 0).get$id().get$features().set$incidentEdge(index);
  $.index(c, 0).get$id().get$features().set$incidentVertex(0);
  $.Transform_mulToOut(xf2, $.index(vertices2, i2), $.index(c, 1).get$v());
  $.index(c, 1).get$id().get$features().set$referenceEdge(edge1);
  $.index(c, 1).get$id().get$features().set$incidentEdge(i2);
  $.index(c, 1).get$id().get$features().set$incidentVertex(1);
},
 findIncidentEdge$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      count2 = env6;
      normals1 = env5;
      xf2 = env4;
      poly2 = env3;
      edge1 = env2;
      xf1 = env1;
      c = env0;
      break;
    case 2:
      normals2 = env7;
      vertices2 = env6;
      count2 = env5;
      normals1 = env4;
      xf2 = env3;
      edge1 = env2;
      xf1 = env1;
      c = env0;
      break;
  }
  switch (state0) {
    case 0:
      poly1.get$vertexCount();
      normals1 = poly1.get$normals();
      count2 = poly2.get$vertexCount();
    case 1:
      state0 = 0;
      vertices2 = poly2.get$vertices();
      normals2 = poly2.get$normals();
    case 2:
      var normals1, count2, xf2, poly2, edge1, xf1, c, vertices2, normals2, t3, t4, t5, index, minDot, i, t1, dot, i2;
      state0 = 0;
      t3 = xf1.get$rotation();
      t4 = $.index(normals1, edge1);
      t5 = this.normal1;
      $.Matrix22_mulMatrixAndVectorToOut(t3, t4, t5);
      $.Matrix22_mulTransMatrixAndVectorToOut(xf2.get$rotation(), t5, t5);
      for (index = 0, minDot = 99999999999999, i = 0; $.ltB(i, count2); ++i) {
        t1 = $.index(normals2, i);
        dot = $.add($.mul(t5.x, t1.get$x()), $.mul(t5.y, t1.get$y()));
        if ($.ltB(dot, minDot)) {
          minDot = dot;
          index = i;
        }
      }
      i2 = index + 1;
      i2 = $.ltB(i2, count2) ? i2 : 0;
      $.Transform_mulToOut(xf2, $.index(vertices2, index), $.index(c, 0).get$v());
      $.index(c, 0).get$id().get$features().set$referenceEdge(edge1);
      $.index(c, 0).get$id().get$features().set$incidentEdge(index);
      $.index(c, 0).get$id().get$features().set$incidentVertex(0);
      $.Transform_mulToOut(xf2, $.index(vertices2, i2), $.index(c, 1).get$v());
      $.index(c, 1).get$id().get$features().set$referenceEdge(edge1);
      $.index(c, 1).get$id().get$features().set$incidentEdge(i2);
      $.index(c, 1).get$id().get$features().set$incidentVertex(1);
  }
},
 collidePolygons$5: function(manifold, polyA, xfA, polyB, xfB) {
  var totalRadius, t2, t1, t3, t4, edge1, xf2, xf1, poly2, poly1, flip, count1, vertices1, t5, t6, t7, t8, frontOffset, sideOffset1, sideOffset2, t9, np, pointCount, i, cp;
  manifold.set$pointCount(0);
  totalRadius = $.add(polyA.get$radius(), polyB.get$radius());
  if (typeof totalRadius !== 'number')
    return this.collidePolygons$5$bailout(1, manifold, polyA, xfA, polyB, xfB, totalRadius);
  t2 = this.results1;
  this.findMaxSeparation$5(t2, polyA, xfA, polyB, xfB);
  if ($.gtB(t2.separation, totalRadius))
    return;
  t1 = this.results2;
  this.findMaxSeparation$5(t1, polyB, xfB, polyA, xfA);
  if ($.gtB(t1.separation, totalRadius))
    return;
  t3 = t1.separation;
  t4 = t2.separation;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  if ($.gtB(t3, 0.98 * t4 + 0.001)) {
    edge1 = t1.edgeIndex;
    manifold.set$type(2);
    xf2 = xfA;
    xf1 = xfB;
    poly2 = polyA;
    poly1 = polyB;
    flip = 1;
  } else {
    edge1 = t2.edgeIndex;
    manifold.set$type(1);
    xf2 = xfB;
    xf1 = xfA;
    poly2 = polyB;
    poly1 = polyA;
    flip = 0;
  }
  t1 = this.incidentEdge;
  this.findIncidentEdge$6(t1, poly1, xf1, edge1, poly2, xf2);
  count1 = poly1.get$vertexCount();
  vertices1 = poly1.get$vertices();
  t2 = this.v11;
  t2.setFrom$1($.index(vertices1, edge1));
  t3 = this.v12;
  t3.setFrom$1($.ltB($.add(edge1, 1), count1) ? $.index(vertices1, $.add(edge1, 1)) : $.index(vertices1, 0));
  t4 = this.localTangent;
  t4.setFrom$1(t3).subLocal$1(t2);
  t4.normalize$0();
  t5 = this.localNormal;
  $.Vector_crossVectorAndNumToOut(t4, 1, t5);
  t6 = this.planePoint;
  t6.setFrom$1(t2).addLocal$1(t3).mulLocal$1(0.5);
  t7 = xf1.get$rotation();
  t8 = this.tangent;
  $.Matrix22_mulMatrixAndVectorToOut(t7, t4, t8);
  t4 = this.normal;
  $.Vector_crossVectorAndNumToOut(t8, 1, t4);
  $.Transform_mulToOut(xf1, t2, t2);
  $.Transform_mulToOut(xf1, t3, t3);
  frontOffset = $.add($.mul(t4.x, t2.x), $.mul(t4.y, t2.y));
  if (typeof frontOffset !== 'number')
    return this.collidePolygons$5$bailout(2, xf2, manifold, flip, t4, t8, frontOffset, totalRadius, t1, t2, t3, t5, t6);
  sideOffset1 = $.add($.neg($.add($.mul(t8.x, t2.x), $.mul(t8.y, t2.y))), totalRadius);
  sideOffset2 = $.add($.add($.mul(t8.x, t3.x), $.mul(t8.y, t3.y)), totalRadius);
  t8.negateLocal$0();
  t9 = this.clipPoints1;
  np = $.Collision_clipSegmentToLine(t9, t1, t8, sideOffset1);
  t8.negateLocal$0();
  if (np < 2)
    return;
  t1 = this.clipPoints2;
  if ($.Collision_clipSegmentToLine(t1, t9, t8, sideOffset2) < 2)
    return;
  manifold.get$localNormal().setFrom$1(t5);
  manifold.get$localPoint().setFrom$1(t6);
  for (t2 = t1.length, pointCount = 0, i = 0; i < 2; ++i) {
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i].get$v();
    if ($.leB($.sub($.add($.mul(t4.x, t3.get$x()), $.mul(t4.y, t3.get$y())), frontOffset), totalRadius)) {
      cp = $.index(manifold.get$points(), pointCount);
      $.Transform_mulTransToOut(xf2, t1[i].get$v(), cp.get$localPoint());
      cp.get$id().setFrom$1(t1[i].get$id());
      cp.get$id().get$features().set$flip(flip);
      ++pointCount;
    }
  }
  manifold.set$pointCount(pointCount);
},
 collidePolygons$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state0) {
    case 1:
      totalRadius = env5;
      xfB = env4;
      polyB = env3;
      xfA = env2;
      polyA = env1;
      manifold = env0;
      break;
    case 2:
      t6 = env11;
      t5 = env10;
      t3 = env9;
      t2 = env8;
      t1 = env7;
      totalRadius = env6;
      frontOffset = env5;
      t8 = env4;
      t4 = env3;
      flip = env2;
      manifold = env1;
      xf2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      manifold.set$pointCount(0);
      totalRadius = $.add(polyA.get$radius(), polyB.get$radius());
    case 1:
      state0 = 0;
      t2 = this.results1;
      this.findMaxSeparation$5(t2, polyA, xfA, polyB, xfB);
      if ($.gtB(t2.separation, totalRadius))
        return;
      t1 = this.results2;
      this.findMaxSeparation$5(t1, polyB, xfB, polyA, xfA);
      if ($.gtB(t1.separation, totalRadius))
        return;
      t3 = t1.separation;
      t4 = t2.separation;
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      if ($.gtB(t3, 0.98 * t4 + 0.001)) {
        edge1 = t1.edgeIndex;
        manifold.set$type(2);
        xf2 = xfA;
        xf1 = xfB;
        poly2 = polyA;
        poly1 = polyB;
        flip = 1;
      } else {
        edge1 = t2.edgeIndex;
        manifold.set$type(1);
        xf2 = xfB;
        xf1 = xfA;
        poly2 = polyB;
        poly1 = polyA;
        flip = 0;
      }
      t1 = this.incidentEdge;
      this.findIncidentEdge$6(t1, poly1, xf1, edge1, poly2, xf2);
      count1 = poly1.get$vertexCount();
      vertices1 = poly1.get$vertices();
      t2 = this.v11;
      t2.setFrom$1($.index(vertices1, edge1));
      t3 = this.v12;
      t3.setFrom$1($.ltB($.add(edge1, 1), count1) ? $.index(vertices1, $.add(edge1, 1)) : $.index(vertices1, 0));
      t4 = this.localTangent;
      t4.setFrom$1(t3).subLocal$1(t2);
      t4.normalize$0();
      t5 = this.localNormal;
      $.Vector_crossVectorAndNumToOut(t4, 1, t5);
      t6 = this.planePoint;
      t6.setFrom$1(t2).addLocal$1(t3).mulLocal$1(0.5);
      t7 = xf1.get$rotation();
      t8 = this.tangent;
      $.Matrix22_mulMatrixAndVectorToOut(t7, t4, t8);
      t4 = this.normal;
      $.Vector_crossVectorAndNumToOut(t8, 1, t4);
      $.Transform_mulToOut(xf1, t2, t2);
      $.Transform_mulToOut(xf1, t3, t3);
      frontOffset = $.add($.mul(t4.x, t2.x), $.mul(t4.y, t2.y));
    case 2:
      var totalRadius, xfB, polyB, xfA, polyA, manifold, t2, t1, t3, t4, edge1, xf2, xf1, poly2, poly1, flip, count1, vertices1, t5, t6, t7, t8, frontOffset, sideOffset1, sideOffset2, t9, np, pointCount, i, cp;
      state0 = 0;
      sideOffset1 = $.add($.neg($.add($.mul(t8.x, t2.x), $.mul(t8.y, t2.y))), totalRadius);
      sideOffset2 = $.add($.add($.mul(t8.x, t3.x), $.mul(t8.y, t3.y)), totalRadius);
      t8.negateLocal$0();
      t9 = this.clipPoints1;
      np = $.Collision_clipSegmentToLine(t9, t1, t8, sideOffset1);
      t8.negateLocal$0();
      if (np < 2)
        return;
      t1 = this.clipPoints2;
      if ($.Collision_clipSegmentToLine(t1, t9, t8, sideOffset2) < 2)
        return;
      manifold.get$localNormal().setFrom$1(t5);
      manifold.get$localPoint().setFrom$1(t6);
      for (t2 = t1.length, pointCount = 0, i = 0; i < 2; ++i) {
        if (i >= t2)
          throw $.ioore(i);
        t3 = t1[i].get$v();
        if ($.leB($.sub($.add($.mul(t4.x, t3.get$x()), $.mul(t4.y, t3.get$y())), frontOffset), totalRadius)) {
          cp = $.index(manifold.get$points(), pointCount);
          $.Transform_mulTransToOut(xf2, t1[i].get$v(), cp.get$localPoint());
          cp.get$id().setFrom$1(t1[i].get$id());
          cp.get$id().get$features().set$flip(flip);
          ++pointCount;
        }
      }
      manifold.set$pointCount(pointCount);
  }
},
 Collision$_construct$1: function(pool) {
  var t1, t2, t3, t4;
  t1 = this.incidentEdge;
  $.indexSet(t1, 0, $.ClipVertex$());
  $.indexSet(t1, 1, $.ClipVertex$());
  t1 = this.clipPoints1;
  t2 = $.ClipVertex$();
  t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t1[0] = t2;
  t2 = $.ClipVertex$();
  if (1 >= t3)
    throw $.ioore(1);
  t1[1] = t2;
  t2 = this.clipPoints2;
  t1 = $.ClipVertex$();
  t4 = t2.length;
  if (0 >= t4)
    throw $.ioore(0);
  t2[0] = t1;
  t1 = $.ClipVertex$();
  if (1 >= t4)
    throw $.ioore(1);
  t2[1] = t1;
}
};

$$.ClipVertex = {"": ["v?", "id?"],
 "super": "Object",
 setFrom$1: function(cv) {
  this.v.setFrom$1(cv.get$v());
  this.id.setFrom$1(cv.get$id());
}
};

$$.EdgeResults = {"": ["separation?", "edgeIndex"],
 "super": "Object"
};

$$.ContactID = {"": ["features?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eq(other.get$features(), this.features);
},
 setFrom$1: function(other) {
  this.features.setFrom$1(other.get$features());
},
 isEqual$1: function(other) {
  return $.eq(other.get$features(), this.features);
},
 zero$0: function() {
  this.features.zero$0();
}
};

$$.Distance = {"": ["calls", "iters", "maxIters", "simplex", "saveA", "saveB", "closestPoint", "searchDirection", "temp", "normal?"],
 "super": "Object",
 distance$3: function(output, cache, input) {
  var proxyA, proxyB, transformA, transformB, t1, vertices, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, iter, saveCount, i, t12, vertex, duplicate, rA, rB;
  this.calls = this.calls + 1;
  proxyA = input.proxyA;
  proxyB = input.proxyB;
  transformA = input.transformA;
  transformB = input.transformB;
  t1 = this.simplex;
  t1.readCache$5(cache, proxyA, transformA, proxyB, transformB);
  vertices = t1.vertices;
  t2 = this.closestPoint;
  t1.getClosestPoint$1(t2);
  t2.get$lengthSquared();
  for (t3 = this.saveB, t4 = t3.length, t5 = this.saveA, t6 = t5.length, t7 = vertices.length, t8 = transformA.rotation, t9 = this.searchDirection, t10 = this.temp, t11 = transformB.rotation, iter = 0; iter < this.maxIters;) {
    saveCount = t1.count;
    for (i = 0; $.ltB(i, saveCount); ++i) {
      if (i >= t7)
        throw $.ioore(i);
      t12 = vertices[i].get$indexA();
      if (i >= t6)
        throw $.ioore(i);
      t5[i] = t12;
      t12 = vertices[i].get$indexB();
      if (i >= t4)
        throw $.ioore(i);
      t3[i] = t12;
    }
    switch (t1.count) {
      case 1:
        break;
      case 2:
        t1.solve2$0();
        break;
      case 3:
        t1.solve3$0();
        break;
      default:
    }
    if ($.eqB(t1.count, 3))
      break;
    t1.getClosestPoint$1(t2);
    t2.get$lengthSquared();
    t1.getSearchDirection$1(t9);
    if ($.ltB(t9.get$lengthSquared(), 1.4208639999999999e-14))
      break;
    t12 = t1.count;
    if (t12 !== (t12 | 0))
      throw $.iae(t12);
    if (t12 < 0 || t12 >= t7)
      throw $.ioore(t12);
    vertex = vertices[t12];
    $.Matrix22_mulTransMatrixAndVectorToOut(t8, t9.negateLocal$0(), t10);
    vertex.set$indexA(proxyA.getSupport$1(t10));
    $.Transform_mulToOut(transformA, $.index(proxyA.get$vertices(), vertex.get$indexA()), vertex.get$wA());
    $.Matrix22_mulTransMatrixAndVectorToOut(t11, t9.negateLocal$0(), t10);
    vertex.set$indexB(proxyB.getSupport$1(t10));
    $.Transform_mulToOut(transformB, $.index(proxyB.get$vertices(), vertex.get$indexB()), vertex.get$wB());
    vertex.get$w().setFrom$1(vertex.get$wB()).subLocal$1(vertex.get$wA());
    ++iter;
    this.iters = this.iters + 1;
    for (i = 0; duplicate = false, $.ltB(i, saveCount); ++i) {
      t12 = vertex.get$indexA();
      if (i >= t6)
        throw $.ioore(i);
      if ($.eqB(t12, t5[i])) {
        t12 = vertex.get$indexB();
        if (i >= t4)
          throw $.ioore(i);
        t12 = $.eqB(t12, t3[i]);
      } else
        t12 = false;
      if (t12) {
        duplicate = true;
        break;
      }
    }
    if (duplicate)
      break;
    t1.count = $.add(t1.count, 1);
  }
  this.maxIters = $.max(this.maxIters, iter);
  t2 = output.pointA;
  t3 = output.pointB;
  t1.getWitnessPoints$2(t2, t3);
  output.distance = $.sqrt($.MathBox_distanceSquared(t2, t3));
  output.iterations = iter;
  t1.writeCache$1(cache);
  if (input.useRadii) {
    rA = proxyA.get$radius();
    rB = proxyB.get$radius();
    if ($.gtB(output.distance, $.add(rA, rB)) && $.gtB(output.distance, 1.192e-7)) {
      output.distance = $.sub(output.distance, $.add(rA, rB));
      t1 = this.normal;
      t1.setFrom$1(t3).subLocal$1(t2);
      t1.normalize$0();
      t10.setFrom$1(t1).mulLocal$1(rA);
      t2.addLocal$1(t10);
      t10.setFrom$1(t1).mulLocal$1(rB);
      t3.subLocal$1(t10);
    } else {
      t2.addLocal$1(t3).mulLocal$1(0.5);
      t3.setFrom$1(t2);
      output.distance = 0;
    }
  }
}
};

$$.DistanceInput = {"": ["proxyA=", "proxyB=", "transformA", "transformB", "useRadii"],
 "super": "Object"
};

$$.DistanceOutput = {"": ["pointA", "pointB", "distance", "iterations"],
 "super": "Object",
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); }
};

$$.DistanceProxy = {"": ["vertices?", "count=", "radius="],
 "super": "Object",
 setFromShape$1: function(shape) {
  var t1, t2, i, t3, t4;
  t1 = shape.get$type();
  if (typeof t1 !== 'number')
    return this.setFromShape$1$bailout(1, shape, t1);
  if (t1 === 0) {
    t1 = this.vertices;
    if (0 >= t1.length)
      throw $.ioore(0);
    t1[0].setFrom$1(shape.get$position());
    this.count = 1;
    this.radius = shape.get$radius();
  } else {
    t1 = shape.get$type();
    if (typeof t1 !== 'number')
      return this.setFromShape$1$bailout(2, shape, t1);
    if (t1 === 1) {
      this.count = shape.get$vertexCount();
      this.radius = shape.get$radius();
      t1 = this.vertices;
      t2 = t1.length;
      i = 0;
      while (true) {
        t3 = this.count;
        if (typeof t3 !== 'number')
          return this.setFromShape$1$bailout(3, shape, i, t3, t1, t2);
        if (!(i < t3))
          break;
        if (i >= t2)
          throw $.ioore(i);
        t3 = t1[i];
        t4 = shape.get$vertices();
        if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
          return this.setFromShape$1$bailout(4, shape, i, t1, t2, t3, t4);
        if (i >= t4.length)
          throw $.ioore(i);
        t3.setFrom$1(t4[i]);
        ++i;
      }
    }
  }
},
 setFromShape$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env1;
      shape = env0;
      break;
    case 2:
      t1 = env1;
      shape = env0;
      break;
    case 3:
      t2 = env4;
      t1 = env3;
      t3 = env2;
      i = env1;
      shape = env0;
      break;
    case 4:
      t4 = env5;
      t3 = env4;
      t2 = env3;
      t1 = env2;
      i = env1;
      shape = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = shape.get$type();
    case 1:
      state0 = 0;
    default:
      var t1, shape, t2, i, t3, t4;
      if (state0 === 0 && $.eqB(t1, 0)) {
        t1 = this.vertices;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1[0].setFrom$1(shape.get$position());
        this.count = 1;
        this.radius = shape.get$radius();
      } else
        switch (state0) {
          case 0:
            t1 = shape.get$type();
          case 2:
            state0 = 0;
          default:
            if (state0 === 4 || state0 === 3 || state0 === 0 && $.eqB(t1, 1))
              switch (state0) {
                case 0:
                  this.count = shape.get$vertexCount();
                  this.radius = shape.get$radius();
                  t1 = this.vertices;
                  t2 = t1.length;
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          t3 = this.count;
                        case 3:
                          state0 = 0;
                          if (!$.ltB(i, t3))
                            break L0;
                          if (i >= t2)
                            throw $.ioore(i);
                          t3 = t1[i];
                          t4 = shape.get$vertices();
                        case 4:
                          state0 = 0;
                          t3.setFrom$1($.index(t4, i));
                          ++i;
                      }
              }
        }
  }
},
 getSupport$1: function(direction) {
  var t1, t2, t3, t4, t6, t9, bestValue, bestIndex, i, value;
  t1 = this.vertices;
  t2 = t1.length;
  if (0 >= t2)
    throw $.ioore(0);
  t3 = t1[0];
  t4 = t3.get$x();
  if (typeof t4 !== 'number')
    return this.getSupport$1$bailout(1, direction, t4, t2, t1, t3);
  t6 = direction.get$x();
  if (typeof t6 !== 'number')
    return this.getSupport$1$bailout(2, direction, t2, t3, t4, t6, t1);
  t4 *= t6;
  t3 = t3.get$y();
  if (typeof t3 !== 'number')
    return this.getSupport$1$bailout(3, direction, t2, t4, t3, t1);
  t9 = direction.get$y();
  if (typeof t9 !== 'number')
    return this.getSupport$1$bailout(4, direction, t2, t4, t3, t1, t9);
  bestValue = t4 + t3 * t9;
  bestIndex = 0;
  i = 1;
  while (true) {
    t3 = this.count;
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(5, direction, t2, bestIndex, bestValue, i, t1, t3);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    t4 = t3.get$x();
    if (typeof t4 !== 'number')
      return this.getSupport$1$bailout(6, direction, t3, t4, t2, bestIndex, bestValue, i, t1);
    t4 *= t6;
    t3 = t3.get$y();
    if (typeof t3 !== 'number')
      return this.getSupport$1$bailout(8, direction, t2, t4, t3, bestIndex, bestValue, i, t1);
    value = t4 + t3 * t9;
    if (value > bestValue) {
      bestValue = value;
      bestIndex = i;
    }
    ++i;
  }
  return bestIndex;
},
 getSupport$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      t3 = env4;
      t1 = env3;
      t2 = env2;
      t4 = env1;
      direction = env0;
      break;
    case 2:
      t1 = env5;
      t6 = env4;
      t4 = env3;
      t3 = env2;
      t2 = env1;
      direction = env0;
      break;
    case 3:
      t1 = env4;
      t3 = env3;
      t6 = env2;
      t2 = env1;
      direction = env0;
      break;
    case 4:
      t8 = env5;
      t1 = env4;
      t3 = env3;
      t6 = env2;
      t2 = env1;
      direction = env0;
      break;
    case 5:
      t3 = env6;
      t1 = env5;
      i = env4;
      bestValue = env3;
      bestIndex = env2;
      t2 = env1;
      direction = env0;
      break;
    case 6:
      t1 = env7;
      i = env6;
      bestValue = env5;
      bestIndex = env4;
      t2 = env3;
      t4 = env2;
      t3 = env1;
      direction = env0;
      break;
    case 7:
      t1 = env8;
      i = env7;
      bestValue = env6;
      bestIndex = env5;
      t2 = env4;
      t6 = env3;
      t4 = env2;
      t3 = env1;
      direction = env0;
      break;
    case 8:
      t1 = env7;
      i = env6;
      bestValue = env5;
      bestIndex = env4;
      t3 = env3;
      t6 = env2;
      t2 = env1;
      direction = env0;
      break;
    case 9:
      t1 = env8;
      t8 = env7;
      i = env6;
      bestValue = env5;
      bestIndex = env4;
      t3 = env3;
      t6 = env2;
      t2 = env1;
      direction = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
      t2 = t1.length;
      if (0 >= t2)
        throw $.ioore(0);
      t3 = t1[0];
      t4 = t3.get$x();
    case 1:
      state0 = 0;
      t6 = direction.get$x();
    case 2:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t3 = t3.get$y();
    case 3:
      state0 = 0;
      t8 = direction.get$y();
    case 4:
      state0 = 0;
      bestValue = $.add(t6, $.mul(t3, t8));
      bestIndex = 0;
      i = 1;
    default:
      var t1, t2, t3, t4, direction, t6, t8, bestValue, bestIndex, i, value;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = this.count;
            case 5:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              t4 = t3.get$x();
            case 6:
              state0 = 0;
              t6 = direction.get$x();
            case 7:
              state0 = 0;
              t6 = $.mul(t4, t6);
              t3 = t3.get$y();
            case 8:
              state0 = 0;
              t8 = direction.get$y();
            case 9:
              state0 = 0;
              value = $.add(t6, $.mul(t3, t8));
              if ($.gtB(value, bestValue)) {
                bestValue = value;
                bestIndex = i;
              }
              ++i;
          }
      return bestIndex;
  }
},
 DistanceProxy$0: function() {
  var t1, t2, i;
  for (t1 = this.vertices, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.Features = {"": ["referenceEdge=", "incidentEdge=", "incidentVertex=", "flip="],
 "super": "Object",
 setFrom$1: function(f) {
  this.referenceEdge = f.get$referenceEdge();
  this.incidentEdge = f.get$incidentEdge();
  this.incidentVertex = f.get$incidentVertex();
  this.flip = f.get$flip();
},
 operator$eq$1: function(other) {
  return $.eqB(this.referenceEdge, other.get$referenceEdge()) && $.eqB(this.incidentEdge, other.get$incidentEdge()) && $.eqB(this.incidentVertex, other.get$incidentVertex()) && $.eqB(this.flip, other.get$flip());
},
 toString$0: function() {
  return 'Features: (' + $.S(this.flip) + ', ' + $.S(this.incidentEdge) + ', ' + $.S(this.incidentVertex) + ' ' + $.S(this.referenceEdge) + ')';
},
 zero$0: function() {
  this.referenceEdge = 0;
  this.incidentEdge = 0;
  this.incidentVertex = 0;
  this.flip = 0;
}
};

$$.Manifold = {"": ["points?", "localNormal?", "localPoint?", "type=", "pointCount="],
 "super": "Object",
 setFrom$1: function(other) {
  var t1, t2, i, t3, t4;
  t1 = this.points;
  t2 = t1.length;
  i = 0;
  while (true) {
    t3 = other.get$pointCount();
    if (typeof t3 !== 'number')
      return this.setFrom$1$bailout(1, other, t1, i, t3, t2);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    t4 = other.get$points();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(2, other, t4, t1, i, t2, t3);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
    ++i;
  }
  this.type = other.get$type();
  this.localNormal.setFrom$1(other.get$localNormal());
  this.localPoint.setFrom$1(other.get$localPoint());
  this.pointCount = other.get$pointCount();
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t2 = env4;
      t3 = env3;
      i = env2;
      t1 = env1;
      other = env0;
      break;
    case 2:
      t3 = env5;
      t2 = env4;
      i = env3;
      t1 = env2;
      t4 = env1;
      other = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.points;
      t2 = t1.length;
      i = 0;
    default:
      var t1, t2, i, t3, other, t4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = other.get$pointCount();
            case 1:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              t4 = other.get$points();
            case 2:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
      this.type = other.get$type();
      this.localNormal.setFrom$1(other.get$localNormal());
      this.localPoint.setFrom$1(other.get$localPoint());
      this.pointCount = other.get$pointCount();
  }
},
 Manifold$0: function() {
  var t1, t2, i, t3;
  for (t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    t3 = $.ManifoldPoint$();
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.ManifoldPoint = {"": ["localPoint?", "normalImpulse=", "tangentImpulse=", "id?"],
 "super": "Object",
 setFrom$1: function(other) {
  this.localPoint.setFrom$1(other.get$localPoint());
  this.normalImpulse = other.get$normalImpulse();
  this.tangentImpulse = other.get$tangentImpulse();
  this.id.setFrom$1(other.get$id());
}
};

$$.Simplex = {"": ["v1", "v2", "v3", "vertices?", "count=", "e13", "e23", "e12", "case2", "case22", "case3", "case33"],
 "super": "Object",
 readCache$5: function(cache, proxyA, transformA, proxyB, transformB) {
  var t1, t2, t3, t5, i, v, wALocal, wBLocal, metric1, metric2;
  this.count = cache.count;
  t1 = this.vertices;
  t2 = t1.length;
  t3 = cache.indexA;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this.readCache$5$bailout(1, cache, proxyA, transformA, proxyB, transformB, t3, t1, t2);
  t5 = cache.indexB;
  if (typeof t5 !== 'string' && (typeof t5 !== 'object' || t5 === null || t5.constructor !== Array && !t5.is$JavaScriptIndexingBehavior()))
    return this.readCache$5$bailout(2, cache, proxyA, transformA, proxyB, transformB, t5, t3, t1, t2);
  i = 0;
  for (; $.ltB(i, this.count); ++i) {
    if (i >= t2)
      throw $.ioore(i);
    v = t1[i];
    if (i >= t3.length)
      throw $.ioore(i);
    v.set$indexA(t3[i]);
    if (i >= t5.length)
      throw $.ioore(i);
    v.set$indexB(t5[i]);
    wALocal = $.index(proxyA.get$vertices(), v.get$indexA());
    wBLocal = $.index(proxyB.get$vertices(), v.get$indexB());
    $.Transform_mulToOut(transformA, wALocal, v.get$wA());
    $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
    v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
    v.set$a(0);
  }
  if ($.gtB(this.count, 1)) {
    metric1 = cache.metric;
    metric2 = this.getMetric$0();
    if (typeof metric1 !== 'number')
      throw $.iae(metric1);
    if ($.ltB(metric2, 0.5 * metric1) || $.ltB(2 * metric1, metric2) || $.ltB(metric2, 1.192e-7))
      this.count = 0;
  }
  if ($.eqB(this.count, 0)) {
    if (0 >= t2)
      throw $.ioore(0);
    v = t1[0];
    v.set$indexA(0);
    v.set$indexB(0);
    wALocal = $.index(proxyA.get$vertices(), 0);
    wBLocal = $.index(proxyB.get$vertices(), 0);
    $.Transform_mulToOut(transformA, wALocal, v.get$wA());
    $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
    v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
    this.count = 1;
  }
},
 readCache$5$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      t2 = env7;
      t1 = env6;
      t3 = env5;
      transformB = env4;
      proxyB = env3;
      transformA = env2;
      proxyA = env1;
      cache = env0;
      break;
    case 2:
      t2 = env8;
      t1 = env7;
      t3 = env6;
      t5 = env5;
      transformB = env4;
      proxyB = env3;
      transformA = env2;
      proxyA = env1;
      cache = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.count = cache.count;
      t1 = this.vertices;
      t2 = t1.length;
      t3 = cache.indexA;
    case 1:
      state0 = 0;
      t5 = cache.indexB;
    case 2:
      var t1, t2, t3, transformB, proxyB, transformA, proxyA, cache, t5, i, v, wALocal, wBLocal, metric1, metric2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, this.count); ++i) {
        if (i >= t2)
          throw $.ioore(i);
        v = t1[i];
        v.set$indexA($.index(t3, i));
        v.set$indexB($.index(t5, i));
        wALocal = $.index(proxyA.get$vertices(), v.get$indexA());
        wBLocal = $.index(proxyB.get$vertices(), v.get$indexB());
        $.Transform_mulToOut(transformA, wALocal, v.get$wA());
        $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
        v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
        v.set$a(0);
      }
      if ($.gtB(this.count, 1)) {
        metric1 = cache.metric;
        metric2 = this.getMetric$0();
        if (typeof metric1 !== 'number')
          throw $.iae(metric1);
        if ($.ltB(metric2, 0.5 * metric1) || $.ltB(2 * metric1, metric2) || $.ltB(metric2, 1.192e-7))
          this.count = 0;
      }
      if ($.eqB(this.count, 0)) {
        if (0 >= t2)
          throw $.ioore(0);
        v = t1[0];
        v.set$indexA(0);
        v.set$indexB(0);
        wALocal = $.index(proxyA.get$vertices(), 0);
        wBLocal = $.index(proxyB.get$vertices(), 0);
        $.Transform_mulToOut(transformA, wALocal, v.get$wA());
        $.Transform_mulToOut(transformB, wBLocal, v.get$wB());
        v.get$w().setFrom$1(v.get$wB()).subLocal$1(v.get$wA());
        this.count = 1;
      }
  }
},
 writeCache$1: function(cache) {
  var t1, t3, t4, t5, i, t2;
  cache.metric = this.getMetric$0();
  cache.count = this.count;
  t1 = cache.indexA;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.writeCache$1$bailout(1, cache, t1);
  t3 = this.vertices;
  t4 = t3.length;
  t5 = cache.indexB;
  if (typeof t5 !== 'object' || t5 === null || (t5.constructor !== Array || !!t5.immutable$list) && !t5.is$JavaScriptIndexingBehavior())
    return this.writeCache$1$bailout(2, t1, t5, t3, t4);
  i = 0;
  for (; $.ltB(i, this.count); ++i) {
    if (i >= t4)
      throw $.ioore(i);
    t2 = t3[i].get$indexA();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
    t2 = t3[i].get$indexB();
    if (i >= t5.length)
      throw $.ioore(i);
    t5[i] = t2;
  }
},
 writeCache$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      cache = env0;
      break;
    case 2:
      t4 = env3;
      t3 = env2;
      t5 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      cache.metric = this.getMetric$0();
      cache.count = this.count;
      t1 = cache.indexA;
    case 1:
      state0 = 0;
      t3 = this.vertices;
      t4 = t3.length;
      t5 = cache.indexB;
    case 2:
      var t1, cache, t3, t4, t5, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, this.count); ++i) {
        if (i >= t4)
          throw $.ioore(i);
        $.indexSet(t1, i, t3[i].get$indexA());
        $.indexSet(t5, i, t3[i].get$indexB());
      }
  }
},
 getSearchDirection$1: function(out) {
  var t1, t2, t3;
  switch (this.count) {
    case 1:
      out.setFrom$1(this.v1.w).negateLocal$0();
      return;
    case 2:
      t1 = this.e12;
      t2 = t1.setFrom$1(this.v2.w);
      t3 = this.v1.w;
      t2.subLocal$1(t3);
      out.setFrom$1(t3).negateLocal$0();
      if ($.gtB($.sub($.mul(t1.x, out.get$y()), $.mul(t1.y, out.get$x())), 0))
        $.Vector_crossNumAndVectorToOut(1, t1, out);
      else
        $.Vector_crossVectorAndNumToOut(t1, 1, out);
      break;
    default:
      out.setZero$0();
      return;
  }
},
 getClosestPoint$1: function(out) {
  var t1, t2, t3, t4;
  switch (this.count) {
    case 0:
      out.setZero$0();
      return;
    case 1:
      out.setFrom$1(this.v1.w);
      return;
    case 2:
      t1 = this.case22;
      t2 = this.v2;
      t1.setFrom$1(t2.w).mulLocal$1(t2.a);
      t3 = this.case2;
      t4 = this.v1;
      t3.setFrom$1(t4.w).mulLocal$1(t4.a).addLocal$1(t1);
      out.setFrom$1(t3);
      return;
    case 3:
      out.setZero$0();
      return;
    default:
      out.setZero$0();
      return;
  }
},
 getWitnessPoints$2: function(pA, pB) {
  var t1, t2, t3, t4, t5;
  switch (this.count) {
    case 0:
      break;
    case 1:
      t1 = this.v1;
      pA.setFrom$1(t1.wA);
      pB.setFrom$1(t1.wB);
      break;
    case 2:
      t1 = this.case2;
      t2 = this.v1;
      t1.setFrom$1(t2.wA).mulLocal$1(t2.a);
      t3 = this.v2;
      pA.setFrom$1(t3.wA).mulLocal$1(t3.a).addLocal$1(t1);
      t1.setFrom$1(t2.wB).mulLocal$1(t2.a);
      pB.setFrom$1(t3.wB).mulLocal$1(t3.a).addLocal$1(t1);
      break;
    case 3:
      t1 = this.v1;
      pA.setFrom$1(t1.wA).mulLocal$1(t1.a);
      t2 = this.case3;
      t3 = this.v2;
      t2.setFrom$1(t3.wA).mulLocal$1(t3.a);
      t4 = this.case33;
      t5 = this.v3;
      t4.setFrom$1(t5.wA).mulLocal$1(t5.a);
      pA.addLocal$1(t2).addLocal$1(t4);
      pB.setFrom$1(pA);
      break;
    default:
      break;
  }
},
 getMetric$0: function() {
  var t1, t2, t3;
  switch (this.count) {
    case 0:
      return 0;
    case 1:
      return 0;
    case 2:
      return $.sqrt($.MathBox_distanceSquared(this.v1.w, this.v2.w));
    case 3:
      t1 = this.case3;
      t2 = t1.setFrom$1(this.v2.w);
      t3 = this.v1.w;
      t2.subLocal$1(t3);
      t2 = this.case33;
      t2.setFrom$1(this.v3.w).subLocal$1(t3);
      return $.sub($.mul(t1.x, t2.y), $.mul(t1.y, t2.x));
    default:
      return 0;
  }
},
 solve2$0: function() {
  var t1, w1, t2, w2, t3, t4, t6, t8, t10, d12_2, d12_1, inv_d12;
  t1 = this.v1;
  w1 = t1.w;
  t2 = this.v2;
  w2 = t2.w;
  t3 = this.e12;
  t3.setFrom$1(w2).subLocal$1(w1);
  t4 = w1.x;
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(1, t4, t1, w1, t2, w2, t3);
  t6 = t3.x;
  if (typeof t6 !== 'number')
    return this.solve2$0$bailout(2, t4, t6, t1, w1, t2, w2, t3);
  t4 *= t6;
  t8 = w1.y;
  if (typeof t8 !== 'number')
    return this.solve2$0$bailout(3, w2, t8, t1, t2, t4, t3);
  t10 = t3.y;
  if (typeof t10 !== 'number')
    return this.solve2$0$bailout(4, w2, t8, t10, t1, t2, t4, t3);
  d12_2 = -(t4 + t8 * t10);
  if (d12_2 <= 0) {
    t1.a = 1;
    this.count = 1;
    return;
  }
  t4 = w2.x;
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(5, d12_2, t4, t1, t2, w2, t3);
  t6 = t4 * t6;
  t4 = w2.y;
  if (typeof t4 !== 'number')
    return this.solve2$0$bailout(7, d12_2, t6, t1, t4, t2, t3);
  d12_1 = t6 + t4 * t10;
  if (d12_1 <= 0) {
    t2.a = 1;
    this.count = 1;
    t1.setFrom$1(t2);
    return;
  }
  inv_d12 = 1 / (d12_1 + d12_2);
  t1.a = d12_1 * inv_d12;
  t2.a = d12_2 * inv_d12;
  this.count = 2;
},
 solve2$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t4 = env0;
      break;
    case 2:
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      t6 = env1;
      t4 = env0;
      break;
    case 3:
      t3 = env5;
      t6 = env4;
      t2 = env3;
      t1 = env2;
      t4 = env1;
      w2 = env0;
      break;
    case 4:
      t3 = env6;
      t6 = env5;
      t2 = env4;
      t1 = env3;
      t9 = env2;
      t4 = env1;
      w2 = env0;
      break;
    case 5:
      t3 = env5;
      w2 = env4;
      t2 = env3;
      t1 = env2;
      t4 = env1;
      d12_2 = env0;
      break;
    case 6:
      t3 = env6;
      w2 = env5;
      t2 = env4;
      t6 = env3;
      t1 = env2;
      t4 = env1;
      d12_2 = env0;
      break;
    case 7:
      t3 = env5;
      t2 = env4;
      t4 = env3;
      t1 = env2;
      t6 = env1;
      d12_2 = env0;
      break;
    case 8:
      t3 = env5;
      t2 = env4;
      t4 = env3;
      t1 = env2;
      t6 = env1;
      d12_2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.v1;
      w1 = t1.w;
      t2 = this.v2;
      w2 = t2.w;
      t3 = this.e12;
      t3.setFrom$1(w2).subLocal$1(w1);
      t4 = w1.x;
    case 1:
      state0 = 0;
      t6 = t3.x;
    case 2:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t4 = w1.y;
    case 3:
      state0 = 0;
      t9 = t3.y;
    case 4:
      state0 = 0;
      d12_2 = $.neg($.add(t6, $.mul(t4, t9)));
      if ($.leB(d12_2, 0)) {
        t1.a = 1;
        this.count = 1;
        return;
      }
      t4 = w2.x;
    case 5:
      state0 = 0;
      t6 = t3.x;
    case 6:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t4 = w2.y;
    case 7:
      state0 = 0;
      t3 = t3.y;
    case 8:
      var t1, w1, t2, w2, t3, t4, t6, t9, d12_2, d12_1, inv_d12;
      state0 = 0;
      d12_1 = $.add(t6, $.mul(t4, t3));
      if ($.leB(d12_1, 0)) {
        t2.a = 1;
        this.count = 1;
        t1.setFrom$1(t2);
        return;
      }
      t3 = $.add(d12_1, d12_2);
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      inv_d12 = 1 / t3;
      t1.a = $.mul(d12_1, inv_d12);
      t2.a = $.mul(d12_2, inv_d12);
      this.count = 2;
  }
},
 solve3$0: function() {
  var t1, w1, t2, w2, t3, w3, t4, t5, t7, t9, t11, w1e12, w2e12, d12_2, t15, t17, t19, t21, w1e13, w3e13, d13_2, t25, t27, t29, t30, t32, w2e23, t35, w3e23, d23_2, t38, n123, d123_1, t41, t43, d123_2, d123_3, inv_d12, inv_d13, inv_d23, inv_d123;
  t1 = this.v1;
  w1 = t1.w;
  t2 = this.v2;
  w2 = t2.w;
  t3 = this.v3;
  w3 = t3.w;
  t4 = this.e12;
  t4.setFrom$1(w2).subLocal$1(w1);
  t5 = w1.x;
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(1, t1, w1, t2, w2, t3, w3, t4, t5);
  t7 = t4.x;
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(2, t1, w1, t2, w2, t3, w3, t4, t5, t7);
  t5 *= t7;
  t9 = w1.y;
  if (typeof t9 !== 'number')
    return this.solve3$0$bailout(3, t5, t1, w1, t2, w2, t3, w3, t4, t9);
  t11 = t4.y;
  if (typeof t11 !== 'number')
    return this.solve3$0$bailout(4, t5, t1, w1, t2, w2, t3, w3, t4, t9, t11);
  w1e12 = t5 + t9 * t11;
  t5 = w2.x;
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(5, t5, t1, w1, t2, w2, t3, w3, t4, w1e12);
  t7 = t5 * t7;
  t5 = w2.y;
  if (typeof t5 !== 'number')
    return this.solve3$0$bailout(7, t5, t1, w1, t2, w2, t3, w3, t4, t7, w1e12);
  w2e12 = t7 + t5 * t11;
  d12_2 = -w1e12;
  t7 = this.e13;
  t7.setFrom$1(w3).subLocal$1(w1);
  t15 = w1.x;
  if (typeof t15 !== 'number')
    return this.solve3$0$bailout(9, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, t15);
  t17 = t7.x;
  if (typeof t17 !== 'number')
    return this.solve3$0$bailout(10, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, t15, t17);
  t15 *= t17;
  t19 = w1.y;
  if (typeof t19 !== 'number')
    return this.solve3$0$bailout(11, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t15, t7, t19);
  t21 = t7.y;
  if (typeof t21 !== 'number')
    return this.solve3$0$bailout(12, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t15, t7, t19, t21);
  w1e13 = t15 + t19 * t21;
  t15 = w3.x;
  if (typeof t15 !== 'number')
    return this.solve3$0$bailout(13, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w1e13, t7, t15);
  t17 = t15 * t17;
  t15 = w3.y;
  if (typeof t15 !== 'number')
    return this.solve3$0$bailout(15, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w1e13, t7, t17, t15);
  w3e13 = t17 + t15 * t21;
  d13_2 = -w1e13;
  t17 = this.e23;
  t17.setFrom$1(w3).subLocal$1(w2);
  t25 = w2.x;
  if (typeof t25 !== 'number')
    return this.solve3$0$bailout(17, t17, w2e12, t25, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, w3e13, d13_2);
  t27 = t17.x;
  if (typeof t27 !== 'number')
    return this.solve3$0$bailout(18, t17, w2e12, t25, d12_2, t1, w1, t2, w2, t3, w3, t4, t27, t7, w3e13, d13_2);
  t29 = t25 * t27;
  t30 = w2.y;
  if (typeof t30 !== 'number')
    return this.solve3$0$bailout(19, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t29, t30, t7, w3e13, d13_2);
  t32 = t17.y;
  if (typeof t32 !== 'number')
    return this.solve3$0$bailout(20, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t32, t29, t30, t7, w3e13, d13_2);
  w2e23 = t29 + t30 * t32;
  t29 = w3.x;
  if (typeof t29 !== 'number')
    return this.solve3$0$bailout(21, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t29, t7, w3e13, d13_2);
  t27 = t29 * t27;
  t35 = w3.y;
  if (typeof t35 !== 'number')
    return this.solve3$0$bailout(23, t17, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, w2e23, t35, t27, t7, w3e13, d13_2);
  w3e23 = t27 + t35 * t32;
  d23_2 = -w2e23;
  t27 = t4.x;
  if (typeof t27 !== 'number')
    return this.solve3$0$bailout(25, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t27, t7, w3e23, d23_2, w3e13, d13_2);
  t38 = t7.y;
  if (typeof t38 !== 'number')
    return this.solve3$0$bailout(26, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t27, t38, t7, w3e23, d23_2, w3e13, d13_2);
  t38 = t27 * t38;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    return this.solve3$0$bailout(27, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, w3e23, d23_2, w3e13, d13_2, t38);
  t7 = t7.x;
  if (typeof t7 !== 'number')
    return this.solve3$0$bailout(28, w2e12, d12_2, t1, w1, t2, w2, t3, w3, t4, t7, w3e23, d23_2, w3e13, d13_2, t38);
  n123 = t38 - t4 * t7;
  t38 = t25 * t35;
  d123_1 = n123 * (t38 - t30 * t29);
  t41 = w1.y;
  if (typeof t41 !== 'number')
    return this.solve3$0$bailout(34, w2e12, d12_2, t1, n123, t2, w2, t3, w3, w1, d123_1, t29, t41, w3e23, d23_2, w3e13, d13_2);
  t29 *= t41;
  t43 = w1.x;
  if (typeof t43 !== 'number')
    return this.solve3$0$bailout(36, w2e12, d12_2, t1, n123, t2, w2, t3, w1, d123_1, t29, w3e23, t35, d23_2, t43, w3e13, d13_2);
  d123_2 = n123 * (t29 - t35 * t43);
  t30 = t43 * t30;
  d123_3 = n123 * (t30 - t41 * t25);
  if (d12_2 <= 0 && d13_2 <= 0) {
    t1.a = 1;
    this.count = 1;
    return;
  }
  if (w2e12 > 0 && d12_2 > 0 && d123_3 <= 0) {
    inv_d12 = 1 / (w2e12 + d12_2);
    t1.a = w2e12 * inv_d12;
    t2.a = d12_2 * inv_d12;
    this.count = 2;
    return;
  }
  if (w3e13 > 0 && d13_2 > 0 && d123_2 <= 0) {
    inv_d13 = 1 / (w3e13 + d13_2);
    t1.a = w3e13 * inv_d13;
    t3.a = d13_2 * inv_d13;
    this.count = 2;
    t2.setFrom$1(t3);
    return;
  }
  if (w2e12 <= 0 && d23_2 <= 0) {
    t2.a = 1;
    this.count = 1;
    t1.setFrom$1(t2);
    return;
  }
  if (w3e13 <= 0 && w3e23 <= 0) {
    t3.a = 1;
    this.count = 1;
    t1.setFrom$1(t3);
    return;
  }
  if (w3e23 > 0 && d23_2 > 0 && d123_1 <= 0) {
    inv_d23 = 1 / (w3e23 + d23_2);
    t2.a = w3e23 * inv_d23;
    t3.a = d23_2 * inv_d23;
    this.count = 2;
    t1.setFrom$1(t3);
    return;
  }
  inv_d123 = 1 / (d123_1 + d123_2 + d123_3);
  t1.a = d123_1 * inv_d123;
  t2.a = d123_2 * inv_d123;
  t3.a = d123_3 * inv_d123;
  this.count = 3;
},
 solve3$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15) {
  switch (state0) {
    case 1:
      t5 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 2:
      t7 = env8;
      t5 = env7;
      t4 = env6;
      w3 = env5;
      t3 = env4;
      w2 = env3;
      t2 = env2;
      w1 = env1;
      t1 = env0;
      break;
    case 3:
      t5 = env8;
      t4 = env7;
      w3 = env6;
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t7 = env0;
      break;
    case 4:
      t10 = env9;
      t5 = env8;
      t4 = env7;
      w3 = env6;
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t7 = env0;
      break;
    case 5:
      w1e12 = env8;
      t4 = env7;
      w3 = env6;
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t7 = env0;
      break;
    case 6:
      w1e12 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      t13 = env1;
      t7 = env0;
      break;
    case 7:
      w1e12 = env9;
      t13 = env8;
      t4 = env7;
      w3 = env6;
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t7 = env0;
      break;
    case 8:
      t16 = env10;
      w1e12 = env9;
      t13 = env8;
      t4 = env7;
      w3 = env6;
      t3 = env5;
      w2 = env4;
      t2 = env3;
      w1 = env2;
      t1 = env1;
      t7 = env0;
      break;
    case 9:
      t18 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 10:
      t20 = env11;
      t18 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 11:
      t18 = env11;
      t13 = env10;
      t20 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 12:
      t23 = env12;
      t18 = env11;
      t13 = env10;
      t20 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 13:
      t20 = env11;
      t13 = env10;
      w1e13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 14:
      t26 = env12;
      t20 = env11;
      t13 = env10;
      w1e13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 15:
      t20 = env12;
      t26 = env11;
      t13 = env10;
      w1e13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 16:
      t29 = env13;
      t20 = env12;
      t26 = env11;
      t13 = env10;
      w1e13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 17:
      d13_2 = env13;
      w3e13 = env12;
      t13 = env11;
      t4 = env10;
      w3 = env9;
      t3 = env8;
      w2 = env7;
      t2 = env6;
      w1 = env5;
      t1 = env4;
      d12_2 = env3;
      t31 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 18:
      d13_2 = env14;
      w3e13 = env13;
      t13 = env12;
      t33 = env11;
      t4 = env10;
      w3 = env9;
      t3 = env8;
      w2 = env7;
      t2 = env6;
      w1 = env5;
      t1 = env4;
      d12_2 = env3;
      t31 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 19:
      d13_2 = env14;
      w3e13 = env13;
      t13 = env12;
      t31 = env11;
      t33 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 20:
      d13_2 = env15;
      w3e13 = env14;
      t13 = env13;
      t31 = env12;
      t33 = env11;
      t36 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 21:
      d13_2 = env14;
      w3e13 = env13;
      t13 = env12;
      t33 = env11;
      w2e23 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 22:
      d13_2 = env15;
      w3e13 = env14;
      t13 = env13;
      t33 = env12;
      w2e23 = env11;
      t39 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 23:
      d13_2 = env15;
      w3e13 = env14;
      t13 = env13;
      t39 = env12;
      t33 = env11;
      w2e23 = env10;
      t4 = env9;
      w3 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      w1 = env4;
      t1 = env3;
      d12_2 = env2;
      w2e12 = env1;
      t26 = env0;
      break;
    case 24:
      d13_2 = env15;
      w3e13 = env14;
      t13 = env13;
      t39 = env12;
      t33 = env11;
      w2e23 = env10;
      t26 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 25:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t13 = env10;
      t39 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 26:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      w3e23 = env12;
      t13 = env11;
      t44 = env10;
      t39 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 27:
      t44 = env14;
      d13_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 28:
      t44 = env14;
      d13_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      t13 = env9;
      t4 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      w1 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 29:
      d13_2 = env13;
      w3e13 = env12;
      d23_2 = env11;
      w3e23 = env10;
      t44 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 30:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t48 = env10;
      t44 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 31:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t44 = env10;
      w1 = env9;
      t48 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 32:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      w3e23 = env12;
      t51 = env11;
      t44 = env10;
      w1 = env9;
      t48 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 33:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      w3e23 = env11;
      t53 = env10;
      d123_1 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 34:
      d13_2 = env15;
      w3e13 = env14;
      d23_2 = env13;
      w3e23 = env12;
      t55 = env11;
      t53 = env10;
      d123_1 = env9;
      w1 = env8;
      w3 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 35:
      d13_2 = env14;
      w3e13 = env13;
      d23_2 = env12;
      t53 = env11;
      w3e23 = env10;
      t55 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 36:
      d13_2 = env15;
      w3e13 = env14;
      t58 = env13;
      d23_2 = env12;
      t53 = env11;
      w3e23 = env10;
      t55 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 37:
      d13_2 = env14;
      d123_2 = env13;
      w3e13 = env12;
      t60 = env11;
      d23_2 = env10;
      w3e23 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 38:
      d13_2 = env15;
      d123_2 = env14;
      w3e13 = env13;
      t62 = env12;
      t60 = env11;
      d23_2 = env10;
      w3e23 = env9;
      d123_1 = env8;
      w1 = env7;
      t3 = env6;
      w2 = env5;
      t2 = env4;
      n123 = env3;
      t1 = env2;
      d12_2 = env1;
      w2e12 = env0;
      break;
    case 39:
      d13_2 = env14;
      d123_2 = env13;
      w3e13 = env12;
      t60 = env11;
      d23_2 = env10;
      w3e23 = env9;
      d123_1 = env8;
      t3 = env7;
      w2 = env6;
      t2 = env5;
      n123 = env4;
      t1 = env3;
      d12_2 = env2;
      t62 = env1;
      w2e12 = env0;
      break;
    case 40:
      t65 = env14;
      d13_2 = env13;
      d123_2 = env12;
      w3e13 = env11;
      t60 = env10;
      d23_2 = env9;
      w3e23 = env8;
      d123_1 = env7;
      t3 = env6;
      t2 = env5;
      n123 = env4;
      t1 = env3;
      d12_2 = env2;
      t62 = env1;
      w2e12 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.v1;
      w1 = t1.w;
      t2 = this.v2;
      w2 = t2.w;
      t3 = this.v3;
      w3 = t3.w;
      t4 = this.e12;
      t4.setFrom$1(w2).subLocal$1(w1);
      t5 = w1.x;
    case 1:
      state0 = 0;
      t7 = t4.x;
    case 2:
      state0 = 0;
      t7 = $.mul(t5, t7);
      t5 = w1.y;
    case 3:
      state0 = 0;
      t10 = t4.y;
    case 4:
      state0 = 0;
      w1e12 = $.add(t7, $.mul(t5, t10));
      t7 = w2.x;
    case 5:
      state0 = 0;
      t13 = t4.x;
    case 6:
      state0 = 0;
      t13 = $.mul(t7, t13);
      t7 = w2.y;
    case 7:
      state0 = 0;
      t16 = t4.y;
    case 8:
      state0 = 0;
      w2e12 = $.add(t13, $.mul(t7, t16));
      d12_2 = $.neg(w1e12);
      t13 = this.e13;
      t13.setFrom$1(w3).subLocal$1(w1);
      t18 = w1.x;
    case 9:
      state0 = 0;
      t20 = t13.x;
    case 10:
      state0 = 0;
      t20 = $.mul(t18, t20);
      t18 = w1.y;
    case 11:
      state0 = 0;
      t23 = t13.y;
    case 12:
      state0 = 0;
      w1e13 = $.add(t20, $.mul(t18, t23));
      t20 = w3.x;
    case 13:
      state0 = 0;
      t26 = t13.x;
    case 14:
      state0 = 0;
      t26 = $.mul(t20, t26);
      t20 = w3.y;
    case 15:
      state0 = 0;
      t29 = t13.y;
    case 16:
      state0 = 0;
      w3e13 = $.add(t26, $.mul(t20, t29));
      d13_2 = $.neg(w1e13);
      t26 = this.e23;
      t26.setFrom$1(w3).subLocal$1(w2);
      t31 = w2.x;
    case 17:
      state0 = 0;
      t33 = t26.x;
    case 18:
      state0 = 0;
      t33 = $.mul(t31, t33);
      t31 = w2.y;
    case 19:
      state0 = 0;
      t36 = t26.y;
    case 20:
      state0 = 0;
      w2e23 = $.add(t33, $.mul(t31, t36));
      t33 = w3.x;
    case 21:
      state0 = 0;
      t39 = t26.x;
    case 22:
      state0 = 0;
      t39 = $.mul(t33, t39);
      t33 = w3.y;
    case 23:
      state0 = 0;
      t26 = t26.y;
    case 24:
      state0 = 0;
      w3e23 = $.add(t39, $.mul(t33, t26));
      d23_2 = $.neg(w2e23);
      t39 = t4.x;
    case 25:
      state0 = 0;
      t44 = t13.y;
    case 26:
      state0 = 0;
      t44 = $.mul(t39, t44);
      t4 = t4.y;
    case 27:
      state0 = 0;
      t13 = t13.x;
    case 28:
      state0 = 0;
      n123 = $.sub(t44, $.mul(t4, t13));
      t44 = w2.x;
    case 29:
      state0 = 0;
      t48 = w3.y;
    case 30:
      state0 = 0;
      t48 = $.mul(t44, t48);
      t44 = w2.y;
    case 31:
      state0 = 0;
      t51 = w3.x;
    case 32:
      state0 = 0;
      d123_1 = $.mul(n123, $.sub(t48, $.mul(t44, t51)));
      t53 = w3.x;
    case 33:
      state0 = 0;
      t55 = w1.y;
    case 34:
      state0 = 0;
      t55 = $.mul(t53, t55);
      t53 = w3.y;
    case 35:
      state0 = 0;
      t58 = w1.x;
    case 36:
      state0 = 0;
      d123_2 = $.mul(n123, $.sub(t55, $.mul(t53, t58)));
      t60 = w1.x;
    case 37:
      state0 = 0;
      t62 = w2.y;
    case 38:
      state0 = 0;
      t62 = $.mul(t60, t62);
      t60 = w1.y;
    case 39:
      state0 = 0;
      t65 = w2.x;
    case 40:
      var t1, w1, t2, w2, t3, w3, t4, t5, t7, t10, w1e12, t13, t16, w2e12, d12_2, t18, t20, t23, w1e13, t26, t29, w3e13, d13_2, t31, t33, t36, w2e23, t39, w3e23, d23_2, t44, n123, t48, t51, d123_1, t53, t55, t58, d123_2, t60, t62, t65, d123_3, inv_d12, inv_d13, inv_d23, inv_d123;
      state0 = 0;
      d123_3 = $.mul(n123, $.sub(t62, $.mul(t60, t65)));
      if ($.leB(d12_2, 0) && $.leB(d13_2, 0)) {
        t1.a = 1;
        this.count = 1;
        return;
      }
      if ($.gtB(w2e12, 0) && $.gtB(d12_2, 0) && $.leB(d123_3, 0)) {
        t3 = $.add(w2e12, d12_2);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        inv_d12 = 1 / t3;
        t1.a = $.mul(w2e12, inv_d12);
        t2.a = $.mul(d12_2, inv_d12);
        this.count = 2;
        return;
      }
      if ($.gtB(w3e13, 0) && $.gtB(d13_2, 0) && $.leB(d123_2, 0)) {
        t4 = $.add(w3e13, d13_2);
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        inv_d13 = 1 / t4;
        t1.a = $.mul(w3e13, inv_d13);
        t3.a = $.mul(d13_2, inv_d13);
        this.count = 2;
        t2.setFrom$1(t3);
        return;
      }
      if ($.leB(w2e12, 0) && $.leB(d23_2, 0)) {
        t2.a = 1;
        this.count = 1;
        t1.setFrom$1(t2);
        return;
      }
      if ($.leB(w3e13, 0) && $.leB(w3e23, 0)) {
        t3.a = 1;
        this.count = 1;
        t1.setFrom$1(t3);
        return;
      }
      if ($.gtB(w3e23, 0) && $.gtB(d23_2, 0) && $.leB(d123_1, 0)) {
        t4 = $.add(w3e23, d23_2);
        if (typeof t4 !== 'number')
          throw $.iae(t4);
        inv_d23 = 1 / t4;
        t2.a = $.mul(w3e23, inv_d23);
        t3.a = $.mul(d23_2, inv_d23);
        this.count = 2;
        t1.setFrom$1(t3);
        return;
      }
      t4 = $.add($.add(d123_1, d123_2), d123_3);
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      inv_d123 = 1 / t4;
      t1.a = $.mul(d123_1, inv_d123);
      t2.a = $.mul(d123_2, inv_d123);
      t3.a = $.mul(d123_3, inv_d123);
      this.count = 3;
  }
},
 Simplex$0: function() {
  var t1, t2, t3;
  t1 = this.vertices;
  t2 = this.v1;
  t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t1[0] = t2;
  t2 = this.v2;
  if (1 >= t3)
    throw $.ioore(1);
  t1[1] = t2;
  t2 = this.v3;
  if (2 >= t3)
    throw $.ioore(2);
  t1[2] = t2;
}
};

$$.SimplexCache = {"": ["metric?", "count=", "indexA?", "indexB?"],
 "super": "Object",
 setFrom$1: function(sc) {
  var t1 = this.indexA;
  $.setRange$3(t1, 0, $.get$length(t1), sc.get$indexA());
  t1 = this.indexB;
  $.setRange$3(t1, 0, $.get$length(t1), sc.get$indexB());
  this.metric = sc.get$metric();
  this.count = sc.get$count();
},
 SimplexCache$0: function() {
  var t1, t3, t5, t6, i;
  t1 = this.indexA;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.SimplexCache$0$bailout(1, t1);
  t3 = this.indexB;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this.SimplexCache$0$bailout(2, t1, t3);
  t5 = t1.length;
  t6 = t3.length;
  i = 0;
  for (; i < 3; ++i) {
    if (i >= t5)
      throw $.ioore(i);
    t1[i] = 2147483647;
    if (i >= t6)
      throw $.ioore(i);
    t3[i] = 2147483647;
  }
},
 SimplexCache$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.indexA;
    case 1:
      state0 = 0;
      t3 = this.indexB;
    case 2:
      var t1, t3, i;
      state0 = 0;
      i = 0;
      for (; i < 3; ++i) {
        $.indexSet(t1, i, 2147483647);
        $.indexSet(t3, i, 2147483647);
      }
  }
}
};

$$.SimplexVertex = {"": ["wA?", "wB?", "w?", "a=", "indexA=", "indexB="],
 "super": "Object",
 setFrom$1: function(sv) {
  this.wA.setFrom$1(sv.get$wA());
  this.wB.setFrom$1(sv.get$wB());
  this.w.setFrom$1(sv.get$w());
  this.a = sv.get$a();
  this.indexA = sv.get$indexA();
  this.indexB = sv.get$indexB();
},
 toString$0: function() {
  return 'wA: ' + $.S(this.wA) + ', wB: ' + $.S(this.wB) + ', w: ' + $.S(this.w);
}
};

$$.TimeOfImpact = {"": ["cache", "distanceInput", "xfA", "xfB", "distanceOutput", "fcn", "indexes", "sweepA?", "sweepB?", "pool"],
 "super": "Object",
 timeOfImpact$2: function(output, input) {
  var t1, proxyA, proxyB, t3, t4, tMax, t6, t8, target, t10, t11, t12, t2, t5, t7, t9, t13, t14, iter, t15, t20, pushBackIter, done, s2, s1, a2, a1, rootIterCount, t, s, t16;
  t1 = $.TimeOfImpact_toiCalls;
  if (typeof t1 !== 'number')
    return this.timeOfImpact$2$bailout(1, output, input, t1);
  $.TimeOfImpact_toiCalls = t1 + 1;
  output.set$state(0);
  output.set$t(input.get$tMax());
  proxyA = input.get$proxyA();
  proxyB = input.get$proxyB();
  t3 = this.sweepA;
  t3.setFrom$1(input.get$sweepA());
  t4 = this.sweepB;
  t4.setFrom$1(input.get$sweepB());
  t3.normalize$0();
  t4.normalize$0();
  tMax = input.get$tMax();
  if (tMax !== (tMax | 0))
    return this.timeOfImpact$2$bailout(2, output, t3, t4, input, tMax, proxyA, proxyB);
  t6 = proxyA.get$radius();
  if (typeof t6 !== 'number')
    return this.timeOfImpact$2$bailout(3, output, t3, t4, input, tMax, t6, proxyA, proxyB);
  t8 = proxyB.get$radius();
  if (typeof t8 !== 'number')
    return this.timeOfImpact$2$bailout(4, output, t3, t4, input, tMax, t6, t8, proxyA, proxyB);
  target = $.max(0.005, t6 + t8 - 0.015);
  t10 = this.cache;
  t10.count = 0;
  t11 = input.get$proxyA();
  t12 = this.distanceInput;
  t12.proxyA = t11;
  t12.proxyB = input.get$proxyB();
  t12.useRadii = false;
  for (t1 = this.fcn, t2 = this.indexes, t5 = t2.length, t6 = target + 0.00125, t7 = target - 0.00125, t8 = this.distanceOutput, t9 = this.xfA, t11 = this.xfB, t13 = this.pool, t14 = 0, iter = 0; true;) {
    t3.getTransform$2(t9, t14);
    t4.getTransform$2(t11, t14);
    t12.transformA = t9;
    t12.transformB = t11;
    t13.distance.distance$3(t8, t10, t12);
    t15 = t8.distance;
    if (typeof t15 !== 'number')
      return this.timeOfImpact$2$bailout(5, output, t1, t2, t11, target, t7, t13, proxyA, proxyB, t15, t3, t4, t6, t8, t5, t10, t12, tMax, t14, iter, t9);
    if (t15 <= 0) {
      output.set$state(2);
      output.set$t(0);
      break;
    }
    if (t15 < t6) {
      output.set$state(3);
      output.set$t(t14);
      break;
    }
    t1.initialize$6(t10, proxyA, t3, proxyB, t4, t14);
    for (t20 = tMax, pushBackIter = 0; done = false, true;) {
      s2 = t1.findMinSeparation$2(t2, t20);
      if (typeof s2 !== 'number')
        return this.timeOfImpact$2$bailout(7, output, t11, pushBackIter, s2, t13, proxyA, proxyB, t8, tMax, t1, t2, target, t7, t3, t4, t6, t5, t10, t12, t14, iter, t20, t9);
      if (s2 > t6) {
        output.set$state(4);
        output.set$t(tMax);
        done = true;
        break;
      }
      if (s2 > t7) {
        t14 = t20;
        done = false;
        break;
      }
      if (0 >= t5)
        throw $.ioore(0);
      t15 = t2[0];
      if (1 >= t5)
        throw $.ioore(1);
      s1 = t1.evaluate$3(t15, t2[1], t14);
      if (typeof s1 !== 'number')
        return this.timeOfImpact$2$bailout(8, output, t11, t9, s2, t13, proxyA, proxyB, t8, tMax, t1, t2, s1, target, t7, t3, t4, t6, t5, t10, t12, t14, iter, t20, pushBackIter);
      if (s1 < t7) {
        output.set$state(1);
        output.set$t(t14);
        done = true;
        break;
      }
      if (s1 <= t6) {
        output.set$state(3);
        output.set$t(t14);
        done = true;
        break;
      }
      for (a2 = t20, a1 = t14, rootIterCount = 0; true;) {
        t = (rootIterCount & 1) === 1 ? a1 + (target - s1) * (a2 - a1) / (s2 - s1) : 0.5 * (a1 + a2);
        s = t1.evaluate$3(t2[0], t2[1], t);
        if (typeof s !== 'number')
          return this.timeOfImpact$2$bailout(9, output, t11, t9, s2, s1, rootIterCount, a1, a2, proxyA, t13, proxyB, t8, tMax, t1, t2, target, t7, t, t3, t4, t6, s, t5, t10, t12, t14, iter, t20, pushBackIter);
        t15 = $.abs(s - target);
        if (typeof t15 !== 'number')
          return this.timeOfImpact$2$bailout(10, output, t11, t9, s2, s1, rootIterCount, a1, a2, proxyA, t13, proxyB, t8, tMax, t1, t2, target, t7, t, t3, t4, t6, s, t5, t10, t15, t12, t14, iter, t20, pushBackIter);
        if (t15 < 0.00125) {
          t20 = t;
          break;
        }
        if (s > target) {
          a1 = t;
          s1 = s;
        } else {
          a2 = t;
          s2 = s;
        }
        if (a1 !== (a1 | 0))
          return this.timeOfImpact$2$bailout(11, output, t11, t9, s2, s1, a1, a2, rootIterCount, t13, proxyA, proxyB, t8, tMax, t1, t2, target, t7, t3, t4, t6, t5, t10, t12, t14, iter, t20, pushBackIter);
        ++rootIterCount;
        t16 = $.TimeOfImpact_toiRootIters;
        if (typeof t16 !== 'number')
          return this.timeOfImpact$2$bailout(12, output, t11, t9, s2, s1, a1, a2, rootIterCount, t16, proxyA, t13, proxyB, t8, tMax, t1, t2, target, t7, t3, t4, t6, t5, t10, t12, t14, iter, t20, pushBackIter);
        $.TimeOfImpact_toiRootIters = t16 + 1;
        if (rootIterCount === 50)
          break;
      }
      if (t20 !== (t20 | 0))
        return this.timeOfImpact$2$bailout(13, output, t11, pushBackIter, t13, proxyA, proxyB, t8, tMax, t1, t20, t2, target, rootIterCount, t7, t3, t4, t6, t5, t10, t12, t14, iter, t9);
      $.TimeOfImpact_toiMaxRootIters = $.max($.TimeOfImpact_toiMaxRootIters, rootIterCount);
      ++pushBackIter;
      if (pushBackIter === 8) {
        done = false;
        break;
      }
    }
    ++iter;
    t15 = $.TimeOfImpact_toiIters;
    if (typeof t15 !== 'number')
      return this.timeOfImpact$2$bailout(14, output, t1, t2, done, t11, target, t7, t13, t9, iter, t15, proxyA, proxyB, t3, t4, t6, t8, t5, t10, t12, tMax, t14);
    $.TimeOfImpact_toiIters = t15 + 1;
    if (done)
      break;
    if (iter === 1000) {
      output.set$state(1);
      output.set$t(t14);
      break;
    }
  }
  $.TimeOfImpact_toiMaxIters = $.max($.TimeOfImpact_toiMaxIters, iter);
},
 timeOfImpact$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23, env24, env25, env26, env27, env28, env29) {
  switch (state0) {
    case 1:
      t1 = env2;
      input = env1;
      output = env0;
      break;
    case 2:
      proxyB = env6;
      proxyA = env5;
      tMax = env4;
      input = env3;
      t4 = env2;
      t3 = env1;
      output = env0;
      break;
    case 3:
      proxyB = env7;
      proxyA = env6;
      t6 = env5;
      tMax = env4;
      input = env3;
      t4 = env2;
      t3 = env1;
      output = env0;
      break;
    case 4:
      proxyB = env8;
      proxyA = env7;
      t8 = env6;
      t6 = env5;
      tMax = env4;
      input = env3;
      t4 = env2;
      t3 = env1;
      output = env0;
      break;
    case 5:
      t9 = env20;
      iter = env19;
      t14 = env18;
      tMax = env17;
      t12 = env16;
      t10 = env15;
      t5 = env14;
      t8 = env13;
      t6 = env12;
      t4 = env11;
      t3 = env10;
      t15 = env9;
      proxyB = env8;
      proxyA = env7;
      t13 = env6;
      t7 = env5;
      target = env4;
      t11 = env3;
      t2 = env2;
      t1 = env1;
      output = env0;
      break;
    case 6:
      t9 = env20;
      iter = env19;
      t14 = env18;
      tMax = env17;
      t12 = env16;
      t15 = env15;
      t10 = env14;
      t5 = env13;
      t8 = env12;
      t6 = env11;
      t4 = env10;
      t3 = env9;
      proxyB = env8;
      proxyA = env7;
      t13 = env6;
      t7 = env5;
      target = env4;
      t11 = env3;
      t2 = env2;
      t1 = env1;
      output = env0;
      break;
    case 7:
      t9 = env22;
      t20 = env21;
      iter = env20;
      t14 = env19;
      t12 = env18;
      t10 = env17;
      t5 = env16;
      t6 = env15;
      t4 = env14;
      t3 = env13;
      t7 = env12;
      target = env11;
      t2 = env10;
      t1 = env9;
      tMax = env8;
      t8 = env7;
      proxyB = env6;
      proxyA = env5;
      t13 = env4;
      s2 = env3;
      pushBackIter = env2;
      t11 = env1;
      output = env0;
      break;
    case 8:
      pushBackIter = env23;
      t20 = env22;
      iter = env21;
      t14 = env20;
      t12 = env19;
      t10 = env18;
      t5 = env17;
      t6 = env16;
      t4 = env15;
      t3 = env14;
      t7 = env13;
      target = env12;
      s1 = env11;
      t2 = env10;
      t1 = env9;
      tMax = env8;
      t8 = env7;
      proxyB = env6;
      proxyA = env5;
      t13 = env4;
      s2 = env3;
      t9 = env2;
      t11 = env1;
      output = env0;
      break;
    case 9:
      pushBackIter = env28;
      t20 = env27;
      iter = env26;
      t14 = env25;
      t12 = env24;
      t10 = env23;
      t5 = env22;
      s = env21;
      t6 = env20;
      t4 = env19;
      t3 = env18;
      t = env17;
      t7 = env16;
      target = env15;
      t2 = env14;
      t1 = env13;
      tMax = env12;
      t8 = env11;
      proxyB = env10;
      t13 = env9;
      proxyA = env8;
      a2 = env7;
      a1 = env6;
      rootIterCount = env5;
      s1 = env4;
      s2 = env3;
      t9 = env2;
      t11 = env1;
      output = env0;
      break;
    case 10:
      pushBackIter = env29;
      t20 = env28;
      iter = env27;
      t14 = env26;
      t12 = env25;
      t15 = env24;
      t10 = env23;
      t5 = env22;
      s = env21;
      t6 = env20;
      t4 = env19;
      t3 = env18;
      t = env17;
      t7 = env16;
      target = env15;
      t2 = env14;
      t1 = env13;
      tMax = env12;
      t8 = env11;
      proxyB = env10;
      t13 = env9;
      proxyA = env8;
      a2 = env7;
      a1 = env6;
      rootIterCount = env5;
      s1 = env4;
      s2 = env3;
      t9 = env2;
      t11 = env1;
      output = env0;
      break;
    case 11:
      pushBackIter = env26;
      t20 = env25;
      iter = env24;
      t14 = env23;
      t12 = env22;
      t10 = env21;
      t5 = env20;
      t6 = env19;
      t4 = env18;
      t3 = env17;
      t7 = env16;
      target = env15;
      t2 = env14;
      t1 = env13;
      tMax = env12;
      t8 = env11;
      proxyB = env10;
      proxyA = env9;
      t13 = env8;
      rootIterCount = env7;
      a2 = env6;
      a1 = env5;
      s1 = env4;
      s2 = env3;
      t9 = env2;
      t11 = env1;
      output = env0;
      break;
    case 12:
      pushBackIter = env27;
      t20 = env26;
      iter = env25;
      t14 = env24;
      t12 = env23;
      t10 = env22;
      t5 = env21;
      t6 = env20;
      t4 = env19;
      t3 = env18;
      t7 = env17;
      target = env16;
      t2 = env15;
      t1 = env14;
      tMax = env13;
      t8 = env12;
      proxyB = env11;
      t13 = env10;
      proxyA = env9;
      t16 = env8;
      rootIterCount = env7;
      a2 = env6;
      a1 = env5;
      s1 = env4;
      s2 = env3;
      t9 = env2;
      t11 = env1;
      output = env0;
      break;
    case 13:
      t9 = env22;
      iter = env21;
      t14 = env20;
      t12 = env19;
      t10 = env18;
      t5 = env17;
      t6 = env16;
      t4 = env15;
      t3 = env14;
      t7 = env13;
      rootIterCount = env12;
      target = env11;
      t2 = env10;
      t20 = env9;
      t1 = env8;
      tMax = env7;
      t8 = env6;
      proxyB = env5;
      proxyA = env4;
      t13 = env3;
      pushBackIter = env2;
      t11 = env1;
      output = env0;
      break;
    case 14:
      t14 = env21;
      tMax = env20;
      t12 = env19;
      t10 = env18;
      t5 = env17;
      t8 = env16;
      t6 = env15;
      t4 = env14;
      t3 = env13;
      proxyB = env12;
      proxyA = env11;
      t15 = env10;
      iter = env9;
      t9 = env8;
      t13 = env7;
      t7 = env6;
      target = env5;
      t11 = env4;
      done = env3;
      t2 = env2;
      t1 = env1;
      output = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $.TimeOfImpact_toiCalls;
    case 1:
      state0 = 0;
      $.TimeOfImpact_toiCalls = $.add(t1, 1);
      output.set$state(0);
      output.set$t(input.get$tMax());
      proxyA = input.get$proxyA();
      proxyB = input.get$proxyB();
      t3 = this.sweepA;
      t3.setFrom$1(input.get$sweepA());
      t4 = this.sweepB;
      t4.setFrom$1(input.get$sweepB());
      t3.normalize$0();
      t4.normalize$0();
      tMax = input.get$tMax();
    case 2:
      state0 = 0;
      t6 = proxyA.get$radius();
    case 3:
      state0 = 0;
      t8 = proxyB.get$radius();
    case 4:
      state0 = 0;
      target = $.max(0.005, $.sub($.add(t6, t8), 0.015));
      t10 = this.cache;
      t10.count = 0;
      t11 = input.get$proxyA();
      t12 = this.distanceInput;
      t12.proxyA = t11;
      t12.proxyB = input.get$proxyB();
      t12.useRadii = false;
      t1 = this.fcn;
      t2 = this.indexes;
      t5 = t2.length;
      t6 = target + 0.00125;
      t7 = target - 0.00125;
      t8 = this.distanceOutput;
      t9 = this.xfA;
      t11 = this.xfB;
      t13 = this.pool;
      t14 = 0;
      iter = 0;
    default:
      var t1, input, output, proxyA, proxyB, t3, t4, tMax, t6, t8, target, t10, t11, t12, t2, t5, t7, t9, t13, t14, iter, t15, t20, pushBackIter, done, s2, s1, a2, a1, rootIterCount, t16, t, s;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t3.getTransform$2(t9, t14);
              t4.getTransform$2(t11, t14);
              t12.transformA = t9;
              t12.transformB = t11;
              t13.distance.distance$3(t8, t10, t12);
              t15 = t8.distance;
            case 5:
              state0 = 0;
              if ($.leB(t15, 0)) {
                output.set$state(2);
                output.set$t(0);
                break L0;
              }
              t15 = t8.distance;
            case 6:
              state0 = 0;
              if ($.ltB(t15, t6)) {
                output.set$state(3);
                output.set$t(t14);
                break L0;
              }
              t1.initialize$6(t10, proxyA, t3, proxyB, t4, t14);
              t20 = tMax;
              pushBackIter = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      done = false;
                      if (!true)
                        break L1;
                      s2 = t1.findMinSeparation$2(t2, t20);
                    case 7:
                      state0 = 0;
                      if ($.gtB(s2, t6)) {
                        output.set$state(4);
                        output.set$t(tMax);
                        done = true;
                        break L1;
                      }
                      if ($.gtB(s2, t7)) {
                        t14 = t20;
                        done = false;
                        break L1;
                      }
                      if (0 >= t5)
                        throw $.ioore(0);
                      t15 = t2[0];
                      if (1 >= t5)
                        throw $.ioore(1);
                      s1 = t1.evaluate$3(t15, t2[1], t14);
                    case 8:
                      state0 = 0;
                      if ($.ltB(s1, t7)) {
                        output.set$state(1);
                        output.set$t(t14);
                        done = true;
                        break L1;
                      }
                      if ($.leB(s1, t6)) {
                        output.set$state(3);
                        output.set$t(t14);
                        done = true;
                        break L1;
                      }
                      a2 = t20;
                      a1 = t14;
                      rootIterCount = 0;
                    default:
                      L2:
                        while (true)
                          switch (state0) {
                            case 0:
                              if (!true)
                                break L2;
                              if ((rootIterCount & 1) === 1) {
                                if (typeof s1 !== 'number')
                                  throw $.iae(s1);
                                t15 = target - s1;
                                t16 = $.sub(a2, a1);
                                if (typeof t16 !== 'number')
                                  throw $.iae(t16);
                                t16 = t15 * t16;
                                t15 = $.sub(s2, s1);
                                if (typeof t15 !== 'number')
                                  throw $.iae(t15);
                                t = $.add(a1, t16 / t15);
                              } else {
                                t15 = $.add(a1, a2);
                                if (typeof t15 !== 'number')
                                  throw $.iae(t15);
                                t = 0.5 * t15;
                              }
                              s = t1.evaluate$3(t2[0], t2[1], t);
                            case 9:
                              state0 = 0;
                              t15 = $.abs($.sub(s, target));
                            case 10:
                              state0 = 0;
                              if ($.ltB(t15, 0.00125)) {
                                t20 = t;
                                break L2;
                              }
                              if ($.gtB(s, target)) {
                                a1 = t;
                                s1 = s;
                              } else {
                                a2 = t;
                                s2 = s;
                              }
                            case 11:
                              state0 = 0;
                              ++rootIterCount;
                              t16 = $.TimeOfImpact_toiRootIters;
                            case 12:
                              state0 = 0;
                              $.TimeOfImpact_toiRootIters = $.add(t16, 1);
                              if (rootIterCount === 50)
                                break L2;
                          }
                    case 13:
                      state0 = 0;
                      $.TimeOfImpact_toiMaxRootIters = $.max($.TimeOfImpact_toiMaxRootIters, rootIterCount);
                      ++pushBackIter;
                      if (pushBackIter === 8) {
                        done = false;
                        break L1;
                      }
                  }
              ++iter;
              t15 = $.TimeOfImpact_toiIters;
            case 14:
              state0 = 0;
              $.TimeOfImpact_toiIters = $.add(t15, 1);
              if (done)
                break L0;
              if (iter === 1000) {
                output.set$state(1);
                output.set$t(t14);
                break L0;
              }
          }
      $.TimeOfImpact_toiMaxIters = $.max($.TimeOfImpact_toiMaxIters, iter);
  }
},
 get$timeOfImpact: function() { return new $.BoundClosure3(this, 'timeOfImpact$2'); },
 TimeOfImpact$_construct$1: function(argPool) {
  var t1, t2;
  t1 = this.indexes;
  t2 = t1.length;
  if (0 >= t2)
    throw $.ioore(0);
  t1[0] = 0;
  if (1 >= t2)
    throw $.ioore(1);
  t1[1] = 0;
  $.TimeOfImpact_toiCalls = 0;
  $.TimeOfImpact_toiIters = 0;
  $.TimeOfImpact_toiMaxIters = 0;
  $.TimeOfImpact_toiRootIters = 0;
  $.TimeOfImpact_toiMaxRootIters = 0;
}
};

$$.SeparationFunction = {"": ["proxyA=", "proxyB=", "type=", "localPoint?", "axis", "sweepA?", "sweepB?", "localPointA", "localPointB", "pointA", "pointB", "localPointA1", "localPointA2", "normal?", "localPointB1", "localPointB2", "axisA", "axisB", "temp", "xfa", "xfb"],
 "super": "Object",
 initialize$6: function(cache, argProxyA, argSweepA, argProxyB, argSweepB, t1) {
  var count, t3, t4, t5, t2, t6, t8, t9, t11, t13, t7, t10, t12, t14, t15, t16, s;
  this.proxyA = argProxyA;
  this.proxyB = argProxyB;
  count = cache.count;
  if (typeof count !== 'number')
    return this.initialize$6$bailout(1, cache, argSweepA, argSweepB, t1, count);
  this.sweepA = argSweepA;
  this.sweepB = argSweepB;
  t3 = this.sweepA;
  t4 = this.xfa;
  t3.getTransform$2(t4, t1);
  t3 = this.sweepB;
  t5 = this.xfb;
  t3.getTransform$2(t5, t1);
  if (count === 1) {
    this.type = 0;
    t1 = this.localPointA;
    t2 = this.proxyA.get$vertices();
    if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(2, cache, t4, t5, t1, t2);
    t6 = cache.indexA;
    if (typeof t6 !== 'string' && (typeof t6 !== 'object' || t6 === null || t6.constructor !== Array && !t6.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(3, cache, t4, t5, t1, t6, t2);
    if (0 >= t6.length)
      throw $.ioore(0);
    t6 = t6[0];
    if (t6 !== (t6 | 0))
      throw $.iae(t6);
    if (t6 < 0 || t6 >= t2.length)
      throw $.ioore(t6);
    t1.setFrom$1(t2[t6]);
    t8 = this.localPointB;
    t9 = this.proxyB.get$vertices();
    if (typeof t9 !== 'string' && (typeof t9 !== 'object' || t9 === null || t9.constructor !== Array && !t9.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(4, cache, t4, t5, t1, t9, t8);
    t11 = cache.indexB;
    if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(5, t4, t5, t1, t9, t8, t11);
    if (0 >= t11.length)
      throw $.ioore(0);
    t11 = t11[0];
    if (t11 !== (t11 | 0))
      throw $.iae(t11);
    if (t11 < 0 || t11 >= t9.length)
      throw $.ioore(t11);
    t8.setFrom$1(t9[t11]);
    t13 = this.pointA;
    $.Transform_mulToOut(t4, t1, t13);
    t1 = this.pointB;
    $.Transform_mulToOut(t5, t8, t1);
    t8 = this.axis;
    t8.setFrom$1(t1).subLocal$1(t13);
    return t8.normalize$0();
  } else {
    t1 = cache.indexA;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(6, cache, t4, t5, t1);
    t3 = t1.length;
    if (0 >= t3)
      throw $.ioore(0);
    t6 = t1[0];
    if (1 >= t3)
      throw $.ioore(1);
    t6 = $.eqB(t6, t1[1]);
    t7 = cache.indexB;
    if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
      return this.initialize$6$bailout(7, t6, t4, t5, t7, t1);
    t9 = this.pointA;
    t10 = this.axis;
    t11 = this.temp;
    t12 = this.normal;
    t13 = this.localPoint;
    t14 = this.pointB;
    if (t6) {
      this.type = 2;
      t2 = this.localPointB1;
      t3 = this.proxyB.get$vertices();
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(8, t14, t1, t9, t2, t7, t11, t4, t5, t10, t3, t12, t13);
      if (0 >= t7.length)
        throw $.ioore(0);
      t8 = t7[0];
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t3.length)
        throw $.ioore(t8);
      t2.setFrom$1(t3[t8]);
      t15 = this.localPointB2;
      t16 = this.proxyB.get$vertices();
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(9, t14, t1, t9, t2, t7, t15, t11, t4, t5, t10, t12, t13, t16);
      if (1 >= t7.length)
        throw $.ioore(1);
      t7 = t7[1];
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t16.length)
        throw $.ioore(t7);
      t15.setFrom$1(t16[t7]);
      t11.setFrom$1(t15).subLocal$1(t2);
      $.Vector_crossVectorAndNumToOut(t11, 1, t10);
      t10.normalize$0();
      $.Matrix22_mulMatrixAndVectorToOut(t5.rotation, t10, t12);
      t13.setFrom$1(t2);
      t13.addLocal$1(t15);
      t13.mulLocal$1(0.5);
      $.Transform_mulToOut(t5, t13, t14);
      t13 = this.localPointA;
      t5 = this.proxyA.get$vertices();
      if (typeof t5 !== 'string' && (typeof t5 !== 'object' || t5 === null || t5.constructor !== Array && !t5.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(10, t11, t14, t4, t13, t10, t1, t9, t12, t5);
      if (0 >= t1.length)
        throw $.ioore(0);
      t1 = t1[0];
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t5.length)
        throw $.ioore(t1);
      t13.setFrom$1(t5[t1]);
      $.Transform_mulToOut(t4, t13, t9);
      t11.setFrom$1(t9);
      t11.subLocal$1(t14);
      t14 = t11.x;
      if (typeof t14 !== 'number')
        return this.initialize$6$bailout(11, t11, t12, t10, t14);
      t13 = t12.x;
      if (typeof t13 !== 'number')
        return this.initialize$6$bailout(12, t11, t12, t10, t14, t13);
      t13 = t14 * t13;
      t11 = t11.y;
      if (typeof t11 !== 'number')
        return this.initialize$6$bailout(13, t11, t12, t10, t13);
      t12 = t12.y;
      if (typeof t12 !== 'number')
        return this.initialize$6$bailout(14, t11, t12, t10, t13);
      s = t13 + t11 * t12;
      if (s < 0) {
        t10.negateLocal$0();
        s = -s;
      }
      return s;
    } else {
      this.type = 1;
      t2 = this.localPointA1;
      t3 = this.proxyA.get$vertices();
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(15, t14, t1, t9, t7, t3, t11, t4, t5, t10, t2, t12, t13);
      if (0 >= t1.length)
        throw $.ioore(0);
      t8 = t1[0];
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= t3.length)
        throw $.ioore(t8);
      t2.setFrom$1(t3[t8]);
      t15 = this.localPointA2;
      t16 = this.proxyA.get$vertices();
      if (typeof t16 !== 'string' && (typeof t16 !== 'object' || t16 === null || t16.constructor !== Array && !t16.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(16, t14, t1, t9, t7, t11, t4, t5, t10, t2, t15, t12, t13, t16);
      if (1 >= t1.length)
        throw $.ioore(1);
      t1 = t1[1];
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t16.length)
        throw $.ioore(t1);
      t15.setFrom$1(t16[t1]);
      t11.setFrom$1(t15);
      t11.subLocal$1(t2);
      $.Vector_crossVectorAndNumToOut(t11, 1, t10);
      t10.normalize$0();
      $.Matrix22_mulMatrixAndVectorToOut(t4.rotation, t10, t12);
      t13.setFrom$1(t2);
      t13.addLocal$1(t15);
      t13.mulLocal$1(0.5);
      $.Transform_mulToOut(t4, t13, t9);
      t13 = this.localPointB;
      t4 = this.proxyB.get$vertices();
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.initialize$6$bailout(17, t11, t14, t5, t10, t4, t9, t12, t7, t13);
      if (0 >= t7.length)
        throw $.ioore(0);
      t7 = t7[0];
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t4.length)
        throw $.ioore(t7);
      t13.setFrom$1(t4[t7]);
      $.Transform_mulToOut(t5, t13, t14);
      t11.setFrom$1(t14);
      t11.subLocal$1(t9);
      t9 = t11.x;
      if (typeof t9 !== 'number')
        return this.initialize$6$bailout(18, t11, t12, t9, t10);
      t13 = t12.x;
      if (typeof t13 !== 'number')
        return this.initialize$6$bailout(19, t11, t12, t9, t13, t10);
      t13 = t9 * t13;
      t11 = t11.y;
      if (typeof t11 !== 'number')
        return this.initialize$6$bailout(20, t12, t11, t10, t13);
      t12 = t12.y;
      if (typeof t12 !== 'number')
        return this.initialize$6$bailout(21, t11, t12, t13, t10);
      s = t13 + t11 * t12;
      if (s < 0) {
        t10.negateLocal$0();
        s = -s;
      }
      return s;
    }
  }
},
 initialize$6$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12) {
  switch (state0) {
    case 1:
      count = env4;
      t1 = env3;
      argSweepB = env2;
      argSweepA = env1;
      cache = env0;
      break;
    case 2:
      t2 = env4;
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 3:
      t2 = env5;
      t6 = env4;
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 4:
      t8 = env5;
      t9 = env4;
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 5:
      t11 = env5;
      t8 = env4;
      t9 = env3;
      t1 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 6:
      t1 = env3;
      t5 = env2;
      t4 = env1;
      cache = env0;
      break;
    case 7:
      t1 = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      t3 = env0;
      break;
    case 8:
      t12 = env11;
      t11 = env10;
      t3 = env9;
      t9 = env8;
      t5 = env7;
      t4 = env6;
      t10 = env5;
      t6 = env4;
      t2 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 9:
      t15 = env12;
      t12 = env11;
      t11 = env10;
      t9 = env9;
      t5 = env8;
      t4 = env7;
      t10 = env6;
      t14 = env5;
      t6 = env4;
      t2 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 10:
      t5 = env8;
      t11 = env7;
      t8 = env6;
      t1 = env5;
      t9 = env4;
      t12 = env3;
      t4 = env2;
      t13 = env1;
      t10 = env0;
      break;
    case 11:
      t13 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 12:
      t12 = env4;
      t13 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 13:
      t12 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 14:
      t12 = env3;
      t9 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 15:
      t12 = env11;
      t11 = env10;
      t2 = env9;
      t9 = env8;
      t5 = env7;
      t4 = env6;
      t10 = env5;
      t3 = env4;
      t6 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 16:
      t15 = env12;
      t12 = env11;
      t11 = env10;
      t14 = env9;
      t2 = env8;
      t9 = env7;
      t5 = env6;
      t4 = env5;
      t10 = env4;
      t6 = env3;
      t8 = env2;
      t1 = env1;
      t13 = env0;
      break;
    case 17:
      t12 = env8;
      t6 = env7;
      t11 = env6;
      t8 = env5;
      t4 = env4;
      t9 = env3;
      t5 = env2;
      t13 = env1;
      t10 = env0;
      break;
    case 18:
      t9 = env3;
      t8 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 19:
      t9 = env4;
      t12 = env3;
      t8 = env2;
      t11 = env1;
      t10 = env0;
      break;
    case 20:
      t12 = env3;
      t9 = env2;
      t10 = env1;
      t11 = env0;
      break;
    case 21:
      t9 = env3;
      t12 = env2;
      t11 = env1;
      t10 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.proxyA = argProxyA;
      this.proxyB = argProxyB;
      count = cache.count;
    case 1:
      state0 = 0;
      this.sweepA = argSweepA;
      this.sweepB = argSweepB;
      t3 = this.sweepA;
      t4 = this.xfa;
      t3.getTransform$2(t4, t1);
      t3 = this.sweepB;
      t5 = this.xfb;
      t3.getTransform$2(t5, t1);
    default:
      var count, t1, argSweepB, argSweepA, cache, t3, t4, t5, t2, t6, t8, t9, t11, t13, t10, t12, t14, t15, s;
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && $.eqB(count, 1))
        switch (state0) {
          case 0:
            this.type = 0;
            t1 = this.localPointA;
            t2 = this.proxyA.get$vertices();
          case 2:
            state0 = 0;
            t6 = cache.indexA;
          case 3:
            state0 = 0;
            t1.setFrom$1($.index(t2, $.index(t6, 0)));
            t8 = this.localPointB;
            t9 = this.proxyB.get$vertices();
          case 4:
            state0 = 0;
            t11 = cache.indexB;
          case 5:
            state0 = 0;
            t8.setFrom$1($.index(t9, $.index(t11, 0)));
            t13 = this.pointA;
            $.Transform_mulToOut(t4, t1, t13);
            t1 = this.pointB;
            $.Transform_mulToOut(t5, t8, t1);
            t8 = this.axis;
            t8.setFrom$1(t1).subLocal$1(t13);
            return t8.normalize$0();
        }
      else
        switch (state0) {
          case 0:
            t1 = cache.indexA;
          case 6:
            state0 = 0;
            t3 = $.eqB($.index(t1, 0), $.index(t1, 1));
            t6 = cache.indexB;
          case 7:
            state0 = 0;
            t8 = this.pointA;
            t9 = this.axis;
            t10 = this.temp;
            t11 = this.normal;
            t12 = this.localPoint;
            t13 = this.pointB;
          default:
            if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 0 && t3)
              switch (state0) {
                case 0:
                  this.type = 2;
                  t2 = this.localPointB1;
                  t3 = this.proxyB.get$vertices();
                case 8:
                  state0 = 0;
                  t2.setFrom$1($.index(t3, $.index(t6, 0)));
                  t14 = this.localPointB2;
                  t15 = this.proxyB.get$vertices();
                case 9:
                  state0 = 0;
                  t14.setFrom$1($.index(t15, $.index(t6, 1)));
                  t10.setFrom$1(t14).subLocal$1(t2);
                  $.Vector_crossVectorAndNumToOut(t10, 1, t9);
                  t9.normalize$0();
                  $.Matrix22_mulMatrixAndVectorToOut(t5.rotation, t9, t11);
                  t12.setFrom$1(t2);
                  t12.addLocal$1(t14);
                  t12.mulLocal$1(0.5);
                  $.Transform_mulToOut(t5, t12, t13);
                  t12 = this.localPointA;
                  t5 = this.proxyA.get$vertices();
                case 10:
                  state0 = 0;
                  t12.setFrom$1($.index(t5, $.index(t1, 0)));
                  $.Transform_mulToOut(t4, t12, t8);
                  t10.setFrom$1(t8);
                  t10.subLocal$1(t13);
                  t13 = t10.x;
                case 11:
                  state0 = 0;
                  t12 = t11.x;
                case 12:
                  state0 = 0;
                  t12 = $.mul(t13, t12);
                  t10 = t10.y;
                case 13:
                  state0 = 0;
                  t11 = t11.y;
                case 14:
                  state0 = 0;
                  s = $.add(t12, $.mul(t10, t11));
                  if ($.ltB(s, 0)) {
                    t9.negateLocal$0();
                    s = $.neg(s);
                  }
                  return s;
              }
            else
              switch (state0) {
                case 0:
                  this.type = 1;
                  t2 = this.localPointA1;
                  t3 = this.proxyA.get$vertices();
                case 15:
                  state0 = 0;
                  t2.setFrom$1($.index(t3, $.index(t1, 0)));
                  t14 = this.localPointA2;
                  t15 = this.proxyA.get$vertices();
                case 16:
                  state0 = 0;
                  t14.setFrom$1($.index(t15, $.index(t1, 1)));
                  t10.setFrom$1(t14);
                  t10.subLocal$1(t2);
                  $.Vector_crossVectorAndNumToOut(t10, 1, t9);
                  t9.normalize$0();
                  $.Matrix22_mulMatrixAndVectorToOut(t4.rotation, t9, t11);
                  t12.setFrom$1(t2);
                  t12.addLocal$1(t14);
                  t12.mulLocal$1(0.5);
                  $.Transform_mulToOut(t4, t12, t8);
                  t12 = this.localPointB;
                  t4 = this.proxyB.get$vertices();
                case 17:
                  state0 = 0;
                  t12.setFrom$1($.index(t4, $.index(t6, 0)));
                  $.Transform_mulToOut(t5, t12, t13);
                  t10.setFrom$1(t13);
                  t10.subLocal$1(t8);
                  t8 = t10.x;
                case 18:
                  state0 = 0;
                  t12 = t11.x;
                case 19:
                  state0 = 0;
                  t12 = $.mul(t8, t12);
                  t10 = t10.y;
                case 20:
                  state0 = 0;
                  t11 = t11.y;
                case 21:
                  state0 = 0;
                  s = $.add(t12, $.mul(t10, t11));
                  if ($.ltB(s, 0)) {
                    t9.negateLocal$0();
                    s = $.neg(s);
                  }
                  return s;
              }
        }
  }
},
 findMinSeparation$2: function(indexes, t) {
  var t1, t2, t3, t4, t5, t6, t7;
  t1 = this.sweepA;
  t2 = this.xfa;
  t1.getTransform$2(t2, t);
  t1 = this.sweepB;
  t3 = this.xfb;
  t1.getTransform$2(t3, t);
  switch (this.type) {
    case 0:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.axisA;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t4, t5);
      t1 = t3.rotation;
      t6 = t4.negateLocal$0();
      t7 = this.axisB;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t6, t7);
      t4.negateLocal$0();
      t5 = this.proxyA.getSupport$1(t5);
      t6 = indexes.length;
      if (0 >= t6)
        throw $.ioore(0);
      indexes[0] = t5;
      t7 = this.proxyB.getSupport$1(t7);
      if (1 >= t6)
        throw $.ioore(1);
      indexes[1] = t7;
      t7 = this.localPointA;
      t7.setFrom$1($.index(this.proxyA.get$vertices(), indexes[0]));
      t5 = this.localPointB;
      t5.setFrom$1($.index(this.proxyB.get$vertices(), indexes[1]));
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t7, t1);
      t7 = this.pointB;
      $.Transform_mulToOut(t3, t5, t7);
      t1 = t7.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t4.x), $.mul(t1.get$y(), t4.y));
    case 1:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t4, t1);
      t5.negateLocal$0();
      t4 = t3.rotation;
      t2 = this.axisB;
      $.Matrix22_mulTransMatrixAndVectorToOut(t4, t5, t2);
      t5.negateLocal$0();
      t4 = indexes.length;
      if (0 >= t4)
        throw $.ioore(0);
      indexes[0] = -1;
      t2 = this.proxyB.getSupport$1(t2);
      if (1 >= t4)
        throw $.ioore(1);
      indexes[1] = t2;
      t2 = this.localPointB;
      t2.setFrom$1($.index(this.proxyB.get$vertices(), indexes[1]));
      t6 = this.pointB;
      $.Transform_mulToOut(t3, t2, t6);
      t1 = t6.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    case 2:
      t1 = t3.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t4, t1);
      t4 = t2.rotation;
      t3 = t5.negateLocal$0();
      t6 = this.axisA;
      $.Matrix22_mulTransMatrixAndVectorToOut(t4, t3, t6);
      t5.negateLocal$0();
      if (1 >= indexes.length)
        throw $.ioore(1);
      indexes[1] = -1;
      indexes[0] = this.proxyA.getSupport$1(t6);
      t3 = this.localPointA;
      t3.setFrom$1($.index(this.proxyA.get$vertices(), indexes[0]));
      t4 = this.pointA;
      $.Transform_mulToOut(t2, t3, t4);
      t1 = t4.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    default:
      t1 = indexes.length;
      if (0 >= t1)
        throw $.ioore(0);
      indexes[0] = -1;
      if (1 >= t1)
        throw $.ioore(1);
      indexes[1] = -1;
      return 0;
  }
},
 evaluate$3: function(indexA, indexB, t) {
  var t1, t2, t3, t4, t5, t6;
  t1 = this.sweepA;
  t2 = this.xfa;
  t1.getTransform$2(t2, t);
  t1 = this.sweepB;
  t3 = this.xfb;
  t1.getTransform$2(t3, t);
  switch (this.type) {
    case 0:
      t1 = t2.rotation;
      t4 = this.axis;
      $.Matrix22_mulTransMatrixAndVectorToOut(t1, t4, this.axisA);
      $.Matrix22_mulTransMatrixAndVectorToOut(t3.rotation, t4.negateLocal$0(), this.axisB);
      t4.negateLocal$0();
      t1 = this.localPointA;
      t1.setFrom$1($.index(this.proxyA.get$vertices(), indexA));
      t5 = this.localPointB;
      t5.setFrom$1($.index(this.proxyB.get$vertices(), indexB));
      t6 = this.pointA;
      $.Transform_mulToOut(t2, t1, t6);
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t5, t1);
      t6 = t1.subLocal$1(t6);
      return $.add($.mul(t6.get$x(), t4.x), $.mul(t6.get$y(), t4.y));
    case 1:
      t1 = t2.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointA;
      $.Transform_mulToOut(t2, t4, t1);
      t5.negateLocal$0();
      $.Matrix22_mulTransMatrixAndVectorToOut(t3.rotation, t5, this.axisB);
      t5.negateLocal$0();
      t4 = this.localPointB;
      t4.setFrom$1($.index(this.proxyB.get$vertices(), indexB));
      t2 = this.pointB;
      $.Transform_mulToOut(t3, t4, t2);
      t1 = t2.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    case 2:
      t1 = t3.rotation;
      t4 = this.axis;
      t5 = this.normal;
      $.Matrix22_mulMatrixAndVectorToOut(t1, t4, t5);
      t4 = this.localPoint;
      t1 = this.pointB;
      $.Transform_mulToOut(t3, t4, t1);
      $.Matrix22_mulTransMatrixAndVectorToOut(t2.rotation, t5.negateLocal$0(), this.axisA);
      t5.negateLocal$0();
      t4 = this.localPointA;
      t4.setFrom$1($.index(this.proxyA.get$vertices(), indexA));
      t3 = this.pointA;
      $.Transform_mulToOut(t2, t4, t3);
      t1 = t3.subLocal$1(t1);
      return $.add($.mul(t1.get$x(), t5.x), $.mul(t1.get$y(), t5.y));
    default:
      return 0;
  }
}
};

$$.TimeOfImpactInput = {"": ["proxyA?", "proxyB?", "sweepA?", "sweepB?", "tMax="],
 "super": "Object"
};

$$.TimeOfImpactOutput = {"": ["state=", "t="],
 "super": "Object"
};

$$.WorldManifold = {"": ["normal?", "points?", "pool3", "pool4"],
 "super": "Object",
 initialize$5: function(manifold, xfA, radiusA, xfB, radiusB) {
  var pointA, pointB, t1, cAx, cAy, cBx, cBy, t2, t3, planePoint, clipPoint, i, scalar, t4, R, v;
  switch (manifold.get$type()) {
    case 0:
      pointA = this.pool3;
      pointB = this.pool4;
      t1 = this.normal;
      t1.x = 1;
      t1.y = 0;
      pointA.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localPoint().get$y()));
      pointA.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localPoint().get$y()));
      pointB.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), 0).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), 0).get$localPoint().get$y()));
      pointB.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), 0).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), 0).get$localPoint().get$y()));
      if ($.gtB($.MathBox_distanceSquared(pointA, pointB), 1.4208639999999999e-14)) {
        t1.x = $.sub(pointB.x, pointA.x);
        t1.y = $.sub(pointB.y, pointA.y);
        t1.normalize$0();
      }
      cAx = $.add($.mul(t1.x, radiusA), pointA.x);
      cAy = $.add($.mul(t1.y, radiusA), pointA.y);
      cBx = $.add($.mul($.neg(t1.x), radiusB), pointB.x);
      cBy = $.add($.mul($.neg(t1.y), radiusB), pointB.y);
      t2 = $.mul($.add(cAx, cBx), 0.5);
      t3 = this.points;
      if (0 >= t3.length)
        throw $.ioore(0);
      t3[0].set$x(t2);
      t2 = $.mul($.add(cAy, cBy), 0.5);
      t3[0].set$y(t2);
      return;
    case 1:
      planePoint = this.pool3;
      t1 = $.add($.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localNormal().get$x()), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localNormal().get$y()));
      t2 = this.normal;
      t2.x = t1;
      t2.y = $.add($.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localNormal().get$x()), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localNormal().get$y()));
      planePoint.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), manifold.get$localPoint().get$y()));
      planePoint.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), manifold.get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), manifold.get$localPoint().get$y()));
      clipPoint = this.pool4;
      for (t1 = this.points, t3 = t1.length, i = 0; $.ltB(i, manifold.get$pointCount()); ++i) {
        clipPoint.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        clipPoint.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        scalar = $.sub(radiusA, $.add($.mul($.sub(clipPoint.x, planePoint.x), t2.x), $.mul($.sub(clipPoint.y, planePoint.y), t2.y)));
        cAx = $.add($.mul(t2.x, scalar), clipPoint.x);
        cAy = $.add($.mul(t2.y, scalar), clipPoint.y);
        cBx = $.add($.mul($.neg(t2.x), radiusB), clipPoint.x);
        cBy = $.add($.mul($.neg(t2.y), radiusB), clipPoint.y);
        t4 = $.mul($.add(cAx, cBx), 0.5);
        if (i >= t3)
          throw $.ioore(i);
        t1[i].set$x(t4);
        t4 = $.mul($.add(cAy, cBy), 0.5);
        t1[i].set$y(t4);
      }
      return;
    case 2:
      planePoint = this.pool3;
      R = xfB.get$rotation();
      t1 = $.add($.mul(R.get$col1().get$x(), manifold.get$localNormal().get$x()), $.mul(R.get$col2().get$x(), manifold.get$localNormal().get$y()));
      t2 = this.normal;
      t2.x = t1;
      t2.y = $.add($.mul(R.get$col1().get$y(), manifold.get$localNormal().get$x()), $.mul(R.get$col2().get$y(), manifold.get$localNormal().get$y()));
      v = manifold.get$localPoint();
      planePoint.x = $.add($.add(xfB.get$position().get$x(), $.mul(xfB.get$rotation().get$col1().get$x(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$x(), v.get$y()));
      planePoint.y = $.add($.add(xfB.get$position().get$y(), $.mul(xfB.get$rotation().get$col1().get$y(), v.get$x())), $.mul(xfB.get$rotation().get$col2().get$y(), v.get$y()));
      clipPoint = this.pool4;
      for (t1 = this.points, t3 = t1.length, i = 0; $.ltB(i, manifold.get$pointCount()); ++i) {
        clipPoint.x = $.add($.add(xfA.get$position().get$x(), $.mul(xfA.get$rotation().get$col1().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$x(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        clipPoint.y = $.add($.add(xfA.get$position().get$y(), $.mul(xfA.get$rotation().get$col1().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$x())), $.mul(xfA.get$rotation().get$col2().get$y(), $.index(manifold.get$points(), i).get$localPoint().get$y()));
        scalar = $.sub(radiusB, $.add($.mul($.sub(clipPoint.x, planePoint.x), t2.x), $.mul($.sub(clipPoint.y, planePoint.y), t2.y)));
        cBx = $.add($.mul(t2.x, scalar), clipPoint.x);
        cBy = $.add($.mul(t2.y, scalar), clipPoint.y);
        cAx = $.add($.mul($.neg(t2.x), radiusA), clipPoint.x);
        cAy = $.add($.mul($.neg(t2.y), radiusA), clipPoint.y);
        t4 = $.mul($.add(cAx, cBx), 0.5);
        if (i >= t3)
          throw $.ioore(i);
        t1[i].set$x(t4);
        t4 = $.mul($.add(cAy, cBy), 0.5);
        t1[i].set$y(t4);
      }
      t2.x = $.neg(t2.x);
      t2.y = $.neg(t2.y);
      break;
  }
},
 WorldManifold$0: function() {
  var t1, t2, i, t3;
  for (t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    t3 = $.Vector$(0, 0);
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.BroadPhase = {"": ["_tree", "proxyCount", "moveBuffer", "_pairBuffer", "_pairCapacity", "_pairCount", "queryProxy"],
 "super": "Object",
 createProxy$2: function(box, userData) {
  var node = this._tree.createProxy$2(box, userData);
  this.proxyCount = this.proxyCount + 1;
  this.moveBuffer.push(node);
  return node;
},
 moveProxy$3: function(proxy, box, displacement) {
  if (this._tree.moveProxy$3(proxy, box, displacement) === true)
    this.moveBuffer.push(proxy);
},
 testOverlap$2: function(proxyA, proxyB) {
  return $.AxisAlignedBox_testOverlap(proxyA.get$box(), proxyB.get$box());
},
 updatePairs$1: function(callback) {
  var t1, i, t2, pairBuffer, primaryPair, t3, t4, t5, pair, t6, t7;
  this._pairCount = 0;
  for (t1 = this._tree, i = 0; t2 = this.moveBuffer, i < t2.length; ++i) {
    this.queryProxy = t2[i];
    t2 = this.queryProxy;
    if (t2 == null)
      continue;
    t1.query$2(this, t2.get$box());
  }
  this.moveBuffer = $._ListImpl_List(null);
  pairBuffer = $._ListImpl_List$from($.getRange(this._pairBuffer, 0, this._pairCount));
  $.sort$1(pairBuffer, new $.BroadPhase_updatePairs_anon());
  $.setRange$3(this._pairBuffer, 0, this._pairCount, pairBuffer);
  for (i = 0; i < this._pairCount;) {
    t2 = this._pairBuffer;
    if (i < 0 || i >= t2.length)
      throw $.ioore(i);
    primaryPair = t2[i];
    callback.addPair$2(primaryPair.get$proxyA().get$userData(), primaryPair.get$proxyB().get$userData());
    ++i;
    for (t2 = primaryPair.get$proxyB(), t3 = primaryPair.get$proxyA(), t4 = this._pairBuffer, t5 = t4.length; i < this._pairCount;) {
      if (i >= t5)
        throw $.ioore(i);
      pair = t4[i];
      t6 = pair.get$proxyA();
      if (t6 == null ? t3 == null : t6 === t3) {
        t6 = pair.get$proxyB();
        t7 = !(t6 == null ? t2 == null : t6 === t2);
        t6 = t7;
      } else
        t6 = true;
      if (t6)
        break;
      ++i;
    }
  }
  t1.rebalance$1(4);
},
 treeCallback$1: function(proxy) {
  var t1, t2, oldBuffer, i, i0, t3, t4, t5;
  if ($.eqB(proxy, this.queryProxy))
    return true;
  t1 = this._pairCount;
  t2 = this._pairCapacity;
  if (t1 === t2) {
    oldBuffer = this._pairBuffer;
    this._pairCapacity = t2 * 2;
    this._pairBuffer = $._ListImpl_List(this._pairCapacity);
    for (t1 = this._pairBuffer, i = oldBuffer.length, t2 = t1.length, i0 = 0; i0 < i; ++i0) {
      t3 = oldBuffer[i0];
      if (i0 >= t2)
        throw $.ioore(i0);
      t1[i0] = t3;
    }
    for (; i < this._pairCapacity; ++i) {
      t1 = this._pairBuffer;
      t2 = $.Pair$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  t1 = $.ltB(proxy.get$key(), this.queryProxy.get$key());
  t2 = this._pairBuffer;
  t3 = this._pairCount;
  if (t1) {
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3].set$proxyA(proxy);
    t1 = this.queryProxy;
    t4 = this._pairBuffer;
    t5 = this._pairCount;
    if (t5 < 0 || t5 >= t4.length)
      throw $.ioore(t5);
    t4[t5].set$proxyB(t1);
  } else {
    t1 = this.queryProxy;
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3].set$proxyA(t1);
    t1 = this._pairBuffer;
    t4 = this._pairCount;
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    t1[t4].set$proxyB(proxy);
  }
  this._pairCount = this._pairCount + 1;
  return true;
},
 BroadPhase$0: function() {
  var i, t1, t2;
  this.moveBuffer = $._ListImpl_List(null);
  this._pairBuffer = $._ListImpl_List(this._pairCapacity);
  for (i = 0; i < this._pairCapacity; ++i) {
    t1 = this._pairBuffer;
    t2 = $.Pair$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.DynamicTree = {"": ["_root", "_nodeCount", "_lastLeaf", "_insertionCount", "_path", "_nodeStack", "_drawVectors", "_nodeCounter", "_tempVector", "_tempBox", "center?", "deltaOne", "deltaTwo"],
 "super": "Object",
 createProxy$2: function(box, userData) {
  var proxy, t1, iterationCount, height, tryCount;
  proxy = this._allocateNode$0();
  t1 = $.sub(box.get$lowerBound().get$x(), 0.1);
  proxy.get$box().get$lowerBound().set$x(t1);
  t1 = $.sub(box.get$lowerBound().get$y(), 0.1);
  proxy.get$box().get$lowerBound().set$y(t1);
  t1 = $.add(box.get$upperBound().get$x(), 0.1);
  proxy.get$box().get$upperBound().set$x(t1);
  t1 = $.add(box.get$upperBound().get$y(), 0.1);
  proxy.get$box().get$upperBound().set$y(t1);
  proxy.set$userData(userData);
  this._insertLeaf$1(proxy);
  iterationCount = $.shr(this._nodeCount, 4);
  height = this._computeHeight$1(this._root);
  if (typeof height !== 'number')
    return this.createProxy$2$bailout(1, height, proxy, iterationCount);
  tryCount = 0;
  while (true) {
    if (!($.gtB(height, 64) && tryCount < 10))
      break;
    this.rebalance$1(iterationCount);
    height = this._computeHeight$1(this._root);
    ++tryCount;
  }
  return proxy;
},
 createProxy$2$bailout: function(state0, height, proxy, iterationCount) {
  var tryCount = 0;
  while (true) {
    if (!($.gtB(height, 64) && tryCount < 10))
      break;
    this.rebalance$1(iterationCount);
    height = this._computeHeight$1(this._root);
    ++tryCount;
  }
  return proxy;
},
 moveProxy$3: function(argProxy, argBox, displacement) {
  var t1, t2, t3;
  if ($.contains$1(argProxy.get$box(), argBox) === true)
    return false;
  this._removeLeaf$1(argProxy);
  t1 = argBox.lowerBound;
  t1.set$x($.sub(t1.get$x(), 0.1));
  t1 = argBox.lowerBound;
  t1.set$y($.sub(t1.get$y(), 0.1));
  t1 = argBox.upperBound;
  t1.set$x($.add(t1.get$x(), 0.1));
  t1 = argBox.upperBound;
  t1.set$y($.add(t1.get$y(), 0.1));
  t1 = this._tempVector;
  t1.setFrom$1(displacement);
  t1.mulLocal$1(2);
  t2 = $.ltB(t1.x, 0);
  t3 = t1.x;
  if (t2) {
    t2 = argBox.lowerBound;
    t2.set$x($.add(t2.get$x(), t3));
  } else {
    t2 = argBox.upperBound;
    t2.set$x($.add(t2.get$x(), t3));
  }
  t2 = $.ltB(t1.y, 0);
  t1 = t1.y;
  if (t2) {
    t2 = argBox.lowerBound;
    t2.set$y($.add(t2.get$y(), t1));
  } else {
    t2 = argBox.upperBound;
    t2.set$y($.add(t2.get$y(), t1));
  }
  argProxy.get$box().setFrom$1(argBox);
  this._insertLeaf$1(argProxy);
  return true;
},
 _allocateNode$0: function() {
  var t1, i, node;
  t1 = this._nodeStack;
  if ($.get$isEmpty(t1) === true)
    for (i = 0; i < 6; ++i)
      t1.addFirst$1($.DynamicTreeNode$_construct());
  node = t1.removeFirst$0();
  node.set$parent(null);
  node.set$childOne(null);
  node.set$childTwo(null);
  node.set$userData(null);
  node.set$key(this._nodeCounter);
  this._nodeCounter = this._nodeCounter + 1;
  this._nodeCount = this._nodeCount + 1;
  return node;
},
 query$2: function(callback, argBox) {
  this._query$4(callback, argBox, this._root, 1);
},
 _query$4: function(callback, argBox, node, count) {
  if (node == null)
    return true;
  if ($.AxisAlignedBox_testOverlap(argBox, node.get$box()))
    if (node.get$isLeaf() === true) {
      if (callback.treeCallback$1(node) !== true)
        return false;
    } else {
      if (count < 64) {
        ++count;
        if (this._query$4(callback, argBox, node.get$childOne(), count) !== true)
          return false;
      }
      if (count < 64) {
        ++count;
        if (this._query$4(callback, argBox, node.get$childTwo(), count) !== true)
          return false;
      }
    }
  return true;
},
 _insertLeaf$1: function(node) {
  var t1, sibling, childOne, childTwo, t2, t3, t4, normOne, node1, node2, node10;
  this._insertionCount = this._insertionCount + 1;
  if (this._root == null) {
    this._root = node;
    node.set$parent(null);
    return;
  }
  t1 = this.center;
  t1.setFrom$1(node.get$box().get$center());
  sibling = this._root;
  if (sibling.get$isLeaf() !== true)
    while (true) {
      childOne = sibling.get$childOne();
      childTwo = sibling.get$childTwo();
      t2 = this.deltaOne;
      t2.setFrom$1(childOne.get$box().get$center());
      t3 = this.deltaTwo;
      t3.setFrom$1(childTwo.get$box().get$center());
      t2.subLocal$1(t1).absLocal$0();
      t3.subLocal$1(t1).absLocal$0();
      t4 = t2.x;
      if (typeof t4 !== 'number')
        return this._insertLeaf$1$bailout(1, node, t3, childOne, childTwo, t4, t1, t2);
      t2 = t2.y;
      if (typeof t2 !== 'number')
        return this._insertLeaf$1$bailout(2, node, t3, childOne, childTwo, t4, t2, t1);
      normOne = t4 + t2;
      t2 = t3.x;
      if (typeof t2 !== 'number')
        return this._insertLeaf$1$bailout(3, node, t3, childOne, childTwo, normOne, t2, t1);
      t3 = t3.y;
      if (typeof t3 !== 'number')
        return this._insertLeaf$1$bailout(4, node, childOne, childTwo, normOne, t2, t3, t1);
      sibling = normOne < t2 + t3 ? childOne : childTwo;
      t2 = sibling.get$isLeaf();
      if (typeof t2 !== 'boolean')
        return this._insertLeaf$1$bailout(5, sibling, node, t2, t1);
      if (!!t2)
        break;
    }
  node1 = sibling.get$parent();
  node2 = this._allocateNode$0();
  node2.set$parent(node1);
  node2.set$userData(null);
  node2.get$box().setFromCombination$2(node.get$box(), sibling.get$box());
  if (!(node1 == null)) {
    t1 = sibling.get$parent().get$childOne();
    if (t1 == null ? sibling == null : t1 === sibling)
      node1.set$childOne(node2);
    else
      node1.set$childTwo(node2);
    node2.set$childOne(sibling);
    node2.set$childTwo(node);
    sibling.set$parent(node2);
    node.set$parent(node2);
    while (true) {
      if ($.contains$1(node1.get$box(), node2.get$box()) === true)
        break;
      node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
      node10 = node1.get$parent();
      if (!!(node10 == null))
        break;
      node2 = node1;
      node1 = node10;
    }
  } else {
    node2.set$childOne(sibling);
    node2.set$childTwo(node);
    sibling.set$parent(node2);
    node.set$parent(node2);
    this._root = node2;
  }
},
 _insertLeaf$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t2 = env6;
      t1 = env5;
      t4 = env4;
      childTwo = env3;
      childOne = env2;
      t3 = env1;
      node = env0;
      break;
    case 2:
      t1 = env6;
      t2 = env5;
      t4 = env4;
      childTwo = env3;
      childOne = env2;
      t3 = env1;
      node = env0;
      break;
    case 3:
      t1 = env6;
      t2 = env5;
      normOne = env4;
      childTwo = env3;
      childOne = env2;
      t3 = env1;
      node = env0;
      break;
    case 4:
      t1 = env6;
      t3 = env5;
      t2 = env4;
      normOne = env3;
      childTwo = env2;
      childOne = env1;
      node = env0;
      break;
    case 5:
      t1 = env3;
      t2 = env2;
      node = env1;
      sibling = env0;
      break;
  }
  switch (state0) {
    case 0:
      this._insertionCount = this._insertionCount + 1;
      if (this._root == null) {
        this._root = node;
        node.set$parent(null);
        return;
      }
      t1 = this.center;
      t1.setFrom$1(node.get$box().get$center());
      sibling = this._root;
    default:
      var t1, sibling, childOne, childTwo, t2, t3, t4, node, normOne, node1, node2, node10;
      if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && sibling.get$isLeaf() !== true)
        switch (state0) {
          case 0:
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    childOne = sibling.get$childOne();
                    childTwo = sibling.get$childTwo();
                    t2 = this.deltaOne;
                    t2.setFrom$1(childOne.get$box().get$center());
                    t3 = this.deltaTwo;
                    t3.setFrom$1(childTwo.get$box().get$center());
                    t2.subLocal$1(t1).absLocal$0();
                    t3.subLocal$1(t1).absLocal$0();
                    t4 = t2.x;
                  case 1:
                    state0 = 0;
                    t2 = t2.y;
                  case 2:
                    state0 = 0;
                    normOne = $.add(t4, t2);
                    t2 = t3.x;
                  case 3:
                    state0 = 0;
                    t3 = t3.y;
                  case 4:
                    state0 = 0;
                    sibling = $.ltB(normOne, $.add(t2, t3)) ? childOne : childTwo;
                    t2 = sibling.get$isLeaf();
                  case 5:
                    state0 = 0;
                    if (!$.eqB(t2, false))
                      break L0;
                }
        }
      node1 = sibling.get$parent();
      node2 = this._allocateNode$0();
      node2.set$parent(node1);
      node2.set$userData(null);
      node2.get$box().setFromCombination$2(node.get$box(), sibling.get$box());
      if (!(node1 == null)) {
        t1 = sibling.get$parent().get$childOne();
        if (t1 == null ? sibling == null : t1 === sibling)
          node1.set$childOne(node2);
        else
          node1.set$childTwo(node2);
        node2.set$childOne(sibling);
        node2.set$childTwo(node);
        sibling.set$parent(node2);
        node.set$parent(node2);
        L1:
          while (true) {
            if ($.contains$1(node1.get$box(), node2.get$box()) === true)
              break;
            node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
            node10 = node1.get$parent();
            if (!!(node10 == null))
              break L1;
            node2 = node1;
            node1 = node10;
          }
      } else {
        node2.set$childOne(sibling);
        node2.set$childTwo(node);
        sibling.set$parent(node2);
        node.set$parent(node2);
        this._root = node2;
      }
  }
},
 _removeLeaf$1: function(argNode) {
  var t1, node2, node1, sibling;
  t1 = this._root;
  if (argNode == null ? t1 == null : argNode === t1) {
    this._root = null;
    t1 = this._lastLeaf;
    if (t1 == null ? argNode == null : t1 === argNode)
      this._lastLeaf = null;
    return;
  }
  node2 = argNode.get$parent();
  node1 = node2.get$parent();
  sibling = node2.get$childOne();
  if (sibling == null ? argNode == null : sibling === argNode)
    sibling = node2.get$childTwo();
  if (!(node1 == null)) {
    t1 = node1.get$childOne();
    if (t1 == null ? node2 == null : t1 === node2)
      node1.set$childOne(sibling);
    else
      node1.set$childTwo(sibling);
    sibling.set$parent(node1);
    this._freeNode$1(node2);
    for (t1 = this._tempBox; !(node1 == null);) {
      t1.setFrom$1(node1.get$box());
      node1.get$box().setFromCombination$2(node1.get$childOne().get$box(), node1.get$childTwo().get$box());
      if (t1.contains$1(node1.get$box()) === true)
        break;
      node1 = node1.get$parent();
    }
  } else {
    this._root = sibling;
    sibling.set$parent(null);
    this._freeNode$1(node2);
  }
  t1 = this._lastLeaf;
  if (t1 == null ? argNode == null : t1 === argNode)
    this._lastLeaf = this._root;
},
 _computeHeight$1: function(node) {
  if (node == null)
    return 0;
  return 1 + $.max(this._computeHeight$1(node.get$childOne()), this._computeHeight$1(node.get$childTwo()));
},
 rebalance$1: function(iterations) {
  var i, current, bit, t1, t2, bit0;
  if (this._root == null)
    return;
  for (i = 0; i < iterations; ++i) {
    current = this._root;
    for (bit = 0; t1 = current.get$isLeaf() !== true, t2 = this._path, t1; bit = bit0) {
      current = ($.shr(t2, bit) & 1) === 0 ? current.get$childOne() : current.get$childTwo();
      bit0 = bit + 1 & 31;
    }
    this._path = t2 + 1;
    this._removeLeaf$1(current);
    this._insertLeaf$1(current);
  }
},
 _freeNode$1: function(node) {
  this._nodeStack.addFirst$1(node);
  this._nodeCount = this._nodeCount - 1;
},
 DynamicTree$0: function() {
  var t1, t2, i;
  for (t1 = this._drawVectors, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.DynamicTreeNode = {"": ["box?", "parent=", "next=", "childOne=", "childTwo=", "userData=", "key="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 get$isLeaf: function() {
  return this.childOne == null;
},
 toString$0: function() {
  return this.box.toString$0();
}
};

$$.Pair = {"": ["proxyA=", "proxyB="],
 "super": "Object",
 compareTo$1: function(pair2) {
  var t1;
  if ($.ltB(this.proxyA.get$key(), pair2.get$proxyA().get$key()))
    return -1;
  if ($.eqB(this.proxyA.get$key(), pair2.get$proxyA().get$key())) {
    if ($.ltB(this.proxyB.get$key(), pair2.get$proxyB().get$key()))
      t1 = -1;
    else
      t1 = $.eqB(this.proxyB.get$key(), pair2.get$proxyB().get$key()) ? 0 : 1;
    return t1;
  }
  return 1;
}
};

$$.MassData = {"": ["mass?", "center?", "inertia?"],
 "super": "Object",
 setFrom$1: function(md) {
  this.mass = md.get$mass();
  this.inertia = md.get$inertia();
  this.center.setFrom$1(md.get$center());
}
};

$$.PolygonShape = {"": ["centroid?", "vertices?", "normals?", "vertexCount?", "type", "radius"],
 "super": "Shape",
 getSupport$1: function(d) {
  var t1, t3, t4, t5, t7, t10, bestValue, bestIndex, i, t2, value;
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getSupport$1$bailout(1, d, t1);
  t3 = t1.length;
  if (0 >= t3)
    throw $.ioore(0);
  t4 = t1[0];
  t5 = t4.get$x();
  if (typeof t5 !== 'number')
    return this.getSupport$1$bailout(2, d, t5, t1, t4);
  t7 = d.get$x();
  if (typeof t7 !== 'number')
    return this.getSupport$1$bailout(3, d, t5, t7, t1, t4);
  t5 *= t7;
  t4 = t4.get$y();
  if (typeof t4 !== 'number')
    return this.getSupport$1$bailout(4, d, t5, t4, t1);
  t10 = d.get$y();
  if (typeof t10 !== 'number')
    return this.getSupport$1$bailout(5, d, t5, t4, t1, t10);
  bestValue = t5 + t4 * t10;
  bestIndex = 0;
  i = 1;
  while (true) {
    t2 = this.vertexCount;
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(6, d, bestIndex, bestValue, i, t1, t2);
    if (!(i < t2))
      break;
    if (i >= t3)
      throw $.ioore(i);
    t2 = t1[i];
    t4 = t2.get$x();
    if (typeof t4 !== 'number')
      return this.getSupport$1$bailout(7, d, t2, t4, bestIndex, bestValue, i, t1);
    t4 *= t7;
    t2 = t2.get$y();
    if (typeof t2 !== 'number')
      return this.getSupport$1$bailout(9, d, bestIndex, t4, bestValue, t2, i, t1);
    value = t4 + t2 * t10;
    if (value > bestValue) {
      bestValue = value;
      bestIndex = i;
    }
    ++i;
  }
  return bestIndex;
},
 getSupport$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      t1 = env1;
      d = env0;
      break;
    case 2:
      t3 = env3;
      t1 = env2;
      t4 = env1;
      d = env0;
      break;
    case 3:
      t3 = env4;
      t1 = env3;
      t6 = env2;
      t4 = env1;
      d = env0;
      break;
    case 4:
      t1 = env3;
      t3 = env2;
      t6 = env1;
      d = env0;
      break;
    case 5:
      t8 = env4;
      t1 = env3;
      t3 = env2;
      t6 = env1;
      d = env0;
      break;
    case 6:
      t2 = env5;
      t1 = env4;
      i = env3;
      bestValue = env2;
      bestIndex = env1;
      d = env0;
      break;
    case 7:
      t1 = env6;
      i = env5;
      bestValue = env4;
      bestIndex = env3;
      t3 = env2;
      t2 = env1;
      d = env0;
      break;
    case 8:
      t1 = env7;
      i = env6;
      bestValue = env5;
      t5 = env4;
      bestIndex = env3;
      t3 = env2;
      t2 = env1;
      d = env0;
      break;
    case 9:
      t1 = env6;
      i = env5;
      t2 = env4;
      bestValue = env3;
      t5 = env2;
      bestIndex = env1;
      d = env0;
      break;
    case 10:
      t1 = env7;
      t7 = env6;
      i = env5;
      t2 = env4;
      bestValue = env3;
      t5 = env2;
      bestIndex = env1;
      d = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
    case 1:
      state0 = 0;
      t3 = $.index(t1, 0);
      t4 = t3.get$x();
    case 2:
      state0 = 0;
      t6 = d.get$x();
    case 3:
      state0 = 0;
      t6 = $.mul(t4, t6);
      t3 = t3.get$y();
    case 4:
      state0 = 0;
      t8 = d.get$y();
    case 5:
      state0 = 0;
      bestValue = $.add(t6, $.mul(t3, t8));
      bestIndex = 0;
      i = 1;
    default:
      var t1, d, t3, t4, t6, t8, bestValue, bestIndex, i, t2, t5, t7, value;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t2 = this.vertexCount;
            case 6:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L0;
              t2 = $.index(t1, i);
              t3 = t2.get$x();
            case 7:
              state0 = 0;
              t5 = d.get$x();
            case 8:
              state0 = 0;
              t5 = $.mul(t3, t5);
              t2 = t2.get$y();
            case 9:
              state0 = 0;
              t7 = d.get$y();
            case 10:
              state0 = 0;
              value = $.add(t5, $.mul(t2, t7));
              if ($.gtB(value, bestValue)) {
                bestValue = value;
                bestIndex = i;
              }
              ++i;
          }
      return bestIndex;
  }
},
 clone$0: function() {
  return $.PolygonShape$copy(this);
},
 setAsBox$2: function(hx, hy) {
  var t1, t2, t3, t4;
  this.vertexCount = 4;
  t1 = this.vertices;
  t2 = $.index(t1, 0);
  t3 = -hx;
  t4 = -hy;
  t2.setCoords$2(t3, t4);
  $.index(t1, 1).setCoords$2(hx, t4);
  $.index(t1, 2).setCoords$2(hx, hy);
  $.index(t1, 3).setCoords$2(t3, hy);
  t3 = this.normals;
  $.index(t3, 0).setCoords$2(0, -1);
  $.index(t3, 1).setCoords$2(1, 0);
  $.index(t3, 2).setCoords$2(0, 1);
  $.index(t3, 3).setCoords$2(-1, 0);
  this.centroid.setZero$0();
},
 setAsEdge$2: function(v1, v2) {
  var t1, t2;
  this.vertexCount = 2;
  t1 = this.vertices;
  $.index(t1, 0).setFrom$1(v1);
  $.index(t1, 1).setFrom$1(v2);
  this.centroid.setFrom$1(v1).addLocal$1(v2).mulLocal$1(0.5);
  t2 = this.normals;
  $.index(t2, 0).setFrom$1(v2).subLocal$1(v1);
  $.Vector_crossVectorAndNumToOut($.index(t2, 0), 1, $.index(t2, 0));
  $.index(t2, 0).normalize$0();
  $.index(t2, 1).setFrom$1($.index(t2, 0)).negateLocal$0();
},
 computeAxisAlignedBox$2: function(argAabb, argXf) {
  var lower, upper, v, t1, i;
  lower = $.Vector$(0, 0);
  upper = $.Vector$(0, 0);
  v = $.Vector$(0, 0);
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.computeAxisAlignedBox$2$bailout(1, argAabb, argXf, lower, t1, upper, v);
  if (0 >= t1.length)
    throw $.ioore(0);
  $.Transform_mulToOut(argXf, t1[0], lower);
  upper.setFrom$1(lower);
  for (i = 1; $.ltB(i, this.vertexCount); ++i) {
    if (i >= t1.length)
      throw $.ioore(i);
    $.Transform_mulToOut(argXf, t1[i], v);
    lower.x = $.ltB(lower.x, v.x) ? lower.x : v.x;
    lower.y = $.ltB(lower.y, v.y) ? lower.y : v.y;
    upper.x = $.gtB(upper.x, v.x) ? upper.x : v.x;
    upper.y = $.gtB(upper.y, v.y) ? upper.y : v.y;
  }
  t1 = $.sub(lower.x, this.radius);
  argAabb.get$lowerBound().set$x(t1);
  t1 = $.sub(lower.y, this.radius);
  argAabb.get$lowerBound().set$y(t1);
  t1 = $.add(upper.x, this.radius);
  argAabb.get$upperBound().set$x(t1);
  t1 = $.add(upper.y, this.radius);
  argAabb.get$upperBound().set$y(t1);
},
 computeAxisAlignedBox$2$bailout: function(state0, argAabb, argXf, lower, t1, upper, v) {
  var i;
  $.Transform_mulToOut(argXf, $.index(t1, 0), lower);
  upper.setFrom$1(lower);
  for (i = 1; $.ltB(i, this.vertexCount); ++i) {
    $.Transform_mulToOut(argXf, $.index(t1, i), v);
    lower.x = $.ltB(lower.x, v.x) ? lower.x : v.x;
    lower.y = $.ltB(lower.y, v.y) ? lower.y : v.y;
    upper.x = $.gtB(upper.x, v.x) ? upper.x : v.x;
    upper.y = $.gtB(upper.y, v.y) ? upper.y : v.y;
  }
  t1 = $.sub(lower.x, this.radius);
  argAabb.get$lowerBound().set$x(t1);
  t1 = $.sub(lower.y, this.radius);
  argAabb.get$lowerBound().set$y(t1);
  t1 = $.add(upper.x, this.radius);
  argAabb.get$upperBound().set$x(t1);
  t1 = $.add(upper.y, this.radius);
  argAabb.get$upperBound().set$y(t1);
},
 computeMass$2: function(massData, density) {
  var t1, t2, center, pRef, e1, e2, i, area, I, p2, t3, p3, D, triangleArea, t4, t5, t6, px, py, ex1, ey1, ex2, ey2, t7, t8, t9, intx2, t10, t11;
  if ($.eqB(this.vertexCount, 2)) {
    t1 = massData.center;
    t2 = this.vertices;
    t1.setFrom$1($.index(t2, 0)).addLocal$1($.index(t2, 1)).mulLocal$1(0.5);
    massData.mass = 0;
    massData.inertia = 0;
    return;
  }
  center = $.Vector$(0, 0);
  center.setZero$0();
  pRef = $.Vector$(0, 0);
  pRef.setZero$0();
  e1 = $.Vector$(0, 0);
  e2 = $.Vector$(0, 0);
  t1 = this.vertices;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.computeMass$2$bailout(1, massData, pRef, density, t1, e1, e2, center);
  i = 0;
  area = 0;
  I = 0;
  for (; $.ltB(i, this.vertexCount);) {
    if (i >= t1.length)
      throw $.ioore(i);
    p2 = t1[i];
    ++i;
    t2 = $.ltB(i, this.vertexCount);
    t3 = t1.length;
    if (t2) {
      if (i >= t3)
        throw $.ioore(i);
      p3 = t1[i];
    } else {
      if (0 >= t3)
        throw $.ioore(0);
      p3 = t1[0];
    }
    e1.setFrom$1(p2);
    e1.subLocal$1(pRef);
    e2.setFrom$1(p3);
    e2.subLocal$1(pRef);
    D = $.sub($.mul(e1.x, e2.y), $.mul(e1.y, e2.x));
    if (typeof D !== 'number')
      throw $.iae(D);
    triangleArea = 0.5 * D;
    area += triangleArea;
    t2 = center.x;
    t3 = triangleArea * 0.3333333333333333;
    t4 = $.add($.add(pRef.x, p2.get$x()), p3.get$x());
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    center.x = $.add(t2, t3 * t4);
    t5 = center.y;
    t6 = $.add($.add(pRef.y, p2.get$y()), p3.get$y());
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    center.y = $.add(t5, t3 * t6);
    px = pRef.x;
    py = pRef.y;
    ex1 = e1.x;
    ey1 = e1.y;
    ex2 = e2.x;
    ey2 = e2.y;
    t7 = $.add($.add($.mul(ex1, ex1), $.mul(ex2, ex1)), $.mul(ex2, ex2));
    if (typeof t7 !== 'number')
      throw $.iae(t7);
    t7 = 0.25 * t7;
    t8 = $.add($.mul(px, ex1), $.mul(px, ex2));
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    t9 = 0.3333333333333333 * (t7 + t8);
    if (typeof px !== 'number')
      throw $.iae(px);
    intx2 = t9 + 0.5 * px * px;
    t9 = $.add($.add($.mul(ey1, ey1), $.mul(ey2, ey1)), $.mul(ey2, ey2));
    if (typeof t9 !== 'number')
      throw $.iae(t9);
    t9 = 0.25 * t9;
    t10 = $.add($.mul(py, ey1), $.mul(py, ey2));
    if (typeof t10 !== 'number')
      throw $.iae(t10);
    t11 = 0.3333333333333333 * (t9 + t10);
    if (typeof py !== 'number')
      throw $.iae(py);
    I += D * (intx2 + (t11 + 0.5 * py * py));
  }
  massData.mass = $.mul(density, area);
  center.mulLocal$1(1 / area);
  massData.center.setFrom$1(center);
  if (typeof density !== 'number')
    throw $.iae(density);
  massData.inertia = I * density;
},
 computeMass$2$bailout: function(state0, massData, pRef, density, t1, e1, e2, center) {
  var i, area, I, p2, p3, D, triangleArea, t2, t3, t4, t5, t6, px, py, ex1, ey1, ex2, ey2, t7, t8, t9, intx2, t10, t11;
  i = 0;
  area = 0;
  I = 0;
  for (; $.ltB(i, this.vertexCount);) {
    p2 = $.index(t1, i);
    ++i;
    p3 = $.ltB(i, this.vertexCount) ? $.index(t1, i) : $.index(t1, 0);
    e1.setFrom$1(p2);
    e1.subLocal$1(pRef);
    e2.setFrom$1(p3);
    e2.subLocal$1(pRef);
    D = $.sub($.mul(e1.x, e2.y), $.mul(e1.y, e2.x));
    if (typeof D !== 'number')
      throw $.iae(D);
    triangleArea = 0.5 * D;
    area += triangleArea;
    t2 = center.x;
    t3 = triangleArea * 0.3333333333333333;
    t4 = $.add($.add(pRef.x, p2.get$x()), p3.get$x());
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    center.x = $.add(t2, t3 * t4);
    t5 = center.y;
    t6 = $.add($.add(pRef.y, p2.get$y()), p3.get$y());
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    center.y = $.add(t5, t3 * t6);
    px = pRef.x;
    py = pRef.y;
    ex1 = e1.x;
    ey1 = e1.y;
    ex2 = e2.x;
    ey2 = e2.y;
    t7 = $.add($.add($.mul(ex1, ex1), $.mul(ex2, ex1)), $.mul(ex2, ex2));
    if (typeof t7 !== 'number')
      throw $.iae(t7);
    t7 = 0.25 * t7;
    t8 = $.add($.mul(px, ex1), $.mul(px, ex2));
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    t9 = 0.3333333333333333 * (t7 + t8);
    if (typeof px !== 'number')
      throw $.iae(px);
    intx2 = t9 + 0.5 * px * px;
    t9 = $.add($.add($.mul(ey1, ey1), $.mul(ey2, ey1)), $.mul(ey2, ey2));
    if (typeof t9 !== 'number')
      throw $.iae(t9);
    t9 = 0.25 * t9;
    t10 = $.add($.mul(py, ey1), $.mul(py, ey2));
    if (typeof t10 !== 'number')
      throw $.iae(t10);
    t11 = 0.3333333333333333 * (t9 + t10);
    if (typeof py !== 'number')
      throw $.iae(py);
    I += D * (intx2 + (t11 + 0.5 * py * py));
  }
  massData.mass = $.mul(density, area);
  center.mulLocal$1(1 / area);
  massData.center.setFrom$1(center);
  if (typeof density !== 'number')
    throw $.iae(density);
  massData.inertia = I * density;
},
 PolygonShape$0: function() {
  var t1, i, t2;
  t1 = this.vertices;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$0$bailout(1, t1);
  i = 0;
  for (; i < t1.length; ++i) {
    t2 = $.Vector$(0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  t1 = this.normals;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$0$bailout(2, t1);
  i = 0;
  for (; i < t1.length; ++i) {
    t2 = $.Vector$(0, 0);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 PolygonShape$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
    case 1:
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        $.indexSet(t1, i, $.Vector$(0, 0));
      t1 = this.normals;
    case 2:
      var t1, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        $.indexSet(t1, i, $.Vector$(0, 0));
  }
},
 PolygonShape$copy$1: function(other) {
  var t1, i, t2;
  t1 = this.vertices;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$copy$1$bailout(1, other, t1);
  i = 0;
  for (; $.ltB(i, $.get$length(other.get$vertices())); ++i) {
    t2 = $.Vector$copy($.index(other.get$vertices(), i));
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
  t1 = this.normals;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.PolygonShape$copy$1$bailout(2, other, t1);
  i = 0;
  for (; $.ltB(i, $.get$length(other.get$normals())); ++i) {
    t2 = $.Vector$copy($.index(other.get$normals(), i));
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 PolygonShape$copy$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env1;
      other = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.vertices;
    case 1:
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(other.get$vertices())); ++i)
        $.indexSet(t1, i, $.Vector$copy($.index(other.get$vertices(), i)));
      t1 = this.normals;
    case 2:
      var t1, other, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.get$length(other.get$normals())); ++i)
        $.indexSet(t1, i, $.Vector$copy($.index(other.get$normals(), i)));
  }
}
};

$$.Shape = {"": ["type=", "radius="],
 "super": "Object"
};

$$.Matrix22 = {"": ["col1?", "col2?"],
 "super": "Object",
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Matrix22)
    t1 = $.eqB(this.col1, other.col1) && $.eqB(this.col2, other.col2);
  else
    t1 = false;
  return t1;
},
 setAngle$1: function(angle) {
  var cosin, sin;
  cosin = $.cos(angle);
  sin = $.sin(angle);
  this.col1.setCoords$2(cosin, sin);
  this.col2.setCoords$2(-sin, cosin);
},
 setFrom$1: function(matrix) {
  this.col1.setFrom$1(matrix.get$col1());
  this.col2.setFrom$1(matrix.get$col2());
},
 invertLocal$0: function() {
  var t1, a, t3, b, c, d, det, t2;
  t1 = this.col1;
  a = t1.get$x();
  if (typeof a !== 'number')
    return this.invertLocal$0$bailout(1, a, t1);
  t3 = this.col2;
  b = t3.get$x();
  if (typeof b !== 'number')
    return this.invertLocal$0$bailout(2, a, t1, b, t3);
  c = t1.get$y();
  if (typeof c !== 'number')
    return this.invertLocal$0$bailout(3, a, b, t3, c);
  d = t3.get$y();
  if (typeof d !== 'number')
    return this.invertLocal$0$bailout(4, d, a, b, c);
  det = a * d - b * c;
  if (!(det === 0))
    det = 1 / det;
  t1.set$x(det * d);
  t1 = -det;
  t2 = t1 * b;
  this.col2.set$x(t2);
  t1 *= c;
  this.col1.set$y(t1);
  t1 = det * a;
  this.col2.set$y(t1);
  return this;
},
 invertLocal$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      a = env0;
      break;
    case 2:
      t3 = env3;
      b = env2;
      t1 = env1;
      a = env0;
      break;
    case 3:
      c = env3;
      t3 = env2;
      b = env1;
      a = env0;
      break;
    case 4:
      c = env3;
      b = env2;
      a = env1;
      d = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.col1;
      a = t1.get$x();
    case 1:
      state0 = 0;
      t3 = this.col2;
      b = t3.get$x();
    case 2:
      state0 = 0;
      c = t1.get$y();
    case 3:
      state0 = 0;
      d = t3.get$y();
    case 4:
      var t1, a, t3, b, c, d, det;
      state0 = 0;
      det = $.sub($.mul(a, d), $.mul(b, c));
      if (!$.eqB(det, 0)) {
        if (typeof det !== 'number')
          throw $.iae(det);
        det = 1 / det;
      }
      t1 = $.mul(det, d);
      this.col1.set$x(t1);
      t1 = $.mul($.neg(det), b);
      this.col2.set$x(t1);
      t1 = $.mul($.neg(det), c);
      this.col1.set$y(t1);
      t1 = $.mul(det, a);
      this.col2.set$y(t1);
      return this;
  }
},
 addLocal$1: function(other) {
  var t1 = this.col1;
  t1.set$x($.add(t1.get$x(), other.get$col1().get$x()));
  t1 = this.col1;
  t1.set$y($.add(t1.get$y(), other.get$col1().get$y()));
  t1 = this.col2;
  t1.set$x($.add(t1.get$x(), other.get$col2().get$x()));
  t1 = this.col2;
  t1.set$y($.add(t1.get$y(), other.get$col2().get$y()));
  return this;
},
 toString$0: function() {
  return $.S(this.col1) + ', ' + $.S(this.col2);
},
 Matrix22$2: function(c1, c2) {
  if (c1 == null)
    c1 = $.Vector$(0, 0);
  if (c2 == null)
    c2 = $.Vector$(0, 0);
  this.col1 = c1;
  this.col2 = c2;
},
 is$Matrix22: true
};

$$.Sweep = {"": ["localCenter?", "centerZero?", "center?", "angleZero=", "angle="],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.localCenter, other.get$localCenter()) && $.eqB(this.centerZero, other.get$centerZero()) && $.eqB(this.center, other.get$center()) && $.eqB(this.angleZero, other.get$angleZero()) && $.eqB(this.angle, other.get$angle());
},
 setFrom$1: function(other) {
  this.localCenter.setFrom$1(other.get$localCenter());
  this.centerZero.setFrom$1(other.get$centerZero());
  this.center.setFrom$1(other.get$center());
  this.angleZero = other.get$angleZero();
  this.angle = other.get$angle();
},
 normalize$0: function() {
  var t1, d;
  t1 = $.floor($.div(this.angleZero, 6.283185307179586));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  d = 6.283185307179586 * t1;
  this.angleZero = $.sub(this.angleZero, d);
  this.angle = $.sub(this.angle, d);
},
 getTransform$2: function(xf, alpha) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t10, t12, t13, t16, t18, t20, t22;
  if (typeof alpha !== 'number')
    throw $.iae(alpha);
  t1 = 1 - alpha;
  t2 = this.centerZero;
  t3 = t2.x;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t1 * t3;
  t4 = this.center;
  t5 = t4.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t3 += alpha * t5;
  t6 = xf.position;
  t6.x = t3;
  t2 = t2.y;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = t1 * t2;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  t6.y = t2 + alpha * t4;
  t3 = xf.rotation;
  t7 = this.angleZero;
  if (typeof t7 !== 'number')
    throw $.iae(t7);
  t7 = t1 * t7;
  t1 = this.angle;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t3.setAngle$1(t7 + alpha * t1);
  t8 = t6.x;
  if (typeof t8 !== 'number')
    return this.getTransform$2$bailout(1, t8, t3, t6);
  t10 = t3.col1.get$x();
  if (typeof t10 !== 'number')
    return this.getTransform$2$bailout(2, t10, t8, t3, t6);
  t12 = this.localCenter;
  t13 = t12.x;
  if (typeof t13 !== 'number')
    return this.getTransform$2$bailout(3, t10, t3, t8, t12, t6, t13);
  t13 = t10 * t13;
  t10 = t3.col2.get$x();
  if (typeof t10 !== 'number')
    return this.getTransform$2$bailout(4, t3, t13, t10, t8, t12, t6);
  t16 = t12.y;
  if (typeof t16 !== 'number')
    return this.getTransform$2$bailout(5, t16, t3, t13, t10, t8, t12, t6);
  t6.x = t8 - (t13 + t10 * t16);
  t18 = t6.y;
  if (typeof t18 !== 'number')
    return this.getTransform$2$bailout(6, t12, t18, t3, t6);
  t20 = t3.col1.get$y();
  if (typeof t20 !== 'number')
    return this.getTransform$2$bailout(7, t12, t6, t18, t3, t20);
  t22 = t12.x;
  if (typeof t22 !== 'number')
    return this.getTransform$2$bailout(8, t18, t3, t20, t22, t12, t6);
  t22 = t20 * t22;
  t20 = t3.col2.get$y();
  if (typeof t20 !== 'number')
    return this.getTransform$2$bailout(9, t20, t22, t18, t12, t6);
  t12 = t12.y;
  if (typeof t12 !== 'number')
    return this.getTransform$2$bailout(10, t20, t22, t18, t12, t6);
  t6.y = t18 - (t22 + t20 * t12);
},
 getTransform$2$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t6 = env2;
      t3 = env1;
      t8 = env0;
      break;
    case 2:
      t6 = env3;
      t3 = env2;
      t8 = env1;
      t10 = env0;
      break;
    case 3:
      t13 = env5;
      t6 = env4;
      t12 = env3;
      t8 = env2;
      t3 = env1;
      t10 = env0;
      break;
    case 4:
      t6 = env5;
      t12 = env4;
      t8 = env3;
      t10 = env2;
      t13 = env1;
      t3 = env0;
      break;
    case 5:
      t6 = env6;
      t12 = env5;
      t8 = env4;
      t10 = env3;
      t13 = env2;
      t3 = env1;
      t16 = env0;
      break;
    case 6:
      t6 = env3;
      t3 = env2;
      t18 = env1;
      t12 = env0;
      break;
    case 7:
      t20 = env4;
      t3 = env3;
      t18 = env2;
      t6 = env1;
      t12 = env0;
      break;
    case 8:
      t6 = env5;
      t12 = env4;
      t22 = env3;
      t20 = env2;
      t3 = env1;
      t18 = env0;
      break;
    case 9:
      t6 = env4;
      t12 = env3;
      t18 = env2;
      t22 = env1;
      t20 = env0;
      break;
    case 10:
      t6 = env4;
      t12 = env3;
      t18 = env2;
      t22 = env1;
      t20 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (typeof alpha !== 'number')
        throw $.iae(alpha);
      t1 = 1 - alpha;
      t2 = this.centerZero;
      t3 = t2.x;
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      t3 = t1 * t3;
      t4 = this.center;
      t5 = t4.x;
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      t3 += alpha * t5;
      t6 = xf.position;
      t6.x = t3;
      t2 = t2.y;
      if (typeof t2 !== 'number')
        throw $.iae(t2);
      t2 = t1 * t2;
      t4 = t4.y;
      if (typeof t4 !== 'number')
        throw $.iae(t4);
      t6.y = t2 + alpha * t4;
      t3 = xf.rotation;
      t7 = this.angleZero;
      if (typeof t7 !== 'number')
        throw $.iae(t7);
      t7 = t1 * t7;
      t1 = this.angle;
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      t3.setAngle$1(t7 + alpha * t1);
      t8 = t6.x;
    case 1:
      state0 = 0;
      t10 = t3.col1.get$x();
    case 2:
      state0 = 0;
      t12 = this.localCenter;
      t13 = t12.x;
    case 3:
      state0 = 0;
      t13 = $.mul(t10, t13);
      t10 = t3.col2.get$x();
    case 4:
      state0 = 0;
      t16 = t12.y;
    case 5:
      state0 = 0;
      t6.x = $.sub(t8, $.add(t13, $.mul(t10, t16)));
      t18 = t6.y;
    case 6:
      state0 = 0;
      t20 = t3.col1.get$y();
    case 7:
      state0 = 0;
      t22 = t12.x;
    case 8:
      state0 = 0;
      t22 = $.mul(t20, t22);
      t20 = t3.col2.get$y();
    case 9:
      state0 = 0;
      t12 = t12.y;
    case 10:
      var t1, t2, t3, t4, t5, t6, t7, t8, t10, t12, t13, t16, t18, t20, t22;
      state0 = 0;
      t6.y = $.sub(t18, $.add(t22, $.mul(t20, t12)));
  }
},
 advance$1: function(time) {
  var t1, t2, t3, t4, t5, t6;
  if (typeof time !== 'number')
    throw $.iae(time);
  t1 = 1 - time;
  t2 = this.centerZero;
  t3 = t2.x;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t3 = t1 * t3;
  t4 = this.center;
  t5 = t4.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t2.x = t3 + time * t5;
  t6 = t2.y;
  if (typeof t6 !== 'number')
    throw $.iae(t6);
  t6 = t1 * t6;
  t4 = t4.y;
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  t2.y = t6 + time * t4;
  t2 = this.angleZero;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = t1 * t2;
  t1 = this.angle;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  this.angleZero = t2 + time * t1;
}
};

$$.Transform = {"": ["position?", "rotation?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.position, other.get$position()) && $.eqB(this.rotation, other.get$rotation());
},
 setFrom$1: function(other) {
  this.position.setFrom$1(other.get$position());
  this.rotation.setFrom$1(other.get$rotation());
}
};

$$.Vector = {"": ["x=", "y="],
 "super": "Object",
 operator$eq$1: function(other) {
  return $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 addLocal$1: function(v) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.addLocal$1$bailout(1, v, t1);
  t3 = v.get$x();
  if (typeof t3 !== 'number')
    return this.addLocal$1$bailout(2, v, t3, t1);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.addLocal$1$bailout(3, v, t5);
  t7 = v.get$y();
  if (typeof t7 !== 'number')
    return this.addLocal$1$bailout(4, t5, t7);
  this.y = t5 + t7;
  return this;
},
 addLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      v = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      v = env0;
      break;
    case 3:
      t5 = env1;
      v = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = v.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = v.get$y();
    case 4:
      var t1, v, t3, t5, t7;
      state0 = 0;
      this.y = $.add(t5, t7);
      return this;
  }
},
 subLocal$1: function(other) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.subLocal$1$bailout(1, other, t1);
  t3 = other.get$x();
  if (typeof t3 !== 'number')
    return this.subLocal$1$bailout(2, other, t3, t1);
  this.x = t1 - t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.subLocal$1$bailout(3, other, t5);
  t7 = other.get$y();
  if (typeof t7 !== 'number')
    return this.subLocal$1$bailout(4, t5, t7);
  this.y = t5 - t7;
  return this;
},
 subLocal$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      other = env0;
      break;
    case 3:
      t5 = env1;
      other = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = other.get$x();
    case 2:
      state0 = 0;
      this.x = $.sub(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = other.get$y();
    case 4:
      var t1, other, t3, t5, t7;
      state0 = 0;
      this.y = $.sub(t5, t7);
      return this;
  }
},
 setCoords$2: function(xCoord, yCoord) {
  this.x = xCoord;
  this.y = yCoord;
  return this;
},
 setFrom$1: function(v) {
  var t1, t2;
  t1 = v.get$x();
  t2 = v.get$y();
  this.x = t1;
  this.y = t2;
  return this;
},
 mulLocal$1: function(d) {
  var t1, t3;
  if (typeof d !== 'number')
    return this.mulLocal$1$bailout(1, d);
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.mulLocal$1$bailout(2, d, t1);
  this.x = t1 * d;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.mulLocal$1$bailout(3, d, t3);
  this.y = t3 * d;
  return this;
},
 mulLocal$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      d = env0;
      break;
    case 2:
      t1 = env1;
      d = env0;
      break;
    case 3:
      t3 = env1;
      d = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.x;
    case 2:
      state0 = 0;
      this.x = $.mul(t1, d);
      t3 = this.y;
    case 3:
      var d, t1, t3;
      state0 = 0;
      this.y = $.mul(t3, d);
      return this;
  }
},
 setZero$0: function() {
  this.x = 0;
  this.y = 0;
  return this;
},
 get$length: function() {
  return $.sqrt(this.get$lengthSquared());
},
 get$lengthSquared: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.add(t1, $.mul(t2, t2));
},
 absLocal$0: function() {
  this.x = $.abs(this.x);
  this.y = $.abs(this.y);
},
 normalize$0: function() {
  var len, invLength;
  len = $.get$length(this);
  if ($.ltB(len, 1.192e-7))
    return 0;
  if (typeof len !== 'number')
    throw $.iae(len);
  invLength = 1 / len;
  this.x = $.mul(this.x, invLength);
  this.y = $.mul(this.y, invLength);
  return len;
},
 negateLocal$0: function() {
  var t1, t3;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.negateLocal$0$bailout(1, t1);
  this.x = -t1;
  t3 = this.y;
  if (typeof t3 !== 'number')
    return this.negateLocal$0$bailout(2, t3);
  this.y = -t3;
  return this;
},
 negateLocal$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      this.x = $.neg(t1);
      t3 = this.y;
    case 2:
      var t1, t3;
      state0 = 0;
      this.y = $.neg(t3);
      return this;
  }
},
 toString$0: function() {
  return '(' + $.S(this.x) + ', ' + $.S(this.y) + ')';
}
};

$$.Body = {"": ["world", "flags=", "contactList=", "sleepTime=", "userData=", "_linearVelocity", "_angularVelocity", "mass?", "invMass?", "next=", "prev=", "fixtureList", "fixtureCount", "jointList?", "_force?", "_torque=", "_inertia", "invInertia?", "linearDamping?", "angularDamping?", "_type?", "islandIndex!", "originTransform?", "sweep?", "_fixDef", "_pmd", "_pxf", "oldCenter", "tempCenter"],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 createFixture$1: function(def) {
  var fixture, t1;
  fixture = $.Fixture$();
  fixture.create$2(this, def);
  t1 = this.flags;
  if (t1 !== (t1 | 0))
    return this.createFixture$1$bailout(1, t1, fixture);
  if ((t1 & 32) === 32)
    fixture.createProxy$2(this.world._contactManager.get$broadPhase(), this.originTransform);
  fixture.next = this.fixtureList;
  this.fixtureList = fixture;
  this.fixtureCount = this.fixtureCount + 1;
  fixture.body = this;
  if ($.gtB(fixture.density, 0))
    this.resetMassData$0();
  t1 = this.world;
  t1._flags = (t1._flags | 1) >>> 0;
  return fixture;
},
 createFixture$1$bailout: function(state0, t1, fixture) {
  if ($.eqB($.and(t1, 32), 32))
    fixture.createProxy$2(this.world._contactManager.get$broadPhase(), this.originTransform);
  fixture.next = this.fixtureList;
  this.fixtureList = fixture;
  this.fixtureCount = this.fixtureCount + 1;
  fixture.body = this;
  if ($.gtB(fixture.density, 0))
    this.resetMassData$0();
  t1 = this.world;
  t1._flags = (t1._flags | 1) >>> 0;
  return fixture;
},
 get$position: function() {
  return this.originTransform.position;
},
 get$angle: function() {
  return this.sweep.angle;
},
 get$localCenter: function() {
  return this.sweep.localCenter;
},
 get$linearVelocity: function() {
  return this._linearVelocity;
},
 get$angularVelocity: function() {
  return this._angularVelocity;
},
 set$angularVelocity: function(w) {
  if (!$.eqB(this._type, 0)) {
    if ($.gtB($.mul(w, w), 0))
      this.set$awake(true);
    this._angularVelocity = w;
  }
},
 get$inertia: function() {
  var t1, t2, t3, t4;
  t1 = this._inertia;
  t2 = this.mass;
  t3 = this.sweep.localCenter;
  t4 = t3.x;
  t4 = $.mul(t4, t4);
  t3 = t3.y;
  t4 = $.add(t4, $.mul(t3, t3));
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  return t1 + t2 * t4;
},
 getMassData$1: function(data) {
  var lc, t1, t2, t3, t4, t5;
  data.mass = this.mass;
  lc = this.sweep.localCenter;
  t1 = this._inertia;
  t2 = this.mass;
  t3 = lc.get$lengthSquared();
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  data.inertia = t1 + t2 * t3;
  t4 = lc.x;
  t5 = data.center;
  t5.x = t4;
  t5.y = lc.y;
},
 resetMassData$0: function() {
  var t1, t2, t3, massData, f, t4, t5, t6, temp, t7, t8;
  this.mass = 0;
  this.invMass = 0;
  this._inertia = 0;
  this.invInertia = 0;
  t1 = this.sweep;
  t2 = t1.localCenter;
  t2.setZero$0();
  if ($.eqB(this._type, 0) || $.eqB(this._type, 1)) {
    t2 = t1.center;
    t3 = this.originTransform.position;
    t2.setFrom$1(t3);
    t1.centerZero.setFrom$1(t3);
    return;
  }
  t3 = this.tempCenter;
  t3.setZero$0();
  massData = this._pmd;
  for (f = this.fixtureList, t4 = massData.center; !(f == null); f = f.get$next()) {
    if ($.eqB(f.get$density(), 0))
      continue;
    f.getMassData$1(massData);
    t5 = this.mass;
    t6 = massData.mass;
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    this.mass = t5 + t6;
    temp = $.Vector$copy(t4);
    temp.mulLocal$1(massData.mass);
    t3.addLocal$1(temp);
    t7 = this._inertia;
    t8 = massData.inertia;
    if (typeof t8 !== 'number')
      throw $.iae(t8);
    this._inertia = t7 + t8;
  }
  t4 = this.mass;
  if (t4 > 0) {
    this.invMass = 1 / t4;
    t3.mulLocal$1(this.invMass);
  } else {
    this.mass = 1;
    this.invMass = 1;
  }
  if (this._inertia > 0 && $.eqB($.and(this.flags, 16), 0)) {
    t4 = this._inertia;
    t5 = this.mass;
    t6 = t3.x;
    t6 = $.mul(t6, t6);
    t7 = t3.y;
    t6 = $.add(t6, $.mul(t7, t7));
    if (typeof t6 !== 'number')
      throw $.iae(t6);
    this._inertia = t4 - t5 * t6;
    this.invInertia = 1 / this._inertia;
  } else {
    this._inertia = 0;
    this.invInertia = 0;
  }
  t4 = this.oldCenter;
  t5 = t1.center;
  t4.setFrom$1(t5);
  t2.setFrom$1(t3);
  t3 = this.originTransform;
  t1 = t1.centerZero;
  $.Transform_mulToOut(t3, t2, t1);
  t5.setFrom$1(t1);
  temp = $.Vector$copy(t5);
  temp.subLocal$1(t4);
  $.Vector_crossNumAndVectorToOut(this._angularVelocity, temp, temp);
  this._linearVelocity.addLocal$1(temp);
},
 getWorldPoint$1: function(localPoint) {
  var v = $.Vector$(0, 0);
  $.Transform_mulToOut(this.originTransform, localPoint, v);
  return v;
},
 getWorldPointToOut$2: function(localPoint, out) {
  $.Transform_mulToOut(this.originTransform, localPoint, out);
},
 getWorldVector$1: function(localVector) {
  var out = $.Vector$(0, 0);
  this.getWorldVectorToOut$2(localVector, out);
  return out;
},
 getWorldVectorToOut$2: function(localVector, out) {
  $.Matrix22_mulMatrixAndVectorToOut(this.originTransform.rotation, localVector, out);
},
 get$type: function() {
  return this._type;
},
 set$type: function(otherType) {
  var ce;
  if ($.eqB(this._type, otherType))
    return;
  this._type = otherType;
  this.resetMassData$0();
  if ($.eqB(this._type, 0)) {
    this._linearVelocity.setZero$0();
    this._angularVelocity = 0;
  }
  this.set$awake(true);
  this._force.setZero$0();
  this._torque = 0;
  for (ce = this.contactList; !(ce == null); ce = ce.get$next())
    ce.get$contact().flagForFiltering$0();
},
 get$bullet: function() {
  return $.eq($.and(this.flags, 8), 8);
},
 set$awake: function(flag) {
  if (flag === true) {
    if ($.eqB($.and(this.flags, 2), 0)) {
      this.flags = $.or(this.flags, 2);
      this.sleepTime = 0;
    }
  } else {
    this.flags = $.and(this.flags, 4294967293);
    this.sleepTime = 0;
    this._linearVelocity.setZero$0();
    this._angularVelocity = 0;
    this._force.setZero$0();
    this._torque = 0;
  }
},
 get$awake: function() {
  return $.eq($.and(this.flags, 2), 2);
},
 get$active: function() {
  return $.eq($.and(this.flags, 32), 32);
},
 get$fixedRotation: function() {
  return $.eq($.and(this.flags, 16), 16);
},
 synchronizeFixtures$0: function() {
  var xf1, t1, t2, t3, t4, broadPhase, f;
  xf1 = this._pxf;
  t1 = xf1.rotation;
  t2 = this.sweep;
  t1.setAngle$1(t2.angleZero);
  t3 = t2.localCenter;
  t4 = xf1.position;
  $.Matrix22_mulMatrixAndVectorToOut(t1, t3, t4);
  t4.mulLocal$1(-1);
  t4.addLocal$1(t2.centerZero);
  broadPhase = this.world._contactManager.get$broadPhase();
  for (f = this.fixtureList, t1 = this.originTransform; !(f == null); f = f.get$next())
    f.synchronize$3(broadPhase, xf1, t1);
},
 synchronizeTransform$0: function() {
  var t1, c, s, t, r, p, t2, t4, t5, t8, t10, t11, t13, t15, t19;
  t1 = this.sweep;
  c = $.cos(t1.angle);
  s = $.sin(t1.angle);
  t = this.originTransform;
  r = t.rotation;
  p = t.position;
  r.col1.set$x(c);
  t2 = -s;
  r.col2.set$x(t2);
  r.col1.set$y(s);
  r.col2.set$y(c);
  t2 = r.col1.get$x();
  if (typeof t2 !== 'number')
    return this.synchronizeTransform$0$bailout(1, t2, r, p, t1);
  t4 = t1.localCenter;
  t5 = t4.x;
  if (typeof t5 !== 'number')
    return this.synchronizeTransform$0$bailout(2, r, p, t2, t4, t5, t1);
  t5 = t2 * t5;
  t2 = r.col2.get$x();
  if (typeof t2 !== 'number')
    return this.synchronizeTransform$0$bailout(3, t1, r, p, t4, t5, t2);
  t8 = t4.y;
  if (typeof t8 !== 'number')
    return this.synchronizeTransform$0$bailout(4, t1, t8, r, p, t4, t5, t2);
  t10 = (t5 + t2 * t8) * -1;
  t1 = t1.center;
  t11 = t1.x;
  if (typeof t11 !== 'number')
    return this.synchronizeTransform$0$bailout(5, t1, r, p, t11, t4, t10);
  p.x = t10 + t11;
  t13 = r.col1.get$y();
  if (typeof t13 !== 'number')
    return this.synchronizeTransform$0$bailout(6, t4, t1, r, p, t13);
  t15 = t4.x;
  if (typeof t15 !== 'number')
    return this.synchronizeTransform$0$bailout(7, t1, r, p, t13, t15, t4);
  t15 = t13 * t15;
  t13 = r.col2.get$y();
  if (typeof t13 !== 'number')
    return this.synchronizeTransform$0$bailout(8, t15, t1, t13, p, t4);
  t4 = t4.y;
  if (typeof t4 !== 'number')
    return this.synchronizeTransform$0$bailout(9, t15, t1, t13, p, t4);
  t19 = (t15 + t13 * t4) * -1;
  t1 = t1.y;
  if (typeof t1 !== 'number')
    return this.synchronizeTransform$0$bailout(10, t1, p, t19);
  p.y = t19 + t1;
},
 synchronizeTransform$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      t1 = env3;
      p = env2;
      r = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env5;
      t5 = env4;
      t4 = env3;
      t2 = env2;
      p = env1;
      r = env0;
      break;
    case 3:
      t2 = env5;
      t5 = env4;
      t4 = env3;
      p = env2;
      r = env1;
      t1 = env0;
      break;
    case 4:
      t2 = env6;
      t5 = env5;
      t4 = env4;
      p = env3;
      r = env2;
      t8 = env1;
      t1 = env0;
      break;
    case 5:
      t10 = env5;
      t4 = env4;
      t11 = env3;
      p = env2;
      r = env1;
      t1 = env0;
      break;
    case 6:
      t13 = env4;
      p = env3;
      r = env2;
      t1 = env1;
      t4 = env0;
      break;
    case 7:
      t4 = env5;
      t15 = env4;
      t13 = env3;
      p = env2;
      r = env1;
      t1 = env0;
      break;
    case 8:
      t4 = env4;
      p = env3;
      t13 = env2;
      t1 = env1;
      t15 = env0;
      break;
    case 9:
      t4 = env4;
      p = env3;
      t13 = env2;
      t1 = env1;
      t15 = env0;
      break;
    case 10:
      t19 = env2;
      p = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.sweep;
      c = $.cos(t1.angle);
      s = $.sin(t1.angle);
      t = this.originTransform;
      r = t.rotation;
      p = t.position;
      r.col1.set$x(c);
      t2 = -s;
      r.col2.set$x(t2);
      r.col1.set$y(s);
      r.col2.set$y(c);
      t2 = r.col1.get$x();
    case 1:
      state0 = 0;
      t4 = t1.localCenter;
      t5 = t4.x;
    case 2:
      state0 = 0;
      t5 = $.mul(t2, t5);
      t2 = r.col2.get$x();
    case 3:
      state0 = 0;
      t8 = t4.y;
    case 4:
      state0 = 0;
      t10 = $.mul($.add(t5, $.mul(t2, t8)), -1);
      t1 = t1.center;
      t11 = t1.x;
    case 5:
      state0 = 0;
      p.x = $.add(t10, t11);
      t13 = r.col1.get$y();
    case 6:
      state0 = 0;
      t15 = t4.x;
    case 7:
      state0 = 0;
      t15 = $.mul(t13, t15);
      t13 = r.col2.get$y();
    case 8:
      state0 = 0;
      t4 = t4.y;
    case 9:
      state0 = 0;
      t19 = $.mul($.add(t15, $.mul(t13, t4)), -1);
      t1 = t1.y;
    case 10:
      var t1, c, s, t, r, p, t2, t4, t5, t8, t10, t11, t13, t15, t19;
      state0 = 0;
      p.y = $.add(t19, t1);
  }
},
 shouldCollide$1: function(other) {
  var t1, t3;
  t1 = this._type;
  if (typeof t1 !== 'number')
    return this.shouldCollide$1$bailout(1, other, t1);
  if (!(t1 === 2)) {
    t1 = other.get$_type();
    if (typeof t1 !== 'number')
      return this.shouldCollide$1$bailout(2, t1);
    t3 = !(t1 === 2);
    t1 = t3;
  } else
    t1 = false;
  return !t1;
},
 shouldCollide$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._type;
    case 1:
      state0 = 0;
    case 2:
      var t1, other, t3;
      if (state0 === 2 || state0 === 0 && !$.eqB(t1, 2))
        switch (state0) {
          case 0:
            t1 = other.get$_type();
          case 2:
            state0 = 0;
            t3 = !$.eqB(t1, 2);
            t1 = t3;
        }
      else
        t1 = false;
      return !t1;
  }
},
 advance$1: function(t) {
  var t1 = this.sweep;
  t1.advance$1(t);
  t1.center.setFrom$1(t1.centerZero);
  t1.angle = t1.angleZero;
  this.synchronizeTransform$0();
},
 Body$2: function(bd, world) {
  var t1, t2, t3, t4;
  if (bd.get$bullet() === true)
    this.flags = $.or(this.flags, 8);
  if (bd.get$fixedRotation() === true)
    this.flags = $.or(this.flags, 16);
  if (bd.get$allowSleep() === true)
    this.flags = $.or(this.flags, 4);
  if (bd.get$awake() === true)
    this.flags = $.or(this.flags, 2);
  if (bd.get$active() === true)
    this.flags = $.or(this.flags, 32);
  t1 = this.originTransform;
  t1.position.setFrom$1(bd.get$position());
  t1.rotation.setAngle$1(bd.get$angle());
  t2 = this.sweep;
  t3 = t2.localCenter;
  t3.setZero$0();
  t4 = t2.centerZero;
  $.Transform_mulToOut(t1, t3, t4);
  t2.center.setFrom$1(t4);
  t2.angle = bd.get$angle();
  t2.angleZero = bd.get$angle();
  if ($.eqB(this._type, 2)) {
    this.mass = 1;
    this.invMass = 1;
  } else {
    this.mass = 0;
    this.invMass = 0;
  }
}
};

$$.BodyDef = {"": ["type=", "angle=", "userData=", "position?", "linearVelocity?", "angularVelocity=", "fixedRotation?", "isSleeping", "bullet?", "allowSleep?", "linearDamping?", "angularDamping?", "awake=", "active?"],
 "super": "Object"
};

$$.ContactManager = {"": ["broadPhase?", "contactList=", "contactCount?", "contactFilter", "contactListener?", "pool"],
 "super": "Object",
 addPair$2: function(fixtureA, fixtureB) {
  var bodyA, bodyB, edge, t1, fA, fB, c;
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  if (bodyA == null ? bodyB == null : bodyA === bodyB)
    return;
  edge = bodyB.get$contactList();
  for (; !(edge == null);) {
    if ($.eqB(edge.get$other(), bodyA)) {
      t1 = edge.get$contact();
      fA = t1.get$fixtureA();
      fB = t1.get$fixtureB();
      if ($.eqB(fA, fixtureA) && $.eqB(fB, fixtureB))
        return;
      if ($.eqB(fA, fixtureB) && $.eqB(fB, fixtureA))
        return;
    }
    edge = edge.get$next();
  }
  t1 = bodyB.shouldCollide$1(bodyA);
  if (typeof t1 !== 'boolean')
    return this.addPair$2$bailout(1, fixtureA, fixtureB, t1);
  if (!t1)
    return;
  t1 = this.contactFilter;
  t1 = t1.shouldCollide$2(fixtureA, fixtureB);
  if (typeof t1 !== 'boolean')
    return this.addPair$2$bailout(2, fixtureA, fixtureB, t1);
  t1 = !t1;
  if (t1)
    return;
  c = this.pool.popContact$2(fixtureA, fixtureB);
  fixtureA = c.get$fixtureA();
  fixtureB = c.get$fixtureB();
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  c.set$prev(null);
  c.set$next(this.contactList);
  t1 = this.contactList;
  if (!(t1 == null))
    t1.set$prev(c);
  this.contactList = c;
  c.get$edge1().set$contact(c);
  c.get$edge1().set$other(bodyB);
  c.get$edge1().set$prev(null);
  t1 = bodyA.get$contactList();
  c.get$edge1().set$next(t1);
  if (!(bodyA.get$contactList() == null)) {
    t1 = c.get$edge1();
    bodyA.get$contactList().set$prev(t1);
  }
  bodyA.set$contactList(c.get$edge1());
  c.get$edge2().set$contact(c);
  c.get$edge2().set$other(bodyA);
  c.get$edge2().set$prev(null);
  t1 = bodyB.get$contactList();
  c.get$edge2().set$next(t1);
  if (!(bodyB.get$contactList() == null)) {
    t1 = c.get$edge2();
    bodyB.get$contactList().set$prev(t1);
  }
  bodyB.set$contactList(c.get$edge2());
  this.contactCount = this.contactCount + 1;
},
 addPair$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env2;
      fixtureB = env1;
      fixtureA = env0;
      break;
    case 2:
      t1 = env2;
      fixtureB = env1;
      fixtureA = env0;
      break;
  }
  switch (state0) {
    case 0:
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      if (bodyA == null ? bodyB == null : bodyA === bodyB)
        return;
      edge = bodyB.get$contactList();
      for (; !(edge == null);) {
        if ($.eqB(edge.get$other(), bodyA)) {
          t1 = edge.get$contact();
          fA = t1.get$fixtureA();
          fB = t1.get$fixtureB();
          if ($.eqB(fA, fixtureA) && $.eqB(fB, fixtureB))
            return;
          if ($.eqB(fA, fixtureB) && $.eqB(fB, fixtureA))
            return;
        }
        edge = edge.get$next();
      }
      t1 = bodyB.shouldCollide$1(bodyA);
    case 1:
      state0 = 0;
      if ($.eqB(t1, false))
        return;
      t1 = this.contactFilter;
      t1 = t1.shouldCollide$2(fixtureA, fixtureB);
    case 2:
      var bodyA, bodyB, edge, t1, fA, fB, fixtureB, fixtureA, c;
      state0 = 0;
      t1 = $.eqB(t1, false);
      if (t1)
        return;
      c = this.pool.popContact$2(fixtureA, fixtureB);
      fixtureA = c.get$fixtureA();
      fixtureB = c.get$fixtureB();
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      c.set$prev(null);
      c.set$next(this.contactList);
      t1 = this.contactList;
      if (!(t1 == null))
        t1.set$prev(c);
      this.contactList = c;
      c.get$edge1().set$contact(c);
      c.get$edge1().set$other(bodyB);
      c.get$edge1().set$prev(null);
      t1 = bodyA.get$contactList();
      c.get$edge1().set$next(t1);
      if (!(bodyA.get$contactList() == null)) {
        t1 = c.get$edge1();
        bodyA.get$contactList().set$prev(t1);
      }
      bodyA.set$contactList(c.get$edge1());
      c.get$edge2().set$contact(c);
      c.get$edge2().set$other(bodyA);
      c.get$edge2().set$prev(null);
      t1 = bodyB.get$contactList();
      c.get$edge2().set$next(t1);
      if (!(bodyB.get$contactList() == null)) {
        t1 = c.get$edge2();
        bodyB.get$contactList().set$prev(t1);
      }
      bodyB.set$contactList(c.get$edge2());
      this.contactCount = this.contactCount + 1;
  }
},
 findNewContacts$0: function() {
  this.broadPhase.updatePairs$1(this);
},
 destroy$1: function(c) {
  var fixtureA, fixtureB, bodyA, bodyB, t1, t2;
  fixtureA = c.get$fixtureA();
  fixtureB = c.get$fixtureB();
  bodyA = fixtureA.get$body();
  bodyB = fixtureB.get$body();
  t1 = this.contactListener;
  if (!(t1 == null) && c.get$touching() === true)
    t1.endContact$1(c);
  t1 = c.get$prev();
  if (!(t1 == null))
    t1.set$next(c.get$next());
  t1 = c.get$next();
  if (!(t1 == null))
    t1.set$prev(c.get$prev());
  if ($.eqB(c, this.contactList))
    this.contactList = c.get$next();
  t1 = c.get$edge1();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = c.get$edge1();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(c.get$edge1(), bodyA.get$contactList()))
    bodyA.set$contactList(c.get$edge1().get$next());
  t1 = c.get$edge2();
  t2 = t1.get$prev();
  if (!(t2 == null))
    t2.set$next(t1.get$next());
  t1 = c.get$edge2();
  t2 = t1.get$next();
  if (!(t2 == null))
    t2.set$prev(t1.get$prev());
  if ($.eqB(c.get$edge2(), bodyB.get$contactList()))
    bodyB.set$contactList(c.get$edge2().get$next());
  this.pool.pushContact$1(c);
  this.contactCount = this.contactCount - 1;
},
 collide$0: function() {
  var c, t1, t2, t3, fixtureA, fixtureB, bodyA, bodyB, c0;
  c = this.contactList;
  for (t1 = this.contactFilter, t2 = this.broadPhase, t3 = this.contactListener; !(c == null);) {
    fixtureA = c.get$fixtureA();
    fixtureB = c.get$fixtureB();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    if ($.eqB(bodyA.get$awake(), false) && $.eqB(bodyB.get$awake(), false)) {
      c = c.get$next();
      continue;
    }
    if ($.eqB($.and(c.get$flags(), 8), 8)) {
      if ($.eqB(bodyB.shouldCollide$1(bodyA), false)) {
        c0 = c.get$next();
        this.destroy$1(c);
        c = c0;
        continue;
      }
      if ($.eqB(t1.shouldCollide$2(fixtureA, fixtureB), false)) {
        c0 = c.get$next();
        this.destroy$1(c);
        c = c0;
        continue;
      }
      c.set$flags($.and(c.get$flags(), 4294967287));
    }
    if ($.eqB(t2.testOverlap$2(fixtureA.get$proxy(), fixtureB.get$proxy()), false)) {
      c0 = c.get$next();
      this.destroy$1(c);
      c = c0;
      continue;
    }
    c.update$1(t3);
    c = c.get$next();
  }
}
};

$$.Filter = {"": ["categoryBits?", "maskBits?", "groupIndex?"],
 "super": "Object",
 setFrom$1: function(other) {
  this.categoryBits = other.get$categoryBits();
  this.maskBits = other.get$maskBits();
  this.groupIndex = other.get$groupIndex();
}
};

$$.Fixture = {"": ["box?", "density?", "next=", "body?", "shape?", "friction=", "restitution=", "proxy?", "filter?", "isSensor?", "userData=", "_poolOne", "_poolTwo"],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 create$2: function(b, def) {
  this.userData = def.userData;
  this.friction = def.friction;
  this.restitution = def.restitution;
  this.body = b;
  this.next = null;
  this.filter.setFrom$1(def.filter);
  this.isSensor = def.isSensor;
  this.shape = def.shape.clone$0();
  this.density = def.density;
},
 createProxy$2: function(broadPhase, xf) {
  var t1, t2;
  t1 = this.shape;
  t2 = this.box;
  t1.computeAxisAlignedBox$2(t2, xf);
  this.proxy = broadPhase.createProxy$2(t2, this);
},
 synchronize$3: function(broadPhase, transformOne, transformTwo) {
  var t1, t2, t3, t5, t4, t6, disp;
  if (this.proxy == null)
    return;
  t1 = this.shape;
  t2 = this._poolOne;
  t1.computeAxisAlignedBox$2(t2, transformOne);
  t1 = this.shape;
  t3 = this._poolTwo;
  t1.computeAxisAlignedBox$2(t3, transformTwo);
  t1 = t2.lowerBound.get$x();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(1, broadPhase, transformOne, transformTwo, t1, t2, t3);
  t5 = t3.lowerBound.get$x();
  if (typeof t5 !== 'number')
    return this.synchronize$3$bailout(2, broadPhase, transformOne, transformTwo, t1, t2, t5, t3);
  if (t1 < t5)
    ;
  else
    t1 = t5;
  t4 = this.box;
  t4.lowerBound.set$x(t1);
  t1 = t2.lowerBound.get$y();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(3, broadPhase, transformOne, transformTwo, t4, t2, t3, t1);
  t6 = t3.lowerBound.get$y();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(4, broadPhase, transformOne, transformTwo, t6, t4, t2, t3, t1);
  if (t1 < t6)
    ;
  else
    t1 = t6;
  t4.lowerBound.set$y(t1);
  t1 = t2.upperBound.get$x();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(5, broadPhase, transformOne, transformTwo, t4, t1, t2, t3);
  t6 = t3.upperBound.get$x();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(6, broadPhase, transformOne, transformTwo, t4, t1, t6, t2, t3);
  if (t1 > t6)
    ;
  else
    t1 = t6;
  t4.upperBound.set$x(t1);
  t1 = t2.upperBound.get$y();
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(7, broadPhase, transformOne, transformTwo, t4, t2, t3, t1);
  t6 = t3.upperBound.get$y();
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(8, broadPhase, transformOne, transformTwo, t4, t2, t3, t1, t6);
  if (t1 > t6)
    ;
  else
    t1 = t6;
  t4.upperBound.set$y(t1);
  disp = t2.lowerBound;
  t2 = transformTwo.position;
  t1 = t2.x;
  if (typeof t1 !== 'number')
    return this.synchronize$3$bailout(9, broadPhase, transformOne, t4, disp, t2, t1);
  t5 = transformOne.position;
  t6 = t5.x;
  if (typeof t6 !== 'number')
    return this.synchronize$3$bailout(10, broadPhase, t4, disp, t2, t1, t5, t6);
  disp.set$x(t1 - t6);
  t2 = t2.y;
  if (typeof t2 !== 'number')
    return this.synchronize$3$bailout(11, broadPhase, disp, t5, t4, t2);
  t5 = t5.y;
  if (typeof t5 !== 'number')
    return this.synchronize$3$bailout(12, broadPhase, t5, disp, t4, t2);
  disp.set$y(t2 - t5);
  broadPhase.moveProxy$3(this.proxy, t4, disp);
},
 synchronize$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      t3 = env5;
      t2 = env4;
      t1 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 2:
      t3 = env6;
      t5 = env5;
      t2 = env4;
      t1 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 3:
      t1 = env6;
      t3 = env5;
      t2 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 4:
      t1 = env7;
      t3 = env6;
      t2 = env5;
      t4 = env4;
      t6 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 5:
      t3 = env6;
      t2 = env5;
      t1 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 6:
      t3 = env7;
      t2 = env6;
      t6 = env5;
      t1 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 7:
      t1 = env6;
      t3 = env5;
      t2 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 8:
      t6 = env7;
      t1 = env6;
      t3 = env5;
      t2 = env4;
      t4 = env3;
      transformTwo = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 9:
      t1 = env5;
      t2 = env4;
      disp = env3;
      t4 = env2;
      transformOne = env1;
      broadPhase = env0;
      break;
    case 10:
      t6 = env6;
      t5 = env5;
      t1 = env4;
      t2 = env3;
      disp = env2;
      t4 = env1;
      broadPhase = env0;
      break;
    case 11:
      t2 = env4;
      t4 = env3;
      t5 = env2;
      disp = env1;
      broadPhase = env0;
      break;
    case 12:
      t2 = env4;
      t4 = env3;
      disp = env2;
      t5 = env1;
      broadPhase = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.proxy == null)
        return;
      t1 = this.shape;
      t2 = this._poolOne;
      t1.computeAxisAlignedBox$2(t2, transformOne);
      t1 = this.shape;
      t3 = this._poolTwo;
      t1.computeAxisAlignedBox$2(t3, transformTwo);
      t1 = t2.lowerBound.get$x();
    case 1:
      state0 = 0;
      t5 = t3.lowerBound.get$x();
    case 2:
      state0 = 0;
      t1 = $.ltB(t1, t5) ? t2.lowerBound.get$x() : t3.lowerBound.get$x();
      t4 = this.box;
      t4.lowerBound.set$x(t1);
      t1 = t2.lowerBound.get$y();
    case 3:
      state0 = 0;
      t6 = t3.lowerBound.get$y();
    case 4:
      state0 = 0;
      t1 = $.ltB(t1, t6) ? t2.lowerBound.get$y() : t3.lowerBound.get$y();
      t4.lowerBound.set$y(t1);
      t1 = t2.upperBound.get$x();
    case 5:
      state0 = 0;
      t6 = t3.upperBound.get$x();
    case 6:
      state0 = 0;
      t1 = $.gtB(t1, t6) ? t2.upperBound.get$x() : t3.upperBound.get$x();
      t4.upperBound.set$x(t1);
      t1 = t2.upperBound.get$y();
    case 7:
      state0 = 0;
      t6 = t3.upperBound.get$y();
    case 8:
      state0 = 0;
      t1 = $.gtB(t1, t6) ? t2.upperBound.get$y() : t3.upperBound.get$y();
      t4.upperBound.set$y(t1);
      disp = t2.lowerBound;
      t2 = transformTwo.position;
      t1 = t2.x;
    case 9:
      state0 = 0;
      t5 = transformOne.position;
      t6 = t5.x;
    case 10:
      state0 = 0;
      disp.set$x($.sub(t1, t6));
      t2 = t2.y;
    case 11:
      state0 = 0;
      t5 = t5.y;
    case 12:
      var t1, t2, t3, transformTwo, transformOne, broadPhase, t5, t4, t6, disp;
      state0 = 0;
      disp.set$y($.sub(t2, t5));
      broadPhase.moveProxy$3(this.proxy, t4, disp);
  }
},
 getMassData$1: function(massData) {
  this.shape.computeMass$2(massData, this.density);
},
 get$type: function() {
  return this.shape.get$type();
}
};

$$.FixtureDef = {"": ["shape?", "userData=", "friction=", "restitution=", "density?", "isSensor?", "filter?"],
 "super": "Object",
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 FixtureDef$0: function() {
  var t1 = this.filter;
  t1.categoryBits = 1;
  t1.maskBits = 65535;
  t1.groupIndex = 0;
}
};

$$.Island = {"": ["listener", "bodies?", "contacts", "joints", "positions", "velocities", "bodyCount?", "jointCount", "contactCount?", "bodyCapacity", "contactCapacity", "jointCapacity", "positionIterationCount", "_contactSolver", "_translation", "impulse"],
 "super": "Object",
 init$4: function(argBodyCapacity, argContactCapacity, argJointCapacity, argListener) {
  var t1, old, i;
  this.bodyCapacity = argBodyCapacity;
  this.contactCapacity = argContactCapacity;
  this.jointCapacity = argJointCapacity;
  this.bodyCount = 0;
  this.contactCount = 0;
  this.listener = argListener;
  t1 = this.bodies;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1)))
    this.bodies = $._ListImpl_List(this.bodyCapacity);
  t1 = this.contacts;
  if (t1 == null || $.gtB(this.contactCapacity, $.get$length(t1)))
    this.contacts = $._ListImpl_List(this.contactCapacity);
  t1 = this.joints;
  if (t1 == null || $.gtB(this.jointCapacity, $.get$length(t1)))
    this.joints = $._ListImpl_List(this.jointCapacity);
  t1 = this.velocities;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))) {
    old = this.velocities;
    if (old == null)
      old = $._ListImpl_List(0);
    this.velocities = $._ListImpl_List(this.bodyCapacity);
    $.setRange$3(this.velocities, 0, $.get$length(old), old);
    i = $.get$length(old);
    if (i !== (i | 0))
      return this.init$4$bailout(1, i);
    for (; $.ltB(i, $.get$length(this.velocities)); ++i)
      $.indexSet(this.velocities, i, $.Velocity$());
  }
  t1 = this.positions;
  if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))) {
    old = this.positions;
    if (old == null)
      old = $._ListImpl_List(0);
    this.positions = $._ListImpl_List(this.bodyCapacity);
    $.setRange$3(this.positions, 0, $.get$length(old), old);
    i = $.get$length(old);
    if (i !== (i | 0))
      return this.init$4$bailout(2, i);
    for (; $.ltB(i, $.get$length(this.positions)); ++i)
      $.indexSet(this.positions, i, $.Position$());
  }
},
 init$4$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      i = env0;
      break;
    case 2:
      i = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.bodyCapacity = argBodyCapacity;
      this.contactCapacity = argContactCapacity;
      this.jointCapacity = argJointCapacity;
      this.bodyCount = 0;
      this.contactCount = 0;
      this.listener = argListener;
      t1 = this.bodies;
      if (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1)))
        this.bodies = $._ListImpl_List(this.bodyCapacity);
      t1 = this.contacts;
      if (t1 == null || $.gtB(this.contactCapacity, $.get$length(t1)))
        this.contacts = $._ListImpl_List(this.contactCapacity);
      t1 = this.joints;
      if (t1 == null || $.gtB(this.jointCapacity, $.get$length(t1)))
        this.joints = $._ListImpl_List(this.jointCapacity);
      t1 = this.velocities;
    case 1:
      if (state0 === 1 || state0 === 0 && (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))))
        switch (state0) {
          case 0:
            old = this.velocities;
            if (old == null)
              old = $._ListImpl_List(0);
            this.velocities = $._ListImpl_List(this.bodyCapacity);
            $.setRange$3(this.velocities, 0, $.get$length(old), old);
            i = $.get$length(old);
          case 1:
            state0 = 0;
            for (; $.ltB(i, $.get$length(this.velocities)); i = $.add(i, 1))
              $.indexSet(this.velocities, i, $.Velocity$());
        }
      t1 = this.positions;
    case 2:
      var t1, old, i;
      if (state0 === 2 || state0 === 0 && (t1 == null || $.gtB(this.bodyCapacity, $.get$length(t1))))
        switch (state0) {
          case 0:
            old = this.positions;
            if (old == null)
              old = $._ListImpl_List(0);
            this.positions = $._ListImpl_List(this.bodyCapacity);
            $.setRange$3(this.positions, 0, $.get$length(old), old);
            i = $.get$length(old);
          case 2:
            state0 = 0;
            for (; $.ltB(i, $.get$length(this.positions)); i = $.add(i, 1))
              $.indexSet(this.positions, i, $.Position$());
        }
  }
},
 clear$0: function() {
  this.bodyCount = 0;
  this.contactCount = 0;
  this.jointCount = 0;
},
 solve$3: function(step, gravity, allowSleep) {
  var i, t1, b, t2, t4, t6, velocityDelta, t11, t13, t16, t18, a, a1, t3, a2, b1, i1, i2, fixtureA, fixtureB, bodyA, bodyB, nonStatic, temp, t5, j, ratio, rotation, t7, t9, contactsOkay, jointsOkay, jointOkay, minSleepTime, t8;
  i = 0;
  while (true) {
    t1 = this.bodyCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(1, step, gravity, allowSleep, i, t1);
    if (!(i < t1))
      break;
    c$0: {
      t1 = this.bodies;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(2, step, gravity, i, allowSleep, t1);
      if (i >= t1.length)
        throw $.ioore(i);
      b = t1[i];
      t1 = b.get$type();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(3, step, gravity, allowSleep, b, t1, i);
      if (!(t1 === 2))
        break c$0;
      t1 = b.get$_force();
      t2 = t1.get$x();
      if (typeof t2 !== 'number')
        return this.solve$3$bailout(4, step, gravity, t2, b, allowSleep, i);
      t4 = b.get$invMass();
      if (typeof t4 !== 'number')
        return this.solve$3$bailout(5, step, gravity, t2, b, t4, allowSleep, i);
      t2 *= t4;
      t6 = gravity.get$x();
      if (typeof t6 !== 'number')
        return this.solve$3$bailout(6, step, gravity, allowSleep, b, t2, t6, i);
      t6 = t2 + t6;
      t2 = step.get$dt();
      if (typeof t2 !== 'number')
        return this.solve$3$bailout(7, step, gravity, allowSleep, b, t6, t2, i);
      t6 *= t2;
      t1 = t1.get$y();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(8, step, gravity, allowSleep, b, i, t6, t1);
      t4 = t1 * t4;
      t1 = gravity.get$y();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(10, step, t1, gravity, b, allowSleep, i, t6, t4);
      t1 = t4 + t1;
      velocityDelta = $.Vector$(t6, t1 * t2);
      b.get$linearVelocity().addLocal$1(velocityDelta);
      t6 = b.get$angularVelocity();
      if (typeof t6 !== 'number')
        return this.solve$3$bailout(12, step, gravity, allowSleep, b, t6, i);
      t11 = step.get$dt();
      if (typeof t11 !== 'number')
        return this.solve$3$bailout(13, step, gravity, allowSleep, b, t6, i, t11);
      t13 = b.get$invInertia();
      if (typeof t13 !== 'number')
        return this.solve$3$bailout(14, step, gravity, allowSleep, b, t6, i, t11, t13);
      t13 = t11 * t13;
      t11 = b.get$_torque();
      if (typeof t11 !== 'number')
        return this.solve$3$bailout(15, step, gravity, allowSleep, b, t6, i, t13, t11);
      b.set$angularVelocity(t6 + t13 * t11);
      t16 = step.get$dt();
      if (typeof t16 !== 'number')
        return this.solve$3$bailout(16, step, gravity, allowSleep, b, t16, i);
      t18 = b.get$linearDamping();
      if (typeof t18 !== 'number')
        return this.solve$3$bailout(17, step, gravity, allowSleep, b, t16, t18, i);
      a = 1 - t16 * t18;
      t1 = a < 1;
      if (0 > (t1 ? a : 1))
        a1 = 0;
      else
        a1 = t1 ? a : 1;
      b.get$linearVelocity().mulLocal$1(a1);
      t1 = step.get$dt();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(18, step, gravity, allowSleep, b, t1, i);
      t3 = b.get$angularDamping();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(19, step, gravity, allowSleep, b, t1, t3, i);
      a2 = 1 - t1 * t3;
      b1 = a2 < 1 ? a2 : 1;
      t1 = b.get$angularVelocity();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(20, step, gravity, b1, b, t1, allowSleep, i);
      b.set$angularVelocity(t1 * (0 > b1 ? 0 : b1));
    }
    ++i;
  }
  i1 = -1;
  i2 = 0;
  while (true) {
    t1 = this.contactCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(21, step, allowSleep, t1, i1, i2);
    t3 = i2 < t1;
    t4 = this.contacts;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.solve$3$bailout(22, step, allowSleep, t3, t4, i1, i2);
    if (!t3)
      break;
    if (i2 >= t4.length)
      throw $.ioore(i2);
    fixtureA = t4[i2].get$fixtureA();
    if (i2 >= t4.length)
      throw $.ioore(i2);
    fixtureB = t4[i2].get$fixtureB();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    t1 = bodyA.get$type();
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(24, step, bodyB, allowSleep, t1, i1, i2);
    if (!(t1 === 0)) {
      t1 = bodyB.get$type();
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(25, step, allowSleep, t1, i1, i2);
      nonStatic = !(t1 === 0);
    } else
      nonStatic = false;
    if (nonStatic) {
      ++i1;
      t1 = this.contacts;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(26, step, i1, allowSleep, t1, i2);
      if (i1 >= t1.length)
        throw $.ioore(i1);
      temp = t1[i1];
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.solve$3$bailout(27, step, allowSleep, i1, temp, t1, i2);
      t4 = t1.length;
      if (i2 >= t4)
        throw $.ioore(i2);
      t5 = t1[i2];
      if (i1 >= t4)
        throw $.ioore(i1);
      t1[i1] = t5;
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.solve$3$bailout(28, step, t1, allowSleep, i1, temp, i2);
      if (i2 >= t1.length)
        throw $.ioore(i2);
      t1[i2] = temp;
    }
    ++i2;
  }
  t2 = this._contactSolver;
  t2.init$3(t4, t1, step.get$dtRatio());
  t2.warmStart$0();
  i = 0;
  while (true) {
    t1 = this.jointCount;
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(29, step, t2, allowSleep, t1, i);
    if (!(i < t1))
      break;
    t1 = this.joints;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.solve$3$bailout(30, step, i, allowSleep, t2, t1);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i].initVelocityConstraints$1(step);
    ++i;
  }
  i = 0;
  while (true) {
    t1 = step.get$velocityIterations();
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(31, step, i, allowSleep, t2, t1);
    if (!(i < t1))
      break;
    j = 0;
    while (true) {
      t1 = this.jointCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(32, step, j, allowSleep, i, t2, t1);
      if (!(j < t1))
        break;
      t1 = this.joints;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(33, step, j, t1, i, t2);
      if (j >= t1.length)
        throw $.ioore(j);
      t1[j].solveVelocityConstraints$1(step);
      ++j;
    }
    t2.solveVelocityConstraints$0();
    ++i;
  }
  t2.storeImpulses$0();
  temp = $.Vector$(0, 0);
  t1 = this._translation;
  i = 0;
  while (true) {
    t3 = this.bodyCount;
    if (typeof t3 !== 'number')
      return this.solve$3$bailout(34, step, t2, allowSleep, i, temp, t1, t3);
    if (!(i < t3))
      break;
    c$0: {
      t3 = this.bodies;
      if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(35, step, t2, allowSleep, i, temp, t1, t3);
      if (i >= t3.length)
        throw $.ioore(i);
      b = t3[i];
      t3 = b.get$type();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(36, step, t3, allowSleep, t2, i, temp, t1, b);
      if (t3 === 0)
        break c$0;
      t1.setFrom$1(b.get$linearVelocity());
      t1.mulLocal$1(step.get$dt());
      t3 = t1.x;
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(37, step, t2, allowSleep, t3, i, temp, t1, b);
      t3 *= t3;
      t5 = t1.y;
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(38, step, t2, allowSleep, t3, i, t5, temp, t1, b);
      if (t3 + t5 * t5 > 4) {
        t3 = $.get$length(t1);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        ratio = 2 / t3;
        b.get$linearVelocity().mulLocal$1(ratio);
      }
      t3 = step.get$dt();
      if (typeof t3 !== 'number')
        return this.solve$3$bailout(39, step, t2, allowSleep, i, t3, temp, t1, b);
      t5 = b.get$angularVelocity();
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(40, step, t2, allowSleep, i, t3, temp, t5, t1, b);
      rotation = t3 * t5;
      if (rotation * rotation > 2.4674011002723395) {
        t3 = $.abs(rotation);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        ratio = 1.5707963267948966 / t3;
        t3 = b.get$angularVelocity();
        if (typeof t3 !== 'number')
          return this.solve$3$bailout(41, step, t2, allowSleep, i, ratio, temp, t3, t1, b);
        b.set$angularVelocity(t3 * ratio);
      }
      t3 = b.get$sweep();
      t3.get$centerZero().setFrom$1(t3.get$center());
      t4 = b.get$sweep().get$angle();
      b.get$sweep().set$angleZero(t4);
      temp.setFrom$1(b.get$linearVelocity());
      temp.mulLocal$1(step.get$dt());
      b.get$sweep().get$center().addLocal$1(temp);
      t4 = b.get$sweep();
      t5 = t4.get$angle();
      if (typeof t5 !== 'number')
        return this.solve$3$bailout(42, t4, t5, allowSleep, step, i, t2, temp, t1, b);
      t7 = step.get$dt();
      if (typeof t7 !== 'number')
        return this.solve$3$bailout(43, t4, t5, t7, step, allowSleep, i, t2, temp, t1, b);
      t9 = b.get$angularVelocity();
      if (typeof t9 !== 'number')
        return this.solve$3$bailout(44, t4, t5, t7, t9, allowSleep, i, step, temp, t1, b, t2);
      t4.set$angle(t5 + t7 * t9);
      b.synchronizeTransform$0();
    }
    ++i;
  }
  i = 0;
  while (true) {
    t1 = step.get$positionIterations();
    if (typeof t1 !== 'number')
      return this.solve$3$bailout(45, step, t2, allowSleep, t1, i);
    if (!(i < t1))
      break;
    contactsOkay = t2.solvePositionConstraints$1(0.2);
    jointsOkay = true;
    j = 0;
    while (true) {
      t1 = this.jointCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(46, step, t2, allowSleep, jointsOkay, j, i, contactsOkay, t1);
      if (!(j < t1))
        break;
      t1 = this.joints;
      if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.solve$3$bailout(47, t2, t1, allowSleep, step, jointsOkay, j, i, contactsOkay);
      if (j >= t1.length)
        throw $.ioore(j);
      jointOkay = t1[j].solvePositionConstraints$1(0.2);
      jointsOkay = jointsOkay && jointOkay === true;
      ++j;
    }
    if (contactsOkay === true && jointsOkay)
      break;
    ++i;
  }
  this.report$1(t2.constraints);
  if (allowSleep === true) {
    minSleepTime = 99999999999999;
    i = 0;
    while (true) {
      t1 = this.bodyCount;
      if (typeof t1 !== 'number')
        return this.solve$3$bailout(48, step, i, t1, minSleepTime);
      if (!(i < t1))
        break;
      c$0: {
        t1 = this.bodies;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.solve$3$bailout(49, step, minSleepTime, i, t1);
        if (i >= t1.length)
          throw $.ioore(i);
        b = t1[i];
        t1 = b.get$type();
        if (typeof t1 !== 'number')
          return this.solve$3$bailout(50, step, b, minSleepTime, t1, i);
        if (t1 === 0)
          break c$0;
        t1 = b.get$flags();
        if (t1 !== (t1 | 0))
          return this.solve$3$bailout(51, step, b, minSleepTime, i, t1);
        if ((t1 & 4) === 0) {
          b.set$sleepTime(0);
          minSleepTime = 0;
        }
        t1 = b.get$flags();
        if (t1 !== (t1 | 0))
          return this.solve$3$bailout(52, step, b, minSleepTime, i, t1);
        if ((t1 & 4) !== 0) {
          t1 = b.get$angularVelocity();
          if (typeof t1 !== 'number')
            return this.solve$3$bailout(53, step, b, t1, minSleepTime, i);
          t3 = b.get$angularVelocity();
          if (typeof t3 !== 'number')
            return this.solve$3$bailout(54, step, b, t1, t3, minSleepTime, i);
          if (!(t1 * t3 > 0.0012184696791468343)) {
            t1 = b.get$linearVelocity();
            t2 = b.get$linearVelocity();
            t3 = t1.get$x();
            if (typeof t3 !== 'number')
              return this.solve$3$bailout(55, step, t2, t3, t1, b, minSleepTime, i);
            t5 = t2.get$x();
            if (typeof t5 !== 'number')
              return this.solve$3$bailout(56, step, t2, t3, t1, t5, b, minSleepTime, i);
            t5 = t3 * t5;
            t1 = t1.get$y();
            if (typeof t1 !== 'number')
              return this.solve$3$bailout(57, step, t2, b, t5, t1, minSleepTime, i);
            t2 = t2.get$y();
            if (typeof t2 !== 'number')
              return this.solve$3$bailout(58, step, b, t5, t2, t1, minSleepTime, i);
            t8 = t5 + t1 * t2 > 0.0001;
            t1 = t8;
          } else
            t1 = true;
        } else
          t1 = true;
        if (t1) {
          b.set$sleepTime(0);
          minSleepTime = 0;
        } else {
          t1 = b.get$sleepTime();
          if (typeof t1 !== 'number')
            return this.solve$3$bailout(59, step, b, minSleepTime, t1, i);
          t3 = step.get$dt();
          if (typeof t3 !== 'number')
            return this.solve$3$bailout(60, step, b, minSleepTime, t1, i, t3);
          b.set$sleepTime(t1 + t3);
          minSleepTime = $.min(minSleepTime, b.get$sleepTime());
        }
      }
      ++i;
    }
    if (minSleepTime >= 0.5) {
      i = 0;
      while (true) {
        t1 = this.bodyCount;
        if (typeof t1 !== 'number')
          return this.solve$3$bailout(61, i, t1);
        if (!(i < t1))
          break;
        t1 = this.bodies;
        if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
          return this.solve$3$bailout(62, i, t1);
        if (i >= t1.length)
          throw $.ioore(i);
        t1[i].set$awake(false);
        ++i;
      }
    }
  }
},
 solve$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10) {
  switch (state0) {
    case 1:
      t1 = env4;
      i = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 2:
      t1 = env4;
      allowSleep = env3;
      i = env2;
      gravity = env1;
      step = env0;
      break;
    case 3:
      i = env5;
      t1 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 4:
      i = env5;
      allowSleep = env4;
      b = env3;
      t1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 5:
      i = env6;
      allowSleep = env5;
      t3 = env4;
      b = env3;
      t1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 6:
      i = env6;
      t1 = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 7:
      i = env6;
      t3 = env5;
      t1 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 8:
      t1 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 9:
      t8 = env7;
      t1 = env6;
      t3 = env5;
      i = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 10:
      t8 = env7;
      t3 = env6;
      i = env5;
      allowSleep = env4;
      b = env3;
      gravity = env2;
      t1 = env1;
      step = env0;
      break;
    case 11:
      t3 = env7;
      i = env6;
      allowSleep = env5;
      t8 = env4;
      b = env3;
      t1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 12:
      i = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 13:
      t13 = env6;
      i = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 14:
      t15 = env7;
      t13 = env6;
      i = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 15:
      t13 = env7;
      t15 = env6;
      i = env5;
      t3 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 16:
      i = env5;
      t18 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 17:
      i = env6;
      t20 = env5;
      t18 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 18:
      i = env5;
      t1 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 19:
      i = env6;
      t3 = env5;
      t1 = env4;
      b = env3;
      allowSleep = env2;
      gravity = env1;
      step = env0;
      break;
    case 20:
      i = env6;
      allowSleep = env5;
      t1 = env4;
      b = env3;
      b1 = env2;
      gravity = env1;
      step = env0;
      break;
    case 21:
      i2 = env4;
      i1 = env3;
      t1 = env2;
      allowSleep = env1;
      step = env0;
      break;
    case 22:
      i2 = env5;
      i1 = env4;
      t3 = env3;
      t1 = env2;
      allowSleep = env1;
      step = env0;
      break;
    case 23:
      i2 = env5;
      i1 = env4;
      fixtureA = env3;
      t1 = env2;
      allowSleep = env1;
      step = env0;
      break;
    case 24:
      i2 = env5;
      i1 = env4;
      t1 = env3;
      allowSleep = env2;
      bodyB = env1;
      step = env0;
      break;
    case 25:
      i2 = env4;
      i1 = env3;
      t1 = env2;
      allowSleep = env1;
      step = env0;
      break;
    case 26:
      i2 = env4;
      t1 = env3;
      allowSleep = env2;
      i1 = env1;
      step = env0;
      break;
    case 27:
      i2 = env5;
      t1 = env4;
      temp = env3;
      i1 = env2;
      allowSleep = env1;
      step = env0;
      break;
    case 28:
      i2 = env5;
      temp = env4;
      i1 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 29:
      i = env4;
      t2 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 30:
      t2 = env4;
      t1 = env3;
      allowSleep = env2;
      i = env1;
      step = env0;
      break;
    case 31:
      t2 = env4;
      t1 = env3;
      allowSleep = env2;
      i = env1;
      step = env0;
      break;
    case 32:
      t2 = env5;
      t1 = env4;
      i = env3;
      allowSleep = env2;
      j = env1;
      step = env0;
      break;
    case 33:
      t1 = env4;
      i = env3;
      t2 = env2;
      j = env1;
      step = env0;
      break;
    case 34:
      t3 = env6;
      t2 = env5;
      temp = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 35:
      t3 = env6;
      t2 = env5;
      temp = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 36:
      b = env7;
      t2 = env6;
      temp = env5;
      i = env4;
      t1 = env3;
      allowSleep = env2;
      t3 = env1;
      step = env0;
      break;
    case 37:
      b = env7;
      t2 = env6;
      temp = env5;
      i = env4;
      t3 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 38:
      b = env8;
      t2 = env7;
      temp = env6;
      t5 = env5;
      i = env4;
      t3 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 39:
      b = env7;
      t2 = env6;
      temp = env5;
      t3 = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 40:
      b = env8;
      t2 = env7;
      t5 = env6;
      temp = env5;
      t3 = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 41:
      b = env8;
      t2 = env7;
      t3 = env6;
      temp = env5;
      ratio = env4;
      i = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 42:
      b = env8;
      t2 = env7;
      temp = env6;
      t1 = env5;
      i = env4;
      step = env3;
      allowSleep = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 43:
      b = env9;
      t2 = env8;
      temp = env7;
      t1 = env6;
      i = env5;
      allowSleep = env4;
      step = env3;
      t7 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 44:
      t1 = env10;
      b = env9;
      t2 = env8;
      temp = env7;
      step = env6;
      i = env5;
      allowSleep = env4;
      t9 = env3;
      t7 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 45:
      i = env4;
      t2 = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 46:
      t2 = env7;
      contactsOkay = env6;
      i = env5;
      j = env4;
      jointsOkay = env3;
      allowSleep = env2;
      t1 = env1;
      step = env0;
      break;
    case 47:
      contactsOkay = env7;
      i = env6;
      j = env5;
      jointsOkay = env4;
      step = env3;
      allowSleep = env2;
      t2 = env1;
      t1 = env0;
      break;
    case 48:
      minSleepTime = env3;
      t1 = env2;
      i = env1;
      step = env0;
      break;
    case 49:
      t1 = env3;
      i = env2;
      minSleepTime = env1;
      step = env0;
      break;
    case 50:
      i = env4;
      t1 = env3;
      minSleepTime = env2;
      b = env1;
      step = env0;
      break;
    case 51:
      t1 = env4;
      i = env3;
      minSleepTime = env2;
      b = env1;
      step = env0;
      break;
    case 52:
      t1 = env4;
      i = env3;
      minSleepTime = env2;
      b = env1;
      step = env0;
      break;
    case 53:
      i = env4;
      minSleepTime = env3;
      t1 = env2;
      b = env1;
      step = env0;
      break;
    case 54:
      i = env5;
      minSleepTime = env4;
      t3 = env3;
      t1 = env2;
      b = env1;
      step = env0;
      break;
    case 55:
      i = env6;
      minSleepTime = env5;
      b = env4;
      t1 = env3;
      t3 = env2;
      t2 = env1;
      step = env0;
      break;
    case 56:
      i = env7;
      minSleepTime = env6;
      b = env5;
      t5 = env4;
      t1 = env3;
      t3 = env2;
      t2 = env1;
      step = env0;
      break;
    case 57:
      i = env6;
      minSleepTime = env5;
      t1 = env4;
      t5 = env3;
      b = env2;
      t2 = env1;
      step = env0;
      break;
    case 58:
      i = env6;
      minSleepTime = env5;
      t1 = env4;
      t2 = env3;
      t5 = env2;
      b = env1;
      step = env0;
      break;
    case 59:
      i = env4;
      t1 = env3;
      minSleepTime = env2;
      b = env1;
      step = env0;
      break;
    case 60:
      t3 = env5;
      i = env4;
      t1 = env3;
      minSleepTime = env2;
      b = env1;
      step = env0;
      break;
    case 61:
      t1 = env1;
      i = env0;
      break;
    case 62:
      t1 = env1;
      i = env0;
      break;
  }
  switch (state0) {
    case 0:
      i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.bodyCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t1 = this.bodies;
                  case 2:
                    state0 = 0;
                    b = $.index(t1, i);
                    t1 = b.get$type();
                  case 3:
                    state0 = 0;
                    if (!$.eqB(t1, 2))
                      break c$0;
                    t1 = b.get$_force().get$x();
                  case 4:
                    state0 = 0;
                    t3 = b.get$invMass();
                  case 5:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    t1 = gravity.get$x();
                  case 6:
                    state0 = 0;
                    t1 = $.add(t3, t1);
                    t3 = step.get$dt();
                  case 7:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    t1 = b.get$_force().get$y();
                  case 8:
                    state0 = 0;
                    t8 = b.get$invMass();
                  case 9:
                    state0 = 0;
                    t8 = $.mul(t1, t8);
                    t1 = gravity.get$y();
                  case 10:
                    state0 = 0;
                    t1 = $.add(t8, t1);
                    t8 = step.get$dt();
                  case 11:
                    state0 = 0;
                    velocityDelta = $.Vector$(t3, $.mul(t1, t8));
                    b.get$linearVelocity().addLocal$1(velocityDelta);
                    t3 = b.get$angularVelocity();
                  case 12:
                    state0 = 0;
                    t13 = step.get$dt();
                  case 13:
                    state0 = 0;
                    t15 = b.get$invInertia();
                  case 14:
                    state0 = 0;
                    t15 = $.mul(t13, t15);
                    t13 = b.get$_torque();
                  case 15:
                    state0 = 0;
                    b.set$angularVelocity($.add(t3, $.mul(t15, t13)));
                    t18 = step.get$dt();
                  case 16:
                    state0 = 0;
                    t20 = b.get$linearDamping();
                  case 17:
                    state0 = 0;
                    t20 = $.mul(t18, t20);
                    if (typeof t20 !== 'number')
                      throw $.iae(t20);
                    a = 1 - t20;
                    t1 = a < 1;
                    if (0 > (t1 ? a : 1))
                      a1 = 0;
                    else
                      a1 = t1 ? a : 1;
                    b.get$linearVelocity().mulLocal$1(a1);
                    t1 = step.get$dt();
                  case 18:
                    state0 = 0;
                    t3 = b.get$angularDamping();
                  case 19:
                    state0 = 0;
                    t3 = $.mul(t1, t3);
                    if (typeof t3 !== 'number')
                      throw $.iae(t3);
                    a2 = 1 - t3;
                    b1 = a2 < 1 ? a2 : 1;
                    t1 = b.get$angularVelocity();
                  case 20:
                    state0 = 0;
                    b.set$angularVelocity($.mul(t1, 0 > b1 ? 0 : b1));
                }
              }
              ++i;
          }
      i1 = -1;
      i2 = 0;
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      L1:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.contactCount;
            case 21:
              state0 = 0;
              t1 = $.ltB(i2, t1);
              t3 = this.contacts;
            case 22:
              state0 = 0;
              if (!t1)
                break L1;
              fixtureA = $.index(t3, i2).get$fixtureA();
              t1 = this.contacts;
            case 23:
              state0 = 0;
              fixtureB = $.index(t1, i2).get$fixtureB();
              bodyA = fixtureA.get$body();
              bodyB = fixtureB.get$body();
              t1 = bodyA.get$type();
            case 24:
              state0 = 0;
            case 25:
              if (state0 === 25 || state0 === 0 && !$.eqB(t1, 0))
                switch (state0) {
                  case 0:
                    t1 = bodyB.get$type();
                  case 25:
                    state0 = 0;
                    nonStatic = !$.eqB(t1, 0);
                }
              else
                nonStatic = false;
            default:
              if (state0 === 28 || state0 === 27 || state0 === 26 || state0 === 0 && nonStatic)
                switch (state0) {
                  case 0:
                    ++i1;
                    t1 = this.contacts;
                  case 26:
                    state0 = 0;
                    temp = $.index(t1, i1);
                    t1 = this.contacts;
                  case 27:
                    state0 = 0;
                    $.indexSet(t1, i1, $.index(t1, i2));
                    t1 = this.contacts;
                  case 28:
                    state0 = 0;
                    $.indexSet(t1, i2, temp);
                }
              ++i2;
          }
      t1 = this._contactSolver;
      t1.init$3(t3, this.contactCount, step.get$dtRatio());
      t1.warmStart$0();
      i = 0;
    case 29:
    case 30:
      L2:
        while (true)
          switch (state0) {
            case 0:
              t2 = this.jointCount;
            case 29:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L2;
              t2 = this.joints;
            case 30:
              state0 = 0;
              $.index(t2, i).initVelocityConstraints$1(step);
              ++i;
          }
      i = 0;
    case 31:
    case 32:
    case 33:
      L3:
        while (true)
          switch (state0) {
            case 0:
              t2 = step.get$velocityIterations();
            case 31:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L3;
              j = 0;
            default:
              L4:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this.jointCount;
                    case 32:
                      state0 = 0;
                      if (!$.ltB(j, t2))
                        break L4;
                      t2 = this.joints;
                    case 33:
                      state0 = 0;
                      $.index(t2, j).solveVelocityConstraints$1(step);
                      ++j;
                  }
              t1.solveVelocityConstraints$0();
              ++i;
          }
      t1.storeImpulses$0();
      temp = $.Vector$(0, 0);
      t2 = this._translation;
      i = 0;
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      L5:
        while (true)
          switch (state0) {
            case 0:
              t3 = this.bodyCount;
            case 34:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L5;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t3 = this.bodies;
                  case 35:
                    state0 = 0;
                    b = $.index(t3, i);
                    t3 = b.get$type();
                  case 36:
                    state0 = 0;
                    if ($.eqB(t3, 0))
                      break c$0;
                    t2.setFrom$1(b.get$linearVelocity());
                    t2.mulLocal$1(step.get$dt());
                    t3 = t2.x;
                  case 37:
                    state0 = 0;
                    t3 = $.mul(t3, t3);
                    t5 = t2.y;
                  case 38:
                    state0 = 0;
                    if ($.gtB($.add(t3, $.mul(t5, t5)), 4)) {
                      t3 = $.get$length(t2);
                      if (typeof t3 !== 'number')
                        throw $.iae(t3);
                      ratio = 2 / t3;
                      b.get$linearVelocity().mulLocal$1(ratio);
                    }
                    t3 = step.get$dt();
                  case 39:
                    state0 = 0;
                    t5 = b.get$angularVelocity();
                  case 40:
                    state0 = 0;
                    rotation = $.mul(t3, t5);
                  case 41:
                    if (state0 === 41 || state0 === 0 && $.gtB($.mul(rotation, rotation), 2.4674011002723395))
                      switch (state0) {
                        case 0:
                          t3 = $.abs(rotation);
                          if (typeof t3 !== 'number')
                            throw $.iae(t3);
                          ratio = 1.5707963267948966 / t3;
                          t3 = b.get$angularVelocity();
                        case 41:
                          state0 = 0;
                          b.set$angularVelocity($.mul(t3, ratio));
                      }
                    t3 = b.get$sweep();
                    t3.get$centerZero().setFrom$1(t3.get$center());
                    t4 = b.get$sweep().get$angle();
                    b.get$sweep().set$angleZero(t4);
                    temp.setFrom$1(b.get$linearVelocity());
                    temp.mulLocal$1(step.get$dt());
                    b.get$sweep().get$center().addLocal$1(temp);
                    t4 = b.get$sweep();
                    t5 = t4.get$angle();
                  case 42:
                    state0 = 0;
                    t7 = step.get$dt();
                  case 43:
                    state0 = 0;
                    t9 = b.get$angularVelocity();
                  case 44:
                    state0 = 0;
                    t4.set$angle($.add(t5, $.mul(t7, t9)));
                    b.synchronizeTransform$0();
                }
              }
              ++i;
          }
      i = 0;
    case 45:
    case 46:
    case 47:
      L6:
        while (true)
          switch (state0) {
            case 0:
              t2 = step.get$positionIterations();
            case 45:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L6;
              contactsOkay = t1.solvePositionConstraints$1(0.2);
              jointsOkay = true;
              j = 0;
            default:
              L7:
                while (true)
                  switch (state0) {
                    case 0:
                      t2 = this.jointCount;
                    case 46:
                      state0 = 0;
                      if (!$.ltB(j, t2))
                        break L7;
                      t2 = this.joints;
                    case 47:
                      state0 = 0;
                      jointOkay = $.index(t2, j).solvePositionConstraints$1(0.2);
                      jointsOkay = jointsOkay && jointOkay === true;
                      ++j;
                  }
              if (contactsOkay === true && jointsOkay)
                break L6;
              ++i;
          }
      this.report$1(t1.constraints);
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
      var i, t1, allowSleep, gravity, step, b, t3, t8, velocityDelta, t13, t15, t18, t20, a, a1, a2, b1, i1, i2, fixtureA, fixtureB, bodyA, bodyB, nonStatic, temp, t2, j, t5, ratio, rotation, t4, t7, t9, contactsOkay, jointsOkay, jointOkay, minSleepTime;
      if (state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 0 && allowSleep === true)
        switch (state0) {
          case 0:
            minSleepTime = 99999999999999;
            i = 0;
          default:
            L8:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = this.bodyCount;
                  case 48:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L8;
                  default:
                    c$0: {
                      switch (state0) {
                        case 0:
                          t1 = this.bodies;
                        case 49:
                          state0 = 0;
                          b = $.index(t1, i);
                          t1 = b.get$type();
                        case 50:
                          state0 = 0;
                          if ($.eqB(t1, 0))
                            break c$0;
                          t1 = b.get$flags();
                        case 51:
                          state0 = 0;
                          if ($.eqB($.and(t1, 4), 0)) {
                            b.set$sleepTime(0);
                            minSleepTime = 0;
                          }
                          t1 = b.get$flags();
                        case 52:
                          state0 = 0;
                        default:
                          if (state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 0 && !$.eqB($.and(t1, 4), 0))
                            switch (state0) {
                              case 0:
                                t1 = b.get$angularVelocity();
                              case 53:
                                state0 = 0;
                                t3 = b.get$angularVelocity();
                              case 54:
                                state0 = 0;
                              default:
                                if (state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 0 && !$.gtB($.mul(t1, t3), 0.0012184696791468343))
                                  switch (state0) {
                                    case 0:
                                      t1 = b.get$linearVelocity();
                                      t2 = b.get$linearVelocity();
                                      t3 = t1.get$x();
                                    case 55:
                                      state0 = 0;
                                      t5 = t2.get$x();
                                    case 56:
                                      state0 = 0;
                                      t5 = $.mul(t3, t5);
                                      t1 = t1.get$y();
                                    case 57:
                                      state0 = 0;
                                      t2 = t2.get$y();
                                    case 58:
                                      state0 = 0;
                                      t8 = $.gtB($.add(t5, $.mul(t1, t2)), 0.0001);
                                      t1 = t8;
                                  }
                                else
                                  t1 = true;
                            }
                          else
                            t1 = true;
                        case 59:
                        case 60:
                          if (state0 === 0 && t1) {
                            b.set$sleepTime(0);
                            minSleepTime = 0;
                          } else
                            switch (state0) {
                              case 0:
                                t1 = b.get$sleepTime();
                              case 59:
                                state0 = 0;
                                t3 = step.get$dt();
                              case 60:
                                state0 = 0;
                                b.set$sleepTime($.add(t1, t3));
                                minSleepTime = $.min(minSleepTime, b.get$sleepTime());
                            }
                      }
                    }
                    ++i;
                }
          case 61:
          case 62:
            if (state0 === 62 || state0 === 61 || state0 === 0 && minSleepTime >= 0.5)
              switch (state0) {
                case 0:
                  i = 0;
                default:
                  L9:
                    while (true)
                      switch (state0) {
                        case 0:
                          t1 = this.bodyCount;
                        case 61:
                          state0 = 0;
                          if (!$.ltB(i, t1))
                            break L9;
                          t1 = this.bodies;
                        case 62:
                          state0 = 0;
                          $.index(t1, i).set$awake(false);
                          ++i;
                      }
              }
        }
  }
},
 addBody$1: function(body) {
  var t1, t3;
  body.set$islandIndex(this.bodyCount);
  t1 = this.bodies;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addBody$1$bailout(1, body, t1);
  t3 = this.bodyCount;
  if (typeof t3 !== 'number')
    return this.addBody$1$bailout(2, body, t1, t3);
  this.bodyCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = body;
},
 addBody$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      body = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      body = env0;
      break;
  }
  switch (state0) {
    case 0:
      body.set$islandIndex(this.bodyCount);
      t1 = this.bodies;
    case 1:
      state0 = 0;
      t3 = this.bodyCount;
    case 2:
      var t1, body, t3;
      state0 = 0;
      this.bodyCount = $.add(t3, 1);
      $.indexSet(t1, t3, body);
  }
},
 addContact$1: function(contact) {
  var t1, t3;
  t1 = this.contacts;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addContact$1$bailout(1, contact, t1);
  t3 = this.contactCount;
  if (typeof t3 !== 'number')
    return this.addContact$1$bailout(2, contact, t1, t3);
  this.contactCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = contact;
},
 addContact$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      contact = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      contact = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.contacts;
    case 1:
      state0 = 0;
      t3 = this.contactCount;
    case 2:
      var t1, contact, t3;
      state0 = 0;
      this.contactCount = $.add(t3, 1);
      $.indexSet(t1, t3, contact);
  }
},
 addJoint$1: function(joint) {
  var t1, t3;
  t1 = this.joints;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.addJoint$1$bailout(1, joint, t1);
  t3 = this.jointCount;
  if (typeof t3 !== 'number')
    return this.addJoint$1$bailout(2, joint, t1, t3);
  this.jointCount = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = joint;
},
 addJoint$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      joint = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      joint = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.joints;
    case 1:
      state0 = 0;
      t3 = this.jointCount;
    case 2:
      var t1, joint, t3;
      state0 = 0;
      this.jointCount = $.add(t3, 1);
      $.indexSet(t1, t3, joint);
  }
},
 report$1: function(constraints) {
  var t1, t2, t3, t4, t5, i, c, cc, j, t6;
  if (typeof constraints !== 'string' && (typeof constraints !== 'object' || constraints === null || constraints.constructor !== Array && !constraints.is$JavaScriptIndexingBehavior()))
    return this.report$1$bailout(1, constraints);
  if (this.listener == null)
    return;
  for (t1 = this.impulse, t2 = t1.normalImpulses, t3 = t2.length, t4 = t1.tangentImpulses, t5 = t4.length, i = 0; $.ltB(i, this.contactCount); ++i) {
    c = $.index(this.contacts, i);
    if (i >= constraints.length)
      throw $.ioore(i);
    cc = constraints[i];
    for (j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      t6 = $.index(cc.get$points(), j).get$normalImpulse();
      if (j >= t3)
        throw $.ioore(j);
      t2[j] = t6;
      t6 = $.index(cc.get$points(), j).get$tangentImpulse();
      if (j >= t5)
        throw $.ioore(j);
      t4[j] = t6;
    }
    this.listener.postSolve$2(c, t1);
  }
},
 report$1$bailout: function(state0, constraints) {
  var t1, t2, t3, t4, t5, i, c, cc, j, t6;
  if (this.listener == null)
    return;
  for (t1 = this.impulse, t2 = t1.normalImpulses, t3 = t2.length, t4 = t1.tangentImpulses, t5 = t4.length, i = 0; $.ltB(i, this.contactCount); ++i) {
    c = $.index(this.contacts, i);
    cc = $.index(constraints, i);
    for (j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      t6 = $.index(cc.get$points(), j).get$normalImpulse();
      if (j >= t3)
        throw $.ioore(j);
      t2[j] = t6;
      t6 = $.index(cc.get$points(), j).get$tangentImpulse();
      if (j >= t5)
        throw $.ioore(j);
      t4[j] = t6;
    }
    this.listener.postSolve$2(c, t1);
  }
}
};

$$.Position = {"": ["x=", "a="],
 "super": "Object",
 Position$0: function() {
  this.x = $.Vector$(0, 0);
  this.a = 0;
}
};

$$.Velocity = {"": ["v?", "a="],
 "super": "Object",
 Velocity$0: function() {
  this.v = $.Vector$(0, 0);
  this.a = 0;
}
};

$$.TimeStep = {"": ["dt=", "inv_dt=", "dtRatio=", "velocityIterations=", "positionIterations=", "warmStarting!"],
 "super": "Object"
};

$$.World = {"": ["_flags", "_contactManager", "_bodyList", "_jointList", "_bodyCount", "_jointCount", "_gravity", "_allowSleep", "_debugDraw", "_fixtureDestructionListener", "_jointDestructionListener", "_pool", "_inverseTimestep", "_warmStarting", "_continuousPhysics", "_contactStacks", "center?", "axis", "timestep", "cA", "cB", "wqwrapper", "toiInput", "toiOutput", "backup", "toiSolver", "contacts", "island", "stack"],
 "super": "Object",
 _addType$3: function(creatorStack, type1, type2) {
  var register, t1, t2, register2;
  register = $.ContactRegister$();
  register.creator = creatorStack;
  register.primary = true;
  t1 = this._contactStacks;
  t2 = t1.length;
  if (type1 < 0 || type1 >= t2)
    throw $.ioore(type1);
  $.indexSet(t1[type1], type2, register);
  if (type1 !== type2) {
    register2 = $.ContactRegister$();
    register2.creator = creatorStack;
    register2.primary = false;
    if (type2 < 0 || type2 >= t2)
      throw $.ioore(type2);
    $.indexSet(t1[type2], type1, register2);
  }
},
 _initializeRegisters$0: function() {
  var t1 = this._pool;
  this._addType$3(t1.getCircleContactStack$0(), 0, 0);
  this._addType$3(t1.getPolyCircleContactStack$0(), 1, 0);
  this._addType$3(t1.getPolyContactStack$0(), 1, 1);
},
 popContact$2: function(fixtureA, fixtureB) {
  var type1, type2, t1, reg, creator, c;
  type1 = fixtureA.get$type();
  type2 = fixtureB.get$type();
  t1 = this._contactStacks;
  if (type1 !== (type1 | 0))
    throw $.iae(type1);
  if (type1 < 0 || type1 >= t1.length)
    throw $.ioore(type1);
  reg = $.index(t1[type1], type2);
  creator = reg.get$creator();
  if (!(creator == null)) {
    if ($.get$isEmpty(creator) === true)
      creator = this._getFreshContactStack$2(type1, type2);
    if (reg.get$primary() === true) {
      c = creator.removeFirst$0();
      c.init$2(fixtureA, fixtureB);
      return c;
    } else {
      c = creator.removeFirst$0();
      c.init$2(fixtureB, fixtureA);
      return c;
    }
  } else
    return;
},
 _getFreshContactStack$2: function(type1, type2) {
  var t1, t2;
  if (type1 === 0 && $.eqB(type2, 0))
    return this._pool.getCircleContactStack$0();
  else {
    t1 = type1 === 1 && $.eqB(type2, 1);
    t2 = this._pool;
    if (t1)
      return t2.getPolyContactStack$0();
    else
      return t2.getPolyCircleContactStack$0();
  }
},
 pushContact$1: function(contact) {
  var type1, type2, t1;
  if ($.gtB(contact.get$manifold().get$pointCount(), 0)) {
    contact.get$fixtureA().get$body().set$awake(true);
    contact.get$fixtureB().get$body().set$awake(true);
  }
  type1 = contact.get$fixtureA().get$type();
  type2 = contact.get$fixtureB().get$type();
  t1 = this._contactStacks;
  if (type1 !== (type1 | 0))
    throw $.iae(type1);
  if (type1 < 0 || type1 >= t1.length)
    throw $.ioore(type1);
  $.index(t1[type1], type2).get$creator().addFirst$1(contact);
},
 get$contactListener: function() {
  return this._contactManager.get$contactListener();
},
 createBody$1: function(def) {
  var b, t1;
  if (this.get$locked() === true)
    return;
  b = $.Body$(def, this);
  b.prev = null;
  b.next = this._bodyList;
  t1 = this._bodyList;
  if (!(t1 == null))
    t1.set$prev(b);
  this._bodyList = b;
  this._bodyCount = this._bodyCount + 1;
  return b;
},
 step$3: function(dt, velocityIterations, positionIterations) {
  var t1;
  if ((this._flags & 1) === 1) {
    this._contactManager.findNewContacts$0();
    this._flags = (this._flags & 4294967294) >>> 0;
  }
  this._flags = (this._flags | 2) >>> 0;
  t1 = this.timestep;
  t1.dt = dt;
  t1.velocityIterations = velocityIterations;
  t1.positionIterations = positionIterations;
  if (dt > 0)
    t1.inv_dt = 1 / dt;
  else
    t1.inv_dt = 0;
  t1.dtRatio = $.mul(this._inverseTimestep, dt);
  t1.warmStarting = this._warmStarting;
  this._contactManager.collide$0();
  if ($.gtB(t1.dt, 0))
    this.solve$1(t1);
  if (this._continuousPhysics && $.gtB(t1.dt, 0))
    this.solveTimeOfImpact$0();
  if ($.gtB(t1.dt, 0))
    this._inverseTimestep = t1.inv_dt;
  if ((this._flags & 4) === 4)
    this.clearForces$0();
  this._flags = (this._flags & 4294967293) >>> 0;
},
 clearForces$0: function() {
  var body;
  for (var body = this._bodyList; !(body == null); body = body.get$next()) {
    body.get$_force().setZero$0();
    body.set$_torque(0);
  }
},
 get$contactList: function() {
  return this._contactManager.get$contactList();
},
 get$contactCount: function() {
  return this._contactManager.get$contactCount();
},
 get$locked: function() {
  return (this._flags & 2) === 2;
},
 get$jointList: function() {
  return this._jointList;
},
 solve$1: function(timeStep) {
  var t1, b, c, j, stackSize, seed, t2, t3, t4, stackCount, ce, contact, sensorA, sensorB, other, stackCount0, je, i;
  t1 = this.island;
  t1.init$4(this._bodyCount, this._contactManager.get$contactCount(), this._jointCount, this._contactManager.get$contactListener());
  for (b = this._bodyList; !(b == null); b = b.get$next())
    b.set$flags($.and(b.get$flags(), 4294967294));
  for (c = this._contactManager.get$contactList(); !(c == null); c = c.get$next())
    c.set$flags($.and(c.get$flags(), 4294967294));
  for (j = this.get$jointList(); !(j == null); j = j.get$_lib0_next())
    j.set$islandFlag(false);
  stackSize = this._bodyCount;
  if (this.stack.length < stackSize)
    this.stack = $._ListImpl_List(stackSize);
  for (seed = this._bodyList, t2 = this._gravity, t3 = this._allowSleep; !(seed == null); seed = seed.get$next()) {
    if ($.eqB($.and(seed.get$flags(), 1), 1))
      continue;
    if ($.eqB(seed.get$awake(), false) || $.eqB(seed.get$active(), false))
      continue;
    if ($.eqB(seed.get$type(), 0))
      continue;
    t1.clear$0();
    t4 = this.stack;
    if (0 >= t4.length)
      throw $.ioore(0);
    t4[0] = seed;
    seed.set$flags($.or(seed.get$flags(), 1));
    for (stackCount = 1; stackCount > 0;) {
      t4 = this.stack;
      --stackCount;
      if (stackCount >= t4.length)
        throw $.ioore(stackCount);
      b = t4[stackCount];
      t1.addBody$1(b);
      b.set$awake(true);
      if ($.eqB(b.get$type(), 0))
        continue;
      for (ce = b.get$contactList(); !(ce == null); ce = ce.get$next()) {
        contact = ce.get$contact();
        if ($.eqB($.and(contact.get$flags(), 1), 1))
          continue;
        if ($.eqB(contact.get$enabled(), false) || $.eqB(contact.get$touching(), false))
          continue;
        sensorA = contact.get$fixtureA().get$isSensor();
        sensorB = contact.get$fixtureB().get$isSensor();
        if (sensorA === true || sensorB === true)
          continue;
        t1.addContact$1(contact);
        contact.set$flags($.or(contact.get$flags(), 1));
        other = ce.get$other();
        if ($.eqB($.and(other.get$flags(), 1), 1))
          continue;
        t4 = this.stack;
        stackCount0 = stackCount + 1;
        if (stackCount >= t4.length)
          throw $.ioore(stackCount);
        t4[stackCount] = other;
        other.set$flags($.or(other.get$flags(), 1));
        stackCount = stackCount0;
      }
      for (je = b.get$jointList(); !(je == null); je = je.get$next()) {
        if ($.eqB(je.get$joint().get$islandFlag(), true))
          continue;
        other = je.get$other();
        if ($.eqB(other.get$active(), false))
          continue;
        t1.addJoint$1(je.get$joint());
        je.get$joint().set$islandFlag(true);
        if ($.eqB($.and(other.get$flags(), 1), 1))
          continue;
        t4 = this.stack;
        stackCount0 = stackCount + 1;
        if (stackCount >= t4.length)
          throw $.ioore(stackCount);
        t4[stackCount] = other;
        other.set$flags($.or(other.get$flags(), 1));
        stackCount = stackCount0;
      }
    }
    t1.solve$3(timeStep, t2, t3);
    for (i = 0; $.ltB(i, t1.bodyCount); ++i) {
      b = $.index(t1.bodies, i);
      if ($.eqB(b.get$type(), 0))
        b.set$flags($.and(b.get$flags(), 4294967294));
    }
  }
  for (b = this._bodyList; !(b == null); b = b.get$next()) {
    if ($.eqB($.and(b.get$flags(), 1), 0))
      continue;
    if ($.eqB(b.get$type(), 0))
      continue;
    b.synchronizeFixtures$0();
  }
  this._contactManager.findNewContacts$0();
},
 solveTimeOfImpact$0: function() {
  var c, body, t1, t2;
  for (c = this._contactManager.get$contactList(); !(c == null); c = c.get$next()) {
    c.set$flags($.or(c.get$flags(), 4));
    c.set$toiCount(0);
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    t1 = $.eqB($.and(body.get$flags(), 1), 0) || $.eqB(body.get$type(), 1) || $.eqB(body.get$type(), 0);
    t2 = body.get$flags();
    if (t1)
      body.set$flags($.or(t2, 64));
    else
      body.set$flags($.and(t2, 4294967231));
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    if ($.eqB($.and(body.get$flags(), 64), 64))
      continue;
    if ($.eqB(body.get$bullet(), true))
      continue;
    this.solveTimeOfImpactGivenBody$1(body);
    body.set$flags($.or(body.get$flags(), 64));
  }
  for (body = this._bodyList; !(body == null); body = body.get$next()) {
    if ($.eqB($.and(body.get$flags(), 64), 64))
      continue;
    if ($.eqB(body.get$bullet(), false))
      continue;
    this.solveTimeOfImpactGivenBody$1(body);
    body.set$flags($.or(body.get$flags(), 64));
  }
},
 solveTimeOfImpactGivenBody$1: function(body) {
  var bullet, t2, t3, t4, t5, t6, t7, t8, toiContact, toi, toiOther, iter, ce, found, count, other, type, t1, t10, contact, fixtureA, fixtureB, bodyA, bodyB, i;
  bullet = body.get$bullet();
  if (typeof bullet !== 'boolean')
    return this.solveTimeOfImpactGivenBody$1$bailout(1, body, bullet);
  t2 = this.toiOutput;
  t3 = this.toiInput;
  t4 = t3.proxyA;
  t5 = t3.proxyB;
  t6 = t3.sweepA;
  t7 = t3.sweepB;
  t8 = this._pool;
  toiContact = null;
  toi = 1;
  toiOther = null;
  iter = 0;
  while (true) {
    for (ce = body.get$contactList(), found = false, count = 0; !(ce == null); ce = ce.get$next()) {
      if ($.eqB(ce.get$contact(), toiContact))
        continue;
      other = ce.get$other();
      type = other.get$type();
      if (typeof type !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(2, t8, body, bullet, t2, other, type, iter, t3, t4, toi, toiContact, found, t6, count, ce, toiOther, t5, t7);
      if (bullet) {
        t1 = other.get$flags();
        if (t1 !== (t1 | 0))
          return this.solveTimeOfImpactGivenBody$1$bailout(3, t6, body, bullet, t2, other, type, iter, t1, toiContact, t4, toi, toiOther, found, count, t3, ce, t7, t5, t8);
        if ((t1 & 64) === 0)
          continue;
        if (!(type === 0)) {
          t1 = ce.get$contact().get$flags();
          if (t1 !== (t1 | 0))
            return this.solveTimeOfImpactGivenBody$1$bailout(4, count, body, bullet, t1, t2, other, iter, t3, toiContact, t4, toiOther, toi, t6, ce, found, t7, t5, t8);
          t10 = (t1 & 16) !== 0;
          t1 = t10;
        } else
          t1 = false;
        if (t1)
          continue;
      } else if (type === 2)
        continue;
      contact = ce.get$contact();
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(5, t4, body, contact, t1, bullet, t2, t3, other, iter, toiContact, toi, toiOther, t5, found, t6, count, ce, t7, t8);
      if (!t1)
        continue;
      t1 = contact.get$toiCount();
      if (typeof t1 !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(6, body, contact, t7, bullet, t2, other, t1, iter, toiContact, t4, toi, toiOther, found, count, t3, ce, t6, t5, t8);
      if (t1 > 10)
        continue;
      fixtureA = contact.get$fixtureA();
      fixtureB = contact.get$fixtureB();
      if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
        continue;
      bodyA = fixtureA.get$body();
      bodyB = fixtureB.get$body();
      t4.setFromShape$1(fixtureA.get$shape());
      t5.setFromShape$1(fixtureB.get$shape());
      t6.setFrom$1(bodyA.get$sweep());
      t7.setFrom$1(bodyB.get$sweep());
      t3.tMax = toi;
      t8.timeOfImpact.timeOfImpact$2(t2, t3);
      t1 = t2.state;
      if (typeof t1 !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(7, body, contact, t1, t8, bullet, t2, other, iter, toiContact, toi, toiOther, t3, found, count, ce, t4, t6, t5, t7);
      if (t1 === 3) {
        t1 = t2.t;
        if (typeof t1 !== 'number')
          return this.solveTimeOfImpactGivenBody$1$bailout(8, body, contact, t8, bullet, t1, t2, other, iter, toiContact, toi, toiOther, t3, found, count, ce, t4, t6, t5, t7);
        t1 = t1 < toi;
      } else
        t1 = false;
      if (t1) {
        toi = t2.t;
        if (toi !== (toi | 0))
          return this.solveTimeOfImpactGivenBody$1$bailout(9, body, contact, bullet, t2, toi, other, iter, t3, t4, t5, t6, ce, t7, count, t8);
        toiOther = other;
        toiContact = contact;
        found = true;
      }
      ++count;
    }
    ++iter;
    if (!(found && count > 1 && iter < 50))
      break;
  }
  if (toiContact == null) {
    body.advance$1(1);
    return;
  }
  t1 = this.backup;
  t1.setFrom$1(body.get$sweep());
  body.advance$1(toi);
  toiContact.update$1(this._contactManager.get$contactListener());
  t2 = toiContact.get$enabled();
  if (typeof t2 !== 'boolean')
    return this.solveTimeOfImpactGivenBody$1$bailout(10, body, t1, t2, toiContact, toiOther);
  if (!t2) {
    body.get$sweep().setFrom$1(t1);
    this.solveTimeOfImpactGivenBody$1(body);
  }
  t1 = toiContact.get$toiCount();
  if (typeof t1 !== 'number')
    return this.solveTimeOfImpactGivenBody$1$bailout(11, body, toiContact, t1, toiOther);
  toiContact.set$toiCount(t1 + 1);
  t1 = this.contacts;
  if (t1.length < 32)
    this.contacts = $._ListImpl_List(32);
  ce = body.get$contactList();
  count = 0;
  while (true) {
    if (!(!(ce == null) && count < 32))
      break;
    c$0: {
      type = ce.get$other().get$type();
      if (typeof type !== 'number')
        return this.solveTimeOfImpactGivenBody$1$bailout(12, body, toiContact, count, ce, toiOther, type);
      if (type === 2)
        break c$0;
      contact = ce.get$contact();
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(13, body, contact, t1, toiContact, count, ce, toiOther);
      if (!t1)
        break c$0;
      fixtureA = contact.get$fixtureA();
      fixtureB = contact.get$fixtureB();
      if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
        break c$0;
      if (!$.eqB(contact, toiContact))
        contact.update$1(this._contactManager.get$contactListener());
      t1 = contact.get$enabled();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(14, body, contact, count, ce, toiOther, toiContact, t1);
      if (!t1)
        break c$0;
      t1 = contact.get$touching();
      if (typeof t1 !== 'boolean')
        return this.solveTimeOfImpactGivenBody$1$bailout(15, body, contact, t1, count, ce, toiOther, toiContact);
      if (!t1)
        break c$0;
      t1 = this.contacts;
      if (count >= t1.length)
        throw $.ioore(count);
      t1[count] = contact;
      ++count;
    }
    ce = ce.get$next();
  }
  t1 = this.toiSolver;
  t1.initialize$3(this.contacts, count, body);
  for (i = 0; i < 20; ++i)
    if (t1.solve$1(0.75) === true)
      break;
  t1 = toiOther.get$type();
  if (typeof t1 !== 'number')
    return this.solveTimeOfImpactGivenBody$1$bailout(16, t1, toiContact);
  if (!(t1 === 0)) {
    t1 = toiContact.get$flags();
    if (t1 !== (t1 | 0))
      return this.solveTimeOfImpactGivenBody$1$bailout(17, t1, toiContact);
    toiContact.set$flags((t1 | 16) >>> 0);
  }
},
 solveTimeOfImpactGivenBody$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18) {
  switch (state0) {
    case 1:
      bullet = env1;
      body = env0;
      break;
    case 2:
      t7 = env17;
      t5 = env16;
      toiOther = env15;
      ce = env14;
      count = env13;
      t6 = env12;
      found = env11;
      toiContact = env10;
      toi = env9;
      t4 = env8;
      t3 = env7;
      iter = env6;
      type = env5;
      other = env4;
      t2 = env3;
      bullet = env2;
      body = env1;
      t8 = env0;
      break;
    case 3:
      t8 = env18;
      t5 = env17;
      t7 = env16;
      ce = env15;
      t3 = env14;
      count = env13;
      found = env12;
      toiOther = env11;
      toi = env10;
      t4 = env9;
      toiContact = env8;
      t1 = env7;
      iter = env6;
      type = env5;
      other = env4;
      t2 = env3;
      bullet = env2;
      body = env1;
      t6 = env0;
      break;
    case 4:
      t8 = env17;
      t5 = env16;
      t7 = env15;
      found = env14;
      ce = env13;
      t6 = env12;
      toi = env11;
      toiOther = env10;
      t4 = env9;
      toiContact = env8;
      t3 = env7;
      iter = env6;
      other = env5;
      t2 = env4;
      t1 = env3;
      bullet = env2;
      body = env1;
      count = env0;
      break;
    case 5:
      t8 = env18;
      t7 = env17;
      ce = env16;
      count = env15;
      t6 = env14;
      found = env13;
      t5 = env12;
      toiOther = env11;
      toi = env10;
      toiContact = env9;
      iter = env8;
      other = env7;
      t3 = env6;
      t2 = env5;
      bullet = env4;
      t1 = env3;
      contact = env2;
      body = env1;
      t4 = env0;
      break;
    case 6:
      t8 = env18;
      t5 = env17;
      t6 = env16;
      ce = env15;
      t3 = env14;
      count = env13;
      found = env12;
      toiOther = env11;
      toi = env10;
      t4 = env9;
      toiContact = env8;
      iter = env7;
      t1 = env6;
      other = env5;
      t2 = env4;
      bullet = env3;
      t7 = env2;
      contact = env1;
      body = env0;
      break;
    case 7:
      t7 = env18;
      t5 = env17;
      t6 = env16;
      t4 = env15;
      ce = env14;
      count = env13;
      found = env12;
      t3 = env11;
      toiOther = env10;
      toi = env9;
      toiContact = env8;
      iter = env7;
      other = env6;
      t2 = env5;
      bullet = env4;
      t8 = env3;
      t1 = env2;
      contact = env1;
      body = env0;
      break;
    case 8:
      t7 = env18;
      t5 = env17;
      t6 = env16;
      t4 = env15;
      ce = env14;
      count = env13;
      found = env12;
      t3 = env11;
      toiOther = env10;
      toi = env9;
      toiContact = env8;
      iter = env7;
      other = env6;
      t2 = env5;
      t1 = env4;
      bullet = env3;
      t8 = env2;
      contact = env1;
      body = env0;
      break;
    case 9:
      t8 = env14;
      count = env13;
      t7 = env12;
      ce = env11;
      t6 = env10;
      t5 = env9;
      t4 = env8;
      t3 = env7;
      iter = env6;
      other = env5;
      toi = env4;
      t2 = env3;
      bullet = env2;
      contact = env1;
      body = env0;
      break;
    case 10:
      toiOther = env4;
      toiContact = env3;
      t2 = env2;
      t1 = env1;
      body = env0;
      break;
    case 11:
      toiOther = env3;
      t1 = env2;
      toiContact = env1;
      body = env0;
      break;
    case 12:
      type = env5;
      toiOther = env4;
      ce = env3;
      count = env2;
      toiContact = env1;
      body = env0;
      break;
    case 13:
      toiOther = env6;
      ce = env5;
      count = env4;
      toiContact = env3;
      t1 = env2;
      contact = env1;
      body = env0;
      break;
    case 14:
      t1 = env6;
      toiContact = env5;
      toiOther = env4;
      ce = env3;
      count = env2;
      contact = env1;
      body = env0;
      break;
    case 15:
      toiContact = env6;
      toiOther = env5;
      ce = env4;
      count = env3;
      t1 = env2;
      contact = env1;
      body = env0;
      break;
    case 16:
      toiContact = env1;
      t1 = env0;
      break;
    case 17:
      toiContact = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      bullet = body.get$bullet();
    case 1:
      state0 = 0;
      t2 = this.toiOutput;
      t3 = this.toiInput;
      t4 = t3.proxyA;
      t5 = t3.proxyB;
      t6 = t3.sweepA;
      t7 = t3.sweepB;
      t8 = this._pool;
      toiContact = null;
      toi = 1;
      toiOther = null;
      iter = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              ce = body.get$contactList();
              found = false;
              count = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!!(ce == null))
                        break L1;
                    default:
                      c$1: {
                        switch (state0) {
                          case 0:
                            if ($.eqB(ce.get$contact(), toiContact))
                              break c$1;
                            other = ce.get$other();
                            type = other.get$type();
                          case 2:
                            state0 = 0;
                          default:
                            if (state0 === 4 || state0 === 3 || state0 === 0 && $.eqB(bullet, true))
                              switch (state0) {
                                case 0:
                                  t1 = other.get$flags();
                                case 3:
                                  state0 = 0;
                                  if ($.eqB($.and(t1, 64), 0))
                                    break c$1;
                                case 4:
                                  if (state0 === 4 || state0 === 0 && !$.eqB(type, 0))
                                    switch (state0) {
                                      case 0:
                                        t1 = ce.get$contact().get$flags();
                                      case 4:
                                        state0 = 0;
                                        t10 = !$.eqB($.and(t1, 16), 0);
                                        t1 = t10;
                                    }
                                  else
                                    t1 = false;
                                  if (t1)
                                    break c$1;
                              }
                            else if ($.eqB(type, 2))
                              break c$1;
                            contact = ce.get$contact();
                            t1 = contact.get$enabled();
                          case 5:
                            state0 = 0;
                            if ($.eqB(t1, false))
                              break c$1;
                            t1 = contact.get$toiCount();
                          case 6:
                            state0 = 0;
                            if ($.gtB(t1, 10))
                              break c$1;
                            fixtureA = contact.get$fixtureA();
                            fixtureB = contact.get$fixtureB();
                            if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
                              break c$1;
                            bodyA = fixtureA.get$body();
                            bodyB = fixtureB.get$body();
                            t4.setFromShape$1(fixtureA.get$shape());
                            t5.setFromShape$1(fixtureB.get$shape());
                            t6.setFrom$1(bodyA.get$sweep());
                            t7.setFrom$1(bodyB.get$sweep());
                            t3.tMax = toi;
                            t8.timeOfImpact.timeOfImpact$2(t2, t3);
                            t1 = t2.state;
                          case 7:
                            state0 = 0;
                          case 8:
                            if (state0 === 8 || state0 === 0 && $.eqB(t1, 3))
                              switch (state0) {
                                case 0:
                                  t1 = t2.t;
                                case 8:
                                  state0 = 0;
                                  t1 = $.ltB(t1, toi);
                              }
                            else
                              t1 = false;
                          case 9:
                            if (state0 === 9 || state0 === 0 && t1)
                              switch (state0) {
                                case 0:
                                  toi = t2.t;
                                case 9:
                                  state0 = 0;
                                  toiOther = other;
                                  toiContact = contact;
                                  found = true;
                              }
                            ++count;
                        }
                      }
                      ce = ce.get$next();
                  }
              ++iter;
              if (!(found && count > 1 && iter < 50))
                break L0;
          }
      if (toiContact == null) {
        body.advance$1(1);
        return;
      }
      t1 = this.backup;
      t1.setFrom$1(body.get$sweep());
      body.advance$1(toi);
      toiContact.update$1(this._contactManager.get$contactListener());
      t2 = toiContact.get$enabled();
    case 10:
      state0 = 0;
      if ($.eqB(t2, false)) {
        body.get$sweep().setFrom$1(t1);
        this.solveTimeOfImpactGivenBody$1(body);
      }
      t1 = toiContact.get$toiCount();
    case 11:
      state0 = 0;
      toiContact.set$toiCount($.add(t1, 1));
      t1 = this.contacts;
      if (t1.length < 32)
        this.contacts = $._ListImpl_List(32);
      ce = body.get$contactList();
      count = 0;
    case 12:
    case 13:
    case 14:
    case 15:
      L2:
        while (true)
          switch (state0) {
            case 0:
              if (!(!(ce == null) && count < 32))
                break L2;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    type = ce.get$other().get$type();
                  case 12:
                    state0 = 0;
                    if ($.eqB(type, 2))
                      break c$0;
                    contact = ce.get$contact();
                    t1 = contact.get$enabled();
                  case 13:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    fixtureA = contact.get$fixtureA();
                    fixtureB = contact.get$fixtureB();
                    if (fixtureA.get$isSensor() === true || fixtureB.get$isSensor() === true)
                      break c$0;
                    if (!$.eqB(contact, toiContact))
                      contact.update$1(this._contactManager.get$contactListener());
                    t1 = contact.get$enabled();
                  case 14:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    t1 = contact.get$touching();
                  case 15:
                    state0 = 0;
                    if ($.eqB(t1, false))
                      break c$0;
                    t1 = this.contacts;
                    if (count >= t1.length)
                      throw $.ioore(count);
                    t1[count] = contact;
                    ++count;
                }
              }
              ce = ce.get$next();
          }
      t1 = this.toiSolver;
      t1.initialize$3(this.contacts, count, body);
      for (i = 0; i < 20; ++i)
        if (t1.solve$1(0.75) === true)
          break;
      t1 = toiOther.get$type();
    case 16:
      state0 = 0;
    case 17:
      var bullet, body, t2, t3, t4, t5, t6, t7, t8, toiContact, toi, toiOther, iter, ce, found, count, other, type, t1, t10, contact, fixtureA, fixtureB, bodyA, bodyB, i;
      if (state0 === 17 || state0 === 0 && !$.eqB(t1, 0))
        switch (state0) {
          case 0:
            t1 = toiContact.get$flags();
          case 17:
            state0 = 0;
            toiContact.set$flags($.or(t1, 16));
        }
  }
},
 World$3: function(gravity, doSleep, argPool) {
  var t1, t2, i;
  this._contactManager = $.ContactManager$(this);
  for (t1 = this._contactStacks, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $._ListImpl_List(2);
  this._initializeRegisters$0();
}
};

$$.WorldQueryWrapper = {"": ["broadPhase?", "callback"],
 "super": "Object"
};

$$.Contact = {"": ["flags=", "prev=", "next=", "edge1?", "edge2?", "fixtureA?", "fixtureB?", "manifold=", "toiCount="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 init$2: function(fixA, fixB) {
  var t1;
  this.flags = 0;
  this.fixtureA = fixA;
  this.fixtureB = fixB;
  this.manifold.set$pointCount(0);
  this.prev = null;
  this.next = null;
  t1 = this.edge1;
  t1.contact = null;
  t1.prev = null;
  t1.next = null;
  t1.other = null;
  t1 = this.edge2;
  t1.contact = null;
  t1.prev = null;
  t1.next = null;
  t1.other = null;
  this.toiCount = 0;
},
 get$touching: function() {
  return $.eq($.and(this.flags, 2), 2);
},
 get$enabled: function() {
  return $.eq($.and(this.flags, 4), 4);
},
 flagForFiltering$0: function() {
  var t1 = this.flags;
  if (t1 !== (t1 | 0))
    return this.flagForFiltering$0$bailout(1, t1);
  this.flags = (t1 | 8) >>> 0;
},
 flagForFiltering$0$bailout: function(state0, t1) {
  this.flags = $.or(t1, 8);
},
 update$1: function(listener) {
  var t1, t2, t4, wasTouching, t6, sensorA, t7, sensorB, sensor, bodyA, bodyB, xfA, xfB, shapeA, shapeB, touching, t3, i, t5, mp2, id2, j, mp1;
  t1 = this._oldManifold;
  t1.setFrom$1(this.manifold);
  t2 = this.flags;
  if (t2 !== (t2 | 0))
    return this.update$1$bailout(1, listener, t1, t2);
  this.flags = (t2 | 4) >>> 0;
  t4 = this.flags;
  if (t4 !== (t4 | 0))
    return this.update$1$bailout(2, listener, t4, t1);
  wasTouching = (t4 & 2) === 2;
  t6 = this.fixtureA;
  sensorA = t6.get$isSensor();
  t7 = this.fixtureB;
  sensorB = t7.get$isSensor();
  sensor = sensorA === true || sensorB === true;
  bodyA = t6.get$body();
  bodyB = t7.get$body();
  xfA = bodyA.get$originTransform();
  xfB = bodyB.get$originTransform();
  if (sensor) {
    shapeA = t6.get$shape();
    shapeB = t7.get$shape();
    touching = this.pool.collision.testOverlap$4(shapeA, shapeB, xfA, xfB);
    if (typeof touching !== 'boolean')
      return this.update$1$bailout(3, listener, wasTouching, touching, t1, sensor);
    this.manifold.set$pointCount(0);
  } else {
    this.evaluate$3(this.manifold, xfA, xfB);
    t2 = this.manifold.get$pointCount();
    if (typeof t2 !== 'number')
      return this.update$1$bailout(4, listener, bodyA, wasTouching, bodyB, t1, t2, sensor);
    touching = t2 > 0;
    t2 = t1.points;
    t3 = t2.length;
    i = 0;
    while (true) {
      t4 = this.manifold;
      t5 = t4.get$pointCount();
      if (typeof t5 !== 'number')
        return this.update$1$bailout(5, listener, bodyA, i, bodyB, t5, t2, wasTouching, t1, touching, t3, sensor);
      if (!(i < t5))
        break;
      t4 = t4.get$points();
      if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
        return this.update$1$bailout(6, listener, bodyA, wasTouching, i, bodyB, t1, touching, t3, t2, sensor, t4);
      if (i >= t4.length)
        throw $.ioore(i);
      mp2 = t4[i];
      mp2.set$normalImpulse(0);
      mp2.set$tangentImpulse(0);
      id2 = mp2.get$id();
      j = 0;
      while (true) {
        t4 = t1.pointCount;
        if (typeof t4 !== 'number')
          return this.update$1$bailout(7, listener, bodyA, sensor, i, bodyB, t4, t2, mp2, wasTouching, id2, t1, touching, t3, j);
        if (!(j < t4))
          break;
        if (j >= t3)
          throw $.ioore(j);
        mp1 = t2[j];
        if (mp1.get$id().isEqual$1(id2) === true) {
          mp2.set$normalImpulse(mp1.get$normalImpulse());
          mp2.set$tangentImpulse(mp1.get$tangentImpulse());
          break;
        }
        ++j;
      }
      ++i;
    }
    if (!(touching === wasTouching)) {
      bodyA.set$awake(true);
      bodyB.set$awake(true);
    }
  }
  t2 = this.flags;
  if (t2 !== (t2 | 0))
    return this.update$1$bailout(8, listener, wasTouching, touching, t1, touching, t2, sensor);
  if (touching)
    this.flags = (t2 | 2) >>> 0;
  else
    this.flags = (t2 & 4294967293) >>> 0;
  if (listener == null)
    return;
  if (!wasTouching && touching)
    listener.beginContact$1(this);
  if (wasTouching && !touching)
    listener.endContact$1(this);
  if (!sensor && touching)
    listener.preSolve$2(this, t1);
},
 update$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      t2 = env2;
      t1 = env1;
      listener = env0;
      break;
    case 2:
      t1 = env2;
      t4 = env1;
      listener = env0;
      break;
    case 3:
      sensor = env4;
      t1 = env3;
      touching = env2;
      wasTouching = env1;
      listener = env0;
      break;
    case 4:
      sensor = env6;
      t2 = env5;
      t1 = env4;
      bodyB = env3;
      wasTouching = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 5:
      sensor = env10;
      t3 = env9;
      touching = env8;
      t1 = env7;
      wasTouching = env6;
      t2 = env5;
      t4 = env4;
      bodyB = env3;
      i = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 6:
      t4 = env10;
      sensor = env9;
      t2 = env8;
      t3 = env7;
      touching = env6;
      t1 = env5;
      bodyB = env4;
      i = env3;
      wasTouching = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 7:
      j = env13;
      t3 = env12;
      touching = env11;
      t1 = env10;
      id2 = env9;
      wasTouching = env8;
      mp2 = env7;
      t2 = env6;
      t4 = env5;
      bodyB = env4;
      i = env3;
      sensor = env2;
      bodyA = env1;
      listener = env0;
      break;
    case 8:
      sensor = env6;
      t3 = env5;
      t2 = env4;
      t1 = env3;
      touching = env2;
      wasTouching = env1;
      listener = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._oldManifold;
      t1.setFrom$1(this.manifold);
      t2 = this.flags;
    case 1:
      state0 = 0;
      this.flags = $.or(t2, 4);
      t4 = this.flags;
    case 2:
      state0 = 0;
      wasTouching = $.eq($.and(t4, 2), 2);
      t6 = this.fixtureA;
      sensorA = t6.get$isSensor();
      t7 = this.fixtureB;
      sensorB = t7.get$isSensor();
      sensor = sensorA === true || sensorB === true;
      bodyA = t6.get$body();
      bodyB = t7.get$body();
      xfA = bodyA.get$originTransform();
      xfB = bodyB.get$originTransform();
    default:
      if (state0 === 3 || state0 === 0 && sensor)
        switch (state0) {
          case 0:
            shapeA = t6.get$shape();
            shapeB = t7.get$shape();
            touching = this.pool.collision.testOverlap$4(shapeA, shapeB, xfA, xfB);
          case 3:
            state0 = 0;
            this.manifold.set$pointCount(0);
        }
      else
        switch (state0) {
          case 0:
            this.evaluate$3(this.manifold, xfA, xfB);
            t2 = this.manifold.get$pointCount();
          case 4:
            state0 = 0;
            touching = $.gt(t2, 0);
            t2 = t1.points;
            t3 = t2.length;
            i = 0;
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t4 = this.manifold.get$pointCount();
                  case 5:
                    state0 = 0;
                    if (!$.ltB(i, t4))
                      break L0;
                    t4 = this.manifold.get$points();
                  case 6:
                    state0 = 0;
                    mp2 = $.index(t4, i);
                    mp2.set$normalImpulse(0);
                    mp2.set$tangentImpulse(0);
                    id2 = mp2.get$id();
                    j = 0;
                  case 7:
                    L1:
                      while (true)
                        switch (state0) {
                          case 0:
                            t4 = t1.pointCount;
                          case 7:
                            state0 = 0;
                            if (!$.ltB(j, t4))
                              break L1;
                            if (j >= t3)
                              throw $.ioore(j);
                            mp1 = t2[j];
                            if (mp1.get$id().isEqual$1(id2) === true) {
                              mp2.set$normalImpulse(mp1.get$normalImpulse());
                              mp2.set$tangentImpulse(mp1.get$tangentImpulse());
                              break L1;
                            }
                            ++j;
                        }
                    ++i;
                }
            if (!$.eqB(touching, wasTouching)) {
              bodyA.set$awake(true);
              bodyB.set$awake(true);
            }
        }
      t2 = touching === true;
      t3 = this.flags;
    case 8:
      var t1, t2, listener, t4, wasTouching, t6, sensorA, t7, sensorB, sensor, bodyA, bodyB, xfA, xfB, shapeA, shapeB, touching, t3, i, mp2, id2, j, mp1;
      state0 = 0;
      if (t2)
        this.flags = $.or(t3, 2);
      else
        this.flags = $.and(t3, 4294967293);
      if (listener == null)
        return;
      if ($.eqB(wasTouching, false) && $.eqB(touching, true))
        listener.beginContact$1(this);
      if ($.eqB(wasTouching, true) && $.eqB(touching, false))
        listener.endContact$1(this);
      if (!sensor && t2)
        listener.preSolve$2(this, t1);
  }
}
};

$$.ContactConstraint = {"": ["points?", "localNormal?", "localPoint?", "normal?", "normalMass?", "K?", "bodyA=", "bodyB=", "type=", "radius=", "friction=", "restitution=", "pointCount=", "manifold="],
 "super": "Object",
 setFrom$1: function(cp) {
  var t1, t2, i, t3, t4;
  this.pointCount = cp.get$pointCount();
  this.localNormal.setFrom$1(cp.get$localNormal());
  this.localPoint.setFrom$1(cp.get$localPoint());
  this.normal.setFrom$1(cp.get$normal());
  this.normalMass.setFrom$1(cp.get$normalMass());
  this.K.setFrom$1(cp.get$K());
  this.bodyA = cp.get$bodyA();
  this.bodyB = cp.get$bodyB();
  this.type = cp.get$type();
  this.radius = cp.get$radius();
  this.friction = cp.get$friction();
  this.restitution = cp.get$restitution();
  this.manifold = cp.get$manifold();
  t1 = this.points;
  t2 = t1.length;
  i = 0;
  while (true) {
    t3 = cp.get$pointCount();
    if (typeof t3 !== 'number')
      return this.setFrom$1$bailout(1, cp, i, t3, t1, t2);
    if (!(i < t3))
      break;
    if (i >= t2)
      throw $.ioore(i);
    t3 = t1[i];
    t4 = cp.get$points();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(2, t4, cp, i, t1, t2, t3);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
    ++i;
  }
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t2 = env4;
      t1 = env3;
      t3 = env2;
      i = env1;
      cp = env0;
      break;
    case 2:
      t3 = env5;
      t2 = env4;
      t1 = env3;
      i = env2;
      cp = env1;
      t4 = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.pointCount = cp.get$pointCount();
      this.localNormal.setFrom$1(cp.get$localNormal());
      this.localPoint.setFrom$1(cp.get$localPoint());
      this.normal.setFrom$1(cp.get$normal());
      this.normalMass.setFrom$1(cp.get$normalMass());
      this.K.setFrom$1(cp.get$K());
      this.bodyA = cp.get$bodyA();
      this.bodyB = cp.get$bodyB();
      this.type = cp.get$type();
      this.radius = cp.get$radius();
      this.friction = cp.get$friction();
      this.restitution = cp.get$restitution();
      this.manifold = cp.get$manifold();
      t1 = this.points;
      t2 = t1.length;
      i = 0;
    default:
      var t1, t2, i, t3, cp, t4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = cp.get$pointCount();
            case 1:
              state0 = 0;
              if (!$.ltB(i, t3))
                break L0;
              if (i >= t2)
                throw $.ioore(i);
              t3 = t1[i];
              t4 = cp.get$points();
            case 2:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
  }
},
 toString$0: function() {
  return 'localNormal: "' + $.S(this.localNormal) + '", localPoint: "' + $.S(this.localPoint) + '" ' + 'normal: "' + $.S(this.normal) + '", radius: "' + $.S(this.radius) + '" friction: "' + $.S(this.friction) + '" ' + 'restitution: "' + $.S(this.restitution) + '", pointCount: "' + $.S(this.pointCount) + '"';
},
 ContactConstraint$0: function() {
  var t1, t2, i, t3;
  for (t1 = this.points, t2 = t1.length, i = 0; i < 2; ++i) {
    t3 = $.ContactConstraintPoint$();
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = t3;
  }
}
};

$$.ContactConstraintPoint = {"": ["localPoint?", "rA?", "rB?", "normalImpulse=", "tangentImpulse=", "normalMass=", "tangentMass=", "velocityBias="],
 "super": "Object",
 setFrom$1: function(cp) {
  this.localPoint.setFrom$1(cp.get$localPoint());
  this.rA.setFrom$1(cp.get$rA());
  this.rB.setFrom$1(cp.get$rB());
  this.normalImpulse = cp.get$normalImpulse();
  this.tangentImpulse = cp.get$tangentImpulse();
  this.normalMass = cp.get$normalMass();
  this.tangentMass = cp.get$tangentMass();
  this.velocityBias = cp.get$velocityBias();
},
 toString$0: function() {
  return 'normal impulse: ' + $.S(this.normalImpulse) + ', tangentImpulse: ' + $.S(this.tangentImpulse) + ', normalMass: ' + $.S(this.normalMass) + ', tangentMass: ' + $.S(this.tangentMass) + ', velocityBias: ' + $.S(this.velocityBias) + ', localPoint: ' + $.S(this.localPoint) + ', rA: ' + $.S(this.rA) + ', rB: ' + $.S(this.rB);
}
};

$$.ContactEdge = {"": ["other=", "contact=", "prev=", "next="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); }
};

$$.CircleContact = {"": ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(0, fA.get$type(), null);
  $.Expect_equals(0, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collideCircles$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.ContactRegister = {"": ["creator?", "primary?"],
 "super": "Object"
};

$$.ContactSolver = {"": ["constraints?", "constraintCount", "worldManifold", "tangent", "temp1", "temp2", "P", "dv", "dv1", "dv2", "x?", "d", "P1", "P2", "psolver", "rA?", "rB?"],
 "super": "Object",
 init$3: function(contacts, contactCount, impulseRatio) {
  var old, i, t1, t2, t3, t4, t5, t6, t7, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, friction, restitution, vA, vB, wA, wB, t11, cc, t8, t9, t10, j, cp, ccp, t12, t13, rnA, rnB, kNormal, t14, rtA, rtB, kTangent, t15, t16, t17, t18, t19, t20, a, vRel, ccp1, ccp2, invMassA, invIA, invMassB, invIB, rn1A, rn1B, rn2A, rn2B, k11, k22, k12;
  if (typeof contacts !== 'string' && (typeof contacts !== 'object' || contacts === null || contacts.constructor !== Array && !contacts.is$JavaScriptIndexingBehavior()))
    return this.init$3$bailout(1, contacts, contactCount, impulseRatio);
  if (typeof impulseRatio !== 'number')
    return this.init$3$bailout(1, contacts, contactCount, impulseRatio);
  this.constraintCount = contactCount;
  if ($.ltB(this.constraints.length, contactCount)) {
    old = this.constraints;
    this.constraints = $._ListImpl_List($.max(old.length * 2, this.constraintCount));
    $.setRange$3(this.constraints, 0, old.length, old);
    for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
      t2 = $.ContactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (t1 = this.worldManifold, t2 = t1.points, t3 = t2.length, t4 = this.tangent, t5 = this.temp2, t6 = this.temp1, t7 = t1.normal, i = 0; $.ltB(i, this.constraintCount); ++i) {
    if (i >= contacts.length)
      throw $.ioore(i);
    contact = contacts[i];
    fixtureA = contact.get$fixtureA();
    fixtureB = contact.get$fixtureB();
    shapeA = fixtureA.get$shape();
    shapeB = fixtureB.get$shape();
    radiusA = shapeA.get$radius();
    radiusB = shapeB.get$radius();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    manifold = contact.get$manifold();
    friction = $.sqrt($.mul(fixtureA.get$friction(), fixtureB.get$friction()));
    restitution = $.Settings_mixRestitution(fixtureA.get$restitution(), fixtureB.get$restitution());
    if (typeof restitution !== 'number')
      return this.init$3$bailout(2, restitution, t4, impulseRatio, contacts, i, t3, t5, radiusA, radiusB, t6, bodyB, manifold, bodyA, t7, t2, friction, t1);
    vA = bodyA.get$linearVelocity();
    vB = bodyB.get$linearVelocity();
    wA = bodyA.get$angularVelocity();
    if (typeof wA !== 'number')
      return this.init$3$bailout(3, restitution, vA, vB, wA, t4, impulseRatio, i, contacts, t3, t5, radiusA, radiusB, t6, bodyB, manifold, bodyA, t7, t2, friction, t1);
    wB = bodyB.get$angularVelocity();
    if (typeof wB !== 'number')
      return this.init$3$bailout(4, restitution, vA, vB, wA, wB, impulseRatio, i, t4, contacts, t3, t5, radiusA, radiusB, t6, bodyB, manifold, bodyA, t7, t2, friction, t1);
    t1.initialize$5(manifold, bodyA.get$originTransform(), radiusA, bodyB.get$originTransform(), radiusB);
    t11 = this.constraints;
    if (i >= t11.length)
      throw $.ioore(i);
    cc = t11[i];
    cc.set$bodyA(bodyA);
    cc.set$bodyB(bodyB);
    cc.set$manifold(manifold);
    t11 = t7.x;
    cc.get$normal().set$x(t11);
    t11 = t7.y;
    cc.get$normal().set$y(t11);
    cc.set$pointCount(manifold.get$pointCount());
    cc.set$friction(friction);
    cc.set$restitution(restitution);
    t11 = manifold.get$localNormal().get$x();
    cc.get$localNormal().set$x(t11);
    t11 = manifold.get$localNormal().get$y();
    cc.get$localNormal().set$y(t11);
    t11 = manifold.get$localPoint().get$x();
    cc.get$localPoint().set$x(t11);
    t11 = manifold.get$localPoint().get$y();
    cc.get$localPoint().set$y(t11);
    cc.set$radius($.add(radiusA, radiusB));
    cc.set$type(manifold.get$type());
    for (t8 = -restitution, t9 = -wA, t10 = -wB, j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
      cp = $.index(manifold.get$points(), j);
      ccp = $.index(cc.get$points(), j);
      t11 = cp.get$normalImpulse();
      if (typeof t11 !== 'number')
        throw $.iae(t11);
      ccp.set$normalImpulse(impulseRatio * t11);
      t12 = cp.get$tangentImpulse();
      if (typeof t12 !== 'number')
        throw $.iae(t12);
      ccp.set$tangentImpulse(impulseRatio * t12);
      t13 = cp.get$localPoint().get$x();
      ccp.get$localPoint().set$x(t13);
      t13 = cp.get$localPoint().get$y();
      ccp.get$localPoint().set$y(t13);
      if (j >= t3)
        throw $.ioore(j);
      t13 = $.sub(t2[j].get$x(), bodyA.get$sweep().get$center().get$x());
      ccp.get$rA().set$x(t13);
      t13 = $.sub(t2[j].get$y(), bodyA.get$sweep().get$center().get$y());
      ccp.get$rA().set$y(t13);
      t13 = $.sub(t2[j].get$x(), bodyB.get$sweep().get$center().get$x());
      ccp.get$rB().set$x(t13);
      t13 = $.sub(t2[j].get$y(), bodyB.get$sweep().get$center().get$y());
      ccp.get$rB().set$y(t13);
      rnA = $.sub($.mul(ccp.get$rA().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rA().get$y(), cc.get$normal().get$x()));
      rnB = $.sub($.mul(ccp.get$rB().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rB().get$y(), cc.get$normal().get$x()));
      rnA = $.mul(rnA, rnA);
      rnB = $.mul(rnB, rnB);
      kNormal = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rnA)), $.mul(bodyB.get$invInertia(), rnB));
      if (typeof kNormal !== 'number')
        throw $.iae(kNormal);
      ccp.set$normalMass(1 / kNormal);
      t13 = cc.get$normal().get$y();
      if (typeof t13 !== 'number')
        throw $.iae(t13);
      t4.x = 1 * t13;
      t14 = cc.get$normal().get$x();
      if (typeof t14 !== 'number')
        throw $.iae(t14);
      t4.y = -1 * t14;
      rtA = $.sub($.mul(ccp.get$rA().get$x(), t4.y), $.mul(ccp.get$rA().get$y(), t4.x));
      rtB = $.sub($.mul(ccp.get$rB().get$x(), t4.y), $.mul(ccp.get$rB().get$y(), t4.x));
      rtA = $.mul(rtA, rtA);
      rtB = $.mul(rtB, rtB);
      kTangent = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rtA)), $.mul(bodyB.get$invInertia(), rtB));
      if (typeof kTangent !== 'number')
        throw $.iae(kTangent);
      ccp.set$tangentMass(1 / kTangent);
      ccp.set$velocityBias(0);
      t15 = ccp.get$rA().get$y();
      if (typeof t15 !== 'number')
        throw $.iae(t15);
      t5.x = t9 * t15;
      t16 = ccp.get$rA().get$x();
      if (typeof t16 !== 'number')
        throw $.iae(t16);
      t5.y = wA * t16;
      t17 = ccp.get$rB().get$y();
      if (typeof t17 !== 'number')
        throw $.iae(t17);
      t17 = t10 * t17;
      t18 = vB.get$x();
      if (typeof t18 !== 'number')
        throw $.iae(t18);
      t18 = t17 + t18;
      t17 = vA.get$x();
      if (typeof t17 !== 'number')
        throw $.iae(t17);
      t17 = t18 - t17;
      t18 = t5.x;
      if (typeof t18 !== 'number')
        throw $.iae(t18);
      t6.x = t17 - t18;
      t19 = ccp.get$rB().get$x();
      if (typeof t19 !== 'number')
        throw $.iae(t19);
      t19 = wB * t19;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        throw $.iae(t20);
      t20 = t19 + t20;
      t19 = vA.get$y();
      if (typeof t19 !== 'number')
        throw $.iae(t19);
      t19 = t20 - t19;
      t20 = t5.y;
      if (typeof t20 !== 'number')
        throw $.iae(t20);
      t6.y = t19 - t20;
      a = cc.get$normal();
      vRel = $.add($.mul(a.get$x(), t6.x), $.mul(a.get$y(), t6.y));
      if ($.ltB(vRel, -1)) {
        if (typeof vRel !== 'number')
          throw $.iae(vRel);
        ccp.set$velocityBias(t8 * vRel);
      }
    }
    if ($.eqB(cc.get$pointCount(), 2)) {
      ccp1 = $.index(cc.get$points(), 0);
      ccp2 = $.index(cc.get$points(), 1);
      invMassA = bodyA.get$invMass();
      invIA = bodyA.get$invInertia();
      invMassB = bodyB.get$invMass();
      invIB = bodyB.get$invInertia();
      t8 = ccp1.get$rA();
      t9 = cc.get$normal();
      rn1A = $.sub($.mul(t8.get$x(), t9.get$y()), $.mul(t8.get$y(), t9.get$x()));
      t10 = ccp1.get$rB();
      t11 = cc.get$normal();
      rn1B = $.sub($.mul(t10.get$x(), t11.get$y()), $.mul(t10.get$y(), t11.get$x()));
      t12 = ccp2.get$rA();
      t13 = cc.get$normal();
      rn2A = $.sub($.mul(t12.get$x(), t13.get$y()), $.mul(t12.get$y(), t13.get$x()));
      t14 = ccp2.get$rB();
      t15 = cc.get$normal();
      rn2B = $.sub($.mul(t14.get$x(), t15.get$y()), $.mul(t14.get$y(), t15.get$x()));
      k11 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn1A)), $.mul($.mul(invIB, rn1B), rn1B));
      k22 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn2A), rn2A)), $.mul($.mul(invIB, rn2B), rn2B));
      k12 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn2A)), $.mul($.mul(invIB, rn1B), rn2B));
      t8 = $.mul(k11, k11);
      t9 = $.sub($.mul(k11, k22), $.mul(k12, k12));
      if (typeof t9 !== 'number')
        throw $.iae(t9);
      if ($.ltB(t8, 100 * t9)) {
        cc.get$K().get$col1().set$x(k11);
        cc.get$K().get$col1().set$y(k12);
        cc.get$K().get$col2().set$x(k12);
        cc.get$K().get$col2().set$y(k22);
        t8 = cc.get$K().get$col1().get$x();
        cc.get$normalMass().get$col1().set$x(t8);
        t8 = cc.get$K().get$col1().get$y();
        cc.get$normalMass().get$col1().set$y(t8);
        t8 = cc.get$K().get$col2().get$x();
        cc.get$normalMass().get$col2().set$x(t8);
        t8 = cc.get$K().get$col2().get$y();
        cc.get$normalMass().get$col2().set$y(t8);
        cc.get$normalMass().invertLocal$0();
      } else
        cc.set$pointCount(1);
    }
  }
},
 init$3$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20) {
  switch (state0) {
    case 1:
      impulseRatio = env2;
      contactCount = env1;
      contacts = env0;
      break;
    case 2:
      t1 = env16;
      friction = env15;
      t2 = env14;
      t7 = env13;
      bodyA = env12;
      manifold = env11;
      bodyB = env10;
      t6 = env9;
      radiusB = env8;
      radiusA = env7;
      t5 = env6;
      t3 = env5;
      i = env4;
      contacts = env3;
      impulseRatio = env2;
      t4 = env1;
      restitution = env0;
      break;
    case 3:
      t1 = env19;
      friction = env18;
      t2 = env17;
      t7 = env16;
      bodyA = env15;
      manifold = env14;
      bodyB = env13;
      t6 = env12;
      radiusB = env11;
      radiusA = env10;
      t5 = env9;
      t3 = env8;
      contacts = env7;
      i = env6;
      impulseRatio = env5;
      t4 = env4;
      wA = env3;
      vB = env2;
      vA = env1;
      restitution = env0;
      break;
    case 4:
      t1 = env20;
      friction = env19;
      t2 = env18;
      t7 = env17;
      bodyA = env16;
      manifold = env15;
      bodyB = env14;
      t6 = env13;
      radiusB = env12;
      radiusA = env11;
      t5 = env10;
      t3 = env9;
      contacts = env8;
      t4 = env7;
      i = env6;
      impulseRatio = env5;
      wB = env4;
      wA = env3;
      vB = env2;
      vA = env1;
      restitution = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      this.constraintCount = contactCount;
      if ($.ltB(this.constraints.length, contactCount)) {
        old = this.constraints;
        this.constraints = $._ListImpl_List($.max(old.length * 2, this.constraintCount));
        $.setRange$3(this.constraints, 0, old.length, old);
        for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
          t2 = $.ContactConstraint$();
          if (i >= t1.length)
            throw $.ioore(i);
          t1[i] = t2;
        }
      }
      t1 = this.worldManifold;
      t2 = t1.points;
      t3 = t2.length;
      t4 = this.tangent;
      t5 = this.temp2;
      t6 = this.temp1;
      t7 = t1.normal;
      i = 0;
    default:
      var impulseRatio, contactCount, contacts, old, i, t1, t2, t3, t4, t5, t6, t7, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, friction, restitution, vA, vB, wA, wB, t11, cc, j, cp, ccp, t8, rnA, rnB, kNormal, t9, rtA, rtB, kTangent, a, vRel, ccp1, ccp2, invMassA, invIA, invMassB, invIB, rn1A, t10, rn1B, t12, t13, rn2A, t14, t15, rn2B, k11, k22, k12;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, this.constraintCount))
                break L0;
              contact = $.index(contacts, i);
              fixtureA = contact.get$fixtureA();
              fixtureB = contact.get$fixtureB();
              shapeA = fixtureA.get$shape();
              shapeB = fixtureB.get$shape();
              radiusA = shapeA.get$radius();
              radiusB = shapeB.get$radius();
              bodyA = fixtureA.get$body();
              bodyB = fixtureB.get$body();
              manifold = contact.get$manifold();
              friction = $.sqrt($.mul(fixtureA.get$friction(), fixtureB.get$friction()));
              restitution = $.Settings_mixRestitution(fixtureA.get$restitution(), fixtureB.get$restitution());
            case 2:
              state0 = 0;
              vA = bodyA.get$linearVelocity();
              vB = bodyB.get$linearVelocity();
              wA = bodyA.get$angularVelocity();
            case 3:
              state0 = 0;
              wB = bodyB.get$angularVelocity();
            case 4:
              state0 = 0;
              t1.initialize$5(manifold, bodyA.get$originTransform(), radiusA, bodyB.get$originTransform(), radiusB);
              t11 = this.constraints;
              if (i >= t11.length)
                throw $.ioore(i);
              cc = t11[i];
              cc.set$bodyA(bodyA);
              cc.set$bodyB(bodyB);
              cc.set$manifold(manifold);
              t11 = t7.x;
              cc.get$normal().set$x(t11);
              t11 = t7.y;
              cc.get$normal().set$y(t11);
              cc.set$pointCount(manifold.get$pointCount());
              cc.set$friction(friction);
              cc.set$restitution(restitution);
              t11 = manifold.get$localNormal().get$x();
              cc.get$localNormal().set$x(t11);
              t11 = manifold.get$localNormal().get$y();
              cc.get$localNormal().set$y(t11);
              t11 = manifold.get$localPoint().get$x();
              cc.get$localPoint().set$x(t11);
              t11 = manifold.get$localPoint().get$y();
              cc.get$localPoint().set$y(t11);
              cc.set$radius($.add(radiusA, radiusB));
              cc.set$type(manifold.get$type());
              for (j = 0; $.ltB(j, cc.get$pointCount()); ++j) {
                cp = $.index(manifold.get$points(), j);
                ccp = $.index(cc.get$points(), j);
                ccp.set$normalImpulse($.mul(impulseRatio, cp.get$normalImpulse()));
                ccp.set$tangentImpulse($.mul(impulseRatio, cp.get$tangentImpulse()));
                t8 = cp.get$localPoint().get$x();
                ccp.get$localPoint().set$x(t8);
                t8 = cp.get$localPoint().get$y();
                ccp.get$localPoint().set$y(t8);
                if (j >= t3)
                  throw $.ioore(j);
                t8 = $.sub(t2[j].get$x(), bodyA.get$sweep().get$center().get$x());
                ccp.get$rA().set$x(t8);
                t8 = $.sub(t2[j].get$y(), bodyA.get$sweep().get$center().get$y());
                ccp.get$rA().set$y(t8);
                t8 = $.sub(t2[j].get$x(), bodyB.get$sweep().get$center().get$x());
                ccp.get$rB().set$x(t8);
                t8 = $.sub(t2[j].get$y(), bodyB.get$sweep().get$center().get$y());
                ccp.get$rB().set$y(t8);
                rnA = $.sub($.mul(ccp.get$rA().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rA().get$y(), cc.get$normal().get$x()));
                rnB = $.sub($.mul(ccp.get$rB().get$x(), cc.get$normal().get$y()), $.mul(ccp.get$rB().get$y(), cc.get$normal().get$x()));
                rnA = $.mul(rnA, rnA);
                rnB = $.mul(rnB, rnB);
                kNormal = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rnA)), $.mul(bodyB.get$invInertia(), rnB));
                if (typeof kNormal !== 'number')
                  throw $.iae(kNormal);
                ccp.set$normalMass(1 / kNormal);
                t8 = cc.get$normal().get$y();
                if (typeof t8 !== 'number')
                  throw $.iae(t8);
                t4.x = 1 * t8;
                t9 = cc.get$normal().get$x();
                if (typeof t9 !== 'number')
                  throw $.iae(t9);
                t4.y = -1 * t9;
                rtA = $.sub($.mul(ccp.get$rA().get$x(), t4.y), $.mul(ccp.get$rA().get$y(), t4.x));
                rtB = $.sub($.mul(ccp.get$rB().get$x(), t4.y), $.mul(ccp.get$rB().get$y(), t4.x));
                rtA = $.mul(rtA, rtA);
                rtB = $.mul(rtB, rtB);
                kTangent = $.add($.add($.add(bodyA.get$invMass(), bodyB.get$invMass()), $.mul(bodyA.get$invInertia(), rtA)), $.mul(bodyB.get$invInertia(), rtB));
                if (typeof kTangent !== 'number')
                  throw $.iae(kTangent);
                ccp.set$tangentMass(1 / kTangent);
                ccp.set$velocityBias(0);
                t5.x = $.mul($.neg(wA), ccp.get$rA().get$y());
                t5.y = $.mul(wA, ccp.get$rA().get$x());
                t6.x = $.sub($.sub($.add($.mul($.neg(wB), ccp.get$rB().get$y()), vB.get$x()), vA.get$x()), t5.x);
                t6.y = $.sub($.sub($.add($.mul(wB, ccp.get$rB().get$x()), vB.get$y()), vA.get$y()), t5.y);
                a = cc.get$normal();
                vRel = $.add($.mul(a.get$x(), t6.x), $.mul(a.get$y(), t6.y));
                if ($.ltB(vRel, -1))
                  ccp.set$velocityBias($.mul($.neg(restitution), vRel));
              }
              if ($.eqB(cc.get$pointCount(), 2)) {
                ccp1 = $.index(cc.get$points(), 0);
                ccp2 = $.index(cc.get$points(), 1);
                invMassA = bodyA.get$invMass();
                invIA = bodyA.get$invInertia();
                invMassB = bodyB.get$invMass();
                invIB = bodyB.get$invInertia();
                t8 = ccp1.get$rA();
                t9 = cc.get$normal();
                rn1A = $.sub($.mul(t8.get$x(), t9.get$y()), $.mul(t8.get$y(), t9.get$x()));
                t10 = ccp1.get$rB();
                t11 = cc.get$normal();
                rn1B = $.sub($.mul(t10.get$x(), t11.get$y()), $.mul(t10.get$y(), t11.get$x()));
                t12 = ccp2.get$rA();
                t13 = cc.get$normal();
                rn2A = $.sub($.mul(t12.get$x(), t13.get$y()), $.mul(t12.get$y(), t13.get$x()));
                t14 = ccp2.get$rB();
                t15 = cc.get$normal();
                rn2B = $.sub($.mul(t14.get$x(), t15.get$y()), $.mul(t14.get$y(), t15.get$x()));
                k11 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn1A)), $.mul($.mul(invIB, rn1B), rn1B));
                k22 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn2A), rn2A)), $.mul($.mul(invIB, rn2B), rn2B));
                k12 = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rn1A), rn2A)), $.mul($.mul(invIB, rn1B), rn2B));
                t8 = $.mul(k11, k11);
                t9 = $.sub($.mul(k11, k22), $.mul(k12, k12));
                if (typeof t9 !== 'number')
                  throw $.iae(t9);
                if ($.ltB(t8, 100 * t9)) {
                  cc.get$K().get$col1().set$x(k11);
                  cc.get$K().get$col1().set$y(k12);
                  cc.get$K().get$col2().set$x(k12);
                  cc.get$K().get$col2().set$y(k22);
                  t8 = cc.get$K().get$col1().get$x();
                  cc.get$normalMass().get$col1().set$x(t8);
                  t8 = cc.get$K().get$col1().get$y();
                  cc.get$normalMass().get$col1().set$y(t8);
                  t8 = cc.get$K().get$col2().get$x();
                  cc.get$normalMass().get$col2().set$x(t8);
                  t8 = cc.get$K().get$col2().get$y();
                  cc.get$normalMass().get$col2().set$y(t8);
                  cc.get$normalMass().invertLocal$0();
                } else
                  cc.set$pointCount(1);
              }
              ++i;
          }
  }
},
 warmStart$0: function() {
  var t1, i, t2, c, bodyA, bodyB, invMassA, invIA, invMassB, invIB, normal, j, ccp, Px, Py, t3, t4, t5, t6;
  for (t1 = this.tangent, i = 0; $.ltB(i, this.constraintCount); ++i) {
    t2 = this.constraints;
    if (i >= t2.length)
      throw $.ioore(i);
    c = t2[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    invMassA = bodyA.get$invMass();
    if (typeof invMassA !== 'number')
      return this.warmStart$0$bailout(1, invMassA, bodyA, i, c, t1, bodyB);
    invIA = bodyA.get$invInertia();
    if (typeof invIA !== 'number')
      return this.warmStart$0$bailout(2, invMassA, invIA, bodyA, i, c, t1, bodyB);
    invMassB = bodyB.get$invMass();
    if (typeof invMassB !== 'number')
      return this.warmStart$0$bailout(3, invMassA, invIA, invMassB, i, bodyB, c, t1, bodyA);
    invIB = bodyB.get$invInertia();
    if (typeof invIB !== 'number')
      return this.warmStart$0$bailout(4, invMassA, invIA, invMassB, invIB, i, bodyB, c, t1, bodyA);
    normal = c.get$normal();
    $.Vector_crossVectorAndNumToOut(normal, 1, t1);
    for (j = 0; $.ltB(j, c.get$pointCount()); ++j) {
      ccp = $.index(c.get$points(), j);
      Px = $.add($.mul(ccp.get$normalImpulse(), normal.get$x()), $.mul(ccp.get$tangentImpulse(), t1.x));
      Py = $.add($.mul(ccp.get$normalImpulse(), normal.get$y()), $.mul(ccp.get$tangentImpulse(), t1.y));
      t2 = bodyA.get$angularVelocity();
      t3 = $.sub($.mul(ccp.get$rA().get$x(), Py), $.mul(ccp.get$rA().get$y(), Px));
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      bodyA.set$angularVelocity($.sub(t2, invIA * t3));
      t4 = bodyA.get$linearVelocity();
      t4.set$x($.sub(t4.get$x(), $.mul(Px, invMassA)));
      t4 = bodyA.get$linearVelocity();
      t4.set$y($.sub(t4.get$y(), $.mul(Py, invMassA)));
      t4 = bodyB.get$angularVelocity();
      t5 = $.sub($.mul(ccp.get$rB().get$x(), Py), $.mul(ccp.get$rB().get$y(), Px));
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      bodyB.set$angularVelocity($.add(t4, invIB * t5));
      t6 = bodyB.get$linearVelocity();
      t6.set$x($.add(t6.get$x(), $.mul(Px, invMassB)));
      t6 = bodyB.get$linearVelocity();
      t6.set$y($.add(t6.get$y(), $.mul(Py, invMassB)));
    }
  }
},
 warmStart$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      bodyB = env5;
      t1 = env4;
      c = env3;
      i = env2;
      bodyA = env1;
      invMassA = env0;
      break;
    case 2:
      bodyB = env6;
      t1 = env5;
      c = env4;
      i = env3;
      bodyA = env2;
      invIA = env1;
      invMassA = env0;
      break;
    case 3:
      bodyA = env7;
      t1 = env6;
      c = env5;
      bodyB = env4;
      i = env3;
      invMassB = env2;
      invIA = env1;
      invMassA = env0;
      break;
    case 4:
      bodyA = env8;
      t1 = env7;
      c = env6;
      bodyB = env5;
      i = env4;
      invIB = env3;
      invMassB = env2;
      invIA = env1;
      invMassA = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.tangent;
      i = 0;
    default:
      var t1, i, t2, c, bodyA, bodyB, invMassA, invIA, invMassB, invIB, normal, j, ccp, Px, Py;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, this.constraintCount))
                break L0;
              t2 = this.constraints;
              if (i >= t2.length)
                throw $.ioore(i);
              c = t2[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              invMassA = bodyA.get$invMass();
            case 1:
              state0 = 0;
              invIA = bodyA.get$invInertia();
            case 2:
              state0 = 0;
              invMassB = bodyB.get$invMass();
            case 3:
              state0 = 0;
              invIB = bodyB.get$invInertia();
            case 4:
              state0 = 0;
              normal = c.get$normal();
              $.Vector_crossVectorAndNumToOut(normal, 1, t1);
              for (j = 0; $.ltB(j, c.get$pointCount()); ++j) {
                ccp = $.index(c.get$points(), j);
                Px = $.add($.mul(ccp.get$normalImpulse(), normal.get$x()), $.mul(ccp.get$tangentImpulse(), t1.x));
                Py = $.add($.mul(ccp.get$normalImpulse(), normal.get$y()), $.mul(ccp.get$tangentImpulse(), t1.y));
                bodyA.set$angularVelocity($.sub(bodyA.get$angularVelocity(), $.mul(invIA, $.sub($.mul(ccp.get$rA().get$x(), Py), $.mul(ccp.get$rA().get$y(), Px)))));
                t2 = bodyA.get$linearVelocity();
                t2.set$x($.sub(t2.get$x(), $.mul(Px, invMassA)));
                t2 = bodyA.get$linearVelocity();
                t2.set$y($.sub(t2.get$y(), $.mul(Py, invMassA)));
                bodyB.set$angularVelocity($.add(bodyB.get$angularVelocity(), $.mul(invIB, $.sub($.mul(ccp.get$rB().get$x(), Py), $.mul(ccp.get$rB().get$y(), Px)))));
                t2 = bodyB.get$linearVelocity();
                t2.set$x($.add(t2.get$x(), $.mul(Px, invMassB)));
                t2 = bodyB.get$linearVelocity();
                t2.set$y($.add(t2.get$y(), $.mul(Py, invMassB)));
              }
              ++i;
          }
  }
},
 solveVelocityConstraints$0: function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, i, t11, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t17, t18, friction, j, ccp, a, t13, t20, t24, t26, t29, vt, lambda, maxFriction, newImpulse, t34, Px, Py, t38, t40, t41, t44, t46, t48, t49, t12, t14, t15, a1, b, t28, t30, vn, t33, t16, t19, t21, t23, cp1, cp2, t25, t32, t36, t39, vn1, vn2, t47, t51, t54, t56, t57, t59, t62, t64, t66, t68, t70, t22, t27, t31;
  t1 = this.dv;
  t2 = this.tangent;
  t3 = this.d;
  t4 = this.x;
  t5 = this.P1;
  t6 = this.P2;
  t7 = this.temp1;
  t8 = this.temp2;
  t9 = this.dv1;
  t10 = this.dv2;
  i = 0;
  while (true) {
    t11 = this.constraintCount;
    if (typeof t11 !== 'number')
      return this.solveVelocityConstraints$0$bailout(1, t4, t5, t6, i, t2, t7, t8, t1, t11, t9, t10, t3);
    if (!(i < t11))
      break;
    t11 = this.constraints;
    if (i >= t11.length)
      throw $.ioore(i);
    c = t11[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    wA = bodyA.get$angularVelocity();
    if (typeof wA !== 'number')
      return this.solveVelocityConstraints$0$bailout(2, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, t1, t9, t10, t3);
    wB = bodyB.get$angularVelocity();
    if (typeof wB !== 'number')
      return this.solveVelocityConstraints$0$bailout(3, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, t1, t9, t10, t3);
    vA = bodyA.get$linearVelocity();
    vB = bodyB.get$linearVelocity();
    invMassA = bodyA.get$invMass();
    if (typeof invMassA !== 'number')
      return this.solveVelocityConstraints$0$bailout(4, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, t1, t9, t10, t3);
    invIA = bodyA.get$invInertia();
    if (typeof invIA !== 'number')
      return this.solveVelocityConstraints$0$bailout(5, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, t1, t9, t10, t3);
    invMassB = bodyB.get$invMass();
    if (typeof invMassB !== 'number')
      return this.solveVelocityConstraints$0$bailout(6, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, t9, t1, t10, t3);
    invIB = bodyB.get$invInertia();
    if (typeof invIB !== 'number')
      return this.solveVelocityConstraints$0$bailout(7, t4, t5, t6, i, t2, t7, t8, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t9, t1, t10, t3);
    t17 = c.get$normal().get$y();
    if (typeof t17 !== 'number')
      throw $.iae(t17);
    t2.x = 1 * t17;
    t18 = c.get$normal().get$x();
    if (typeof t18 !== 'number')
      throw $.iae(t18);
    t2.y = -1 * t18;
    friction = c.get$friction();
    if (typeof friction !== 'number')
      return this.solveVelocityConstraints$0$bailout(8, i, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, t1, t9, t10);
    j = 0;
    while (true) {
      t11 = c.get$pointCount();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(9, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t11, t10);
      if (!(j < t11))
        break;
      t11 = c.get$points();
      if (typeof t11 !== 'string' && (typeof t11 !== 'object' || t11 === null || t11.constructor !== Array && !t11.is$JavaScriptIndexingBehavior()))
        return this.solveVelocityConstraints$0$bailout(10, t11, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      if (j >= t11.length)
        throw $.ioore(j);
      ccp = t11[j];
      a = ccp.get$rA();
      t11 = -wB;
      t13 = ccp.get$rB().get$y();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(11, ccp, a, t11, i, t13, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t13 = t11 * t13;
      t11 = vB.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(12, ccp, a, i, t13, t11, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t11 = t13 + t11;
      t13 = vA.get$x();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(13, ccp, a, i, t11, t13, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t13 = t11 - t13;
      t11 = a.get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(14, ccp, a, i, c, t13, t11, bodyB, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t1.x = t13 + wA * t11;
      t18 = ccp.get$rB().get$x();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(15, ccp, a, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t18, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t18 = wB * t18;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(16, ccp, a, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t18, t20, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t20 = t18 + t20;
      t18 = vA.get$y();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(17, ccp, a, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t20, t18, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t18 = t20 - t18;
      t20 = a.get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(18, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t20, t4, t5, t6, t2, t7, friction, t18, t8, wA, wB, t1, j, t9, t10);
      t1.y = t18 - wA * t20;
      t24 = t1.x;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(19, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t24, t2, t6, friction, t7, t8, wA, wB, t1, j, t9, t10);
      t26 = t2.x;
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(20, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t24, t2, t26, t6, friction, t7, t8, wA, wB, t1, j, t9, t10);
      t26 = t24 * t26;
      t24 = t1.y;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(21, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t24, t8, t26, wA, wB, t1, j, t9, t10);
      t29 = t2.y;
      if (typeof t29 !== 'number')
        return this.solveVelocityConstraints$0$bailout(22, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t24, t29, t8, t26, wA, wB, t1, j, t9, t10);
      vt = t26 + t24 * t29;
      t26 = ccp.get$tangentMass();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(23, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, vt, t26, j, t9, t10);
      lambda = t26 * -vt;
      t26 = ccp.get$normalImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(24, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, lambda, t26, t9, t10);
      maxFriction = friction * t26;
      t26 = ccp.get$tangentImpulse();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(25, ccp, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, lambda, t9, maxFriction, t26, t10);
      t26 += lambda;
      newImpulse = $.max(-maxFriction, $.min(t26, maxFriction));
      t34 = ccp.get$tangentImpulse();
      if (typeof t34 !== 'number')
        throw $.iae(t34);
      lambda = newImpulse - t34;
      t34 = t2.x;
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(26, ccp, newImpulse, i, lambda, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, t34, wA, wB, t1, j, t9, t10);
      Px = t34 * lambda;
      t34 = t2.y;
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(27, ccp, newImpulse, i, lambda, Px, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, t34, wA, wB, t1, j, t9, t10);
      Py = t34 * lambda;
      t34 = vA.get$x();
      if (typeof t34 !== 'number')
        return this.solveVelocityConstraints$0$bailout(28, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, t34, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      vA.set$x(t34 - Px * invMassA);
      t38 = vA.get$y();
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(29, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t38, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      vA.set$y(t38 - Py * invMassA);
      t40 = ccp.get$rA();
      t41 = t40.get$x();
      if (typeof t41 !== 'number')
        return this.solveVelocityConstraints$0$bailout(30, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t41, t3, t4, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      t41 *= Py;
      t40 = t40.get$y();
      if (typeof t40 !== 'number')
        return this.solveVelocityConstraints$0$bailout(31, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t41, t4, t40, t5, t6, t2, t7, friction, t8, wA, wB, t1, j, t9, t10);
      wA -= invIA * (t41 - t40 * Px);
      t44 = vB.get$x();
      if (typeof t44 !== 'number')
        return this.solveVelocityConstraints$0$bailout(32, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t44, t8, wB, t1, j, t9, t10);
      vB.set$x(t44 + Px * invMassB);
      t46 = vB.get$y();
      if (typeof t46 !== 'number')
        return this.solveVelocityConstraints$0$bailout(33, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t8, wB, t46, t1, j, t9, t10);
      vB.set$y(t46 + Py * invMassB);
      t48 = ccp.get$rB();
      t49 = t48.get$x();
      if (typeof t49 !== 'number')
        return this.solveVelocityConstraints$0$bailout(34, ccp, newImpulse, i, Px, c, bodyA, bodyB, Py, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t8, wB, t1, j, t49, t9, t10);
      t49 *= Py;
      t48 = t48.get$y();
      if (typeof t48 !== 'number')
        return this.solveVelocityConstraints$0$bailout(35, ccp, newImpulse, i, Px, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, friction, wA, t8, wB, t1, j, t9, t49, t48, t10);
      wB += invIB * (t49 - t48 * Px);
      ccp.set$tangentImpulse(newImpulse);
      ++j;
    }
    t11 = t11 === 1;
    t12 = c.get$points();
    if (typeof t12 !== 'string' && (typeof t12 !== 'object' || t12 === null || t12.constructor !== Array && !t12.is$JavaScriptIndexingBehavior()))
      return this.solveVelocityConstraints$0$bailout(37, i, t11, bodyA, bodyB, c, t12, vA, vB, invMassA, invIA, invMassB, invIB, t3, t4, t5, t6, t2, t7, t8, wA, t1, wB, t9, t10);
    t14 = -wB;
    t15 = t12.length;
    if (t11) {
      if (0 >= t15)
        throw $.ioore(0);
      ccp = t12[0];
      a1 = ccp.get$rA();
      t11 = ccp.get$rB().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(38, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t11, t14, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t11 = t14 * t11;
      t14 = vB.get$x();
      if (typeof t14 !== 'number')
        return this.solveVelocityConstraints$0$bailout(39, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t11, t14, a1, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t14 = t11 + t14;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(40, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t14, t11, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t11 = t14 - t11;
      t14 = a1.get$y();
      if (typeof t14 !== 'number')
        return this.solveVelocityConstraints$0$bailout(41, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t11, t14, t4, t5, t6, t2, t7, t3, t8, wA, wB, t1, t9, t10);
      t1.x = t11 + wA * t14;
      t18 = ccp.get$rB().get$x();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(42, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t3, t4, t5, t6, t2, t7, t18, t8, wA, wB, t1, t9, t10);
      t18 = wB * t18;
      t20 = vB.get$y();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(43, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t3, t4, t5, t6, t2, t7, t18, t20, t8, wA, wB, t1, t9, t10);
      t20 = t18 + t20;
      t18 = vA.get$y();
      if (typeof t18 !== 'number')
        return this.solveVelocityConstraints$0$bailout(44, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, a1, t3, t4, t5, t6, t2, t7, t8, t20, t18, wA, wB, t1, t9, t10);
      t18 = t20 - t18;
      t20 = a1.get$x();
      if (typeof t20 !== 'number')
        return this.solveVelocityConstraints$0$bailout(45, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t20, t18, t9, t10);
      t1.y = t18 - wA * t20;
      b = c.get$normal();
      t24 = t1.x;
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(46, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t24, b, t9, t10);
      t26 = b.get$x();
      if (typeof t26 !== 'number')
        return this.solveVelocityConstraints$0$bailout(47, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t24, b, t9, t26, t10);
      t24 *= t26;
      t28 = t1.y;
      if (typeof t28 !== 'number')
        return this.solveVelocityConstraints$0$bailout(48, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t28, b, t9, t24, t10);
      t30 = b.get$y();
      if (typeof t30 !== 'number')
        return this.solveVelocityConstraints$0$bailout(49, t30, i, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t28, t9, t24, t10);
      vn = t24 + t28 * t30;
      t24 = ccp.get$normalMass();
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(50, vn, i, t24, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t24 = -t24;
      t33 = ccp.get$velocityBias();
      if (typeof t33 !== 'number')
        return this.solveVelocityConstraints$0$bailout(51, vn, i, t24, t33, c, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      lambda = t24 * (vn - t33);
      t24 = ccp.get$normalImpulse();
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(52, i, lambda, c, bodyA, bodyB, t24, vA, vB, invMassA, ccp, invMassB, invIB, invIA, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      a = t24 + lambda;
      newImpulse = a > 0 ? a : 0;
      lambda = newImpulse - t24;
      Px = t26 * lambda;
      Py = t30 * lambda;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(56, i, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t11, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      vA.set$x(t11 - Px * invMassA);
      t13 = vA.get$y();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(57, i, bodyA, bodyB, vA, vB, invMassA, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t6, t2, t7, t13, t8, wA, wB, t1, t9, t10);
      vA.set$y(t13 - Py * invMassA);
      t15 = ccp.get$rA();
      t16 = t15.get$x();
      if (typeof t16 !== 'number')
        return this.solveVelocityConstraints$0$bailout(58, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t6, t2, t7, t8, wA, wB, t16, t1, t9, t10);
      t16 *= Py;
      t15 = t15.get$y();
      if (typeof t15 !== 'number')
        return this.solveVelocityConstraints$0$bailout(59, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, invIA, Px, t3, t4, t5, Py, t6, t2, t7, t8, wA, wB, t1, t16, t15, t9, t10);
      wA -= invIA * (t16 - t15 * Px);
      t19 = vB.get$x();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(60, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, Px, t3, t4, t5, Py, t6, t2, t7, t8, wB, t1, t9, wA, t10, t19);
      vB.set$x(t19 + Px * invMassB);
      t21 = vB.get$y();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(61, t21, i, bodyA, bodyB, vA, vB, ccp, invMassB, newImpulse, invIB, Px, t3, t4, t5, Py, t6, t2, t7, t8, wB, t1, t9, wA, t10);
      vB.set$y(t21 + Py * invMassB);
      t23 = ccp.get$rB();
      t24 = t23.get$x();
      if (typeof t24 !== 'number')
        return this.solveVelocityConstraints$0$bailout(62, t4, t5, Py, t6, i, t2, t7, t24, t8, bodyA, bodyB, wB, t1, vA, vB, ccp, newImpulse, invIB, t9, wA, t10, Px, t3);
      t24 *= Py;
      t23 = t23.get$y();
      if (typeof t23 !== 'number')
        return this.solveVelocityConstraints$0$bailout(63, t4, t5, t6, i, t2, t7, t8, t24, t23, bodyA, wB, t1, vA, vB, ccp, newImpulse, invIB, bodyB, t9, wA, t10, Px, t3);
      wB += invIB * (t24 - t23 * Px);
      ccp.set$normalImpulse(newImpulse);
    } else {
      if (0 >= t15)
        throw $.ioore(0);
      cp1 = t12[0];
      if (1 >= t12.length)
        throw $.ioore(1);
      cp2 = t12[1];
      a = $.Vector$(cp1.get$normalImpulse(), cp2.get$normalImpulse());
      t11 = cp1.get$rB().get$y();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(65, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t14, t11, t7, t2, t8, wA, wB, t1, t9, t10);
      t11 = t14 * t11;
      t13 = vB.get$x();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(66, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t11, t13, t8, wA, wB, t1, t9, t10);
      t13 = t11 + t13;
      t11 = vA.get$x();
      if (typeof t11 !== 'number')
        return this.solveVelocityConstraints$0$bailout(67, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, t13, t11, wA, wB, t1, t9, t10);
      t11 = t13 - t11;
      t13 = cp1.get$rA().get$y();
      if (typeof t13 !== 'number')
        return this.solveVelocityConstraints$0$bailout(68, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, t11, wA, t13, wB, t1, t9, t10);
      t9.x = t11 + wA * t13;
      t19 = cp1.get$rB().get$x();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(69, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t19, t9, t10);
      t19 = wB * t19;
      t21 = vB.get$y();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(70, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t19, t21, t10);
      t21 = t19 + t21;
      t19 = vA.get$y();
      if (typeof t19 !== 'number')
        return this.solveVelocityConstraints$0$bailout(71, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10, t21, t19);
      t19 = t21 - t19;
      t21 = cp1.get$rA().get$x();
      if (typeof t21 !== 'number')
        return this.solveVelocityConstraints$0$bailout(72, t19, t21, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t9.y = t19 - wA * t21;
      t25 = cp2.get$rB().get$y();
      if (typeof t25 !== 'number')
        return this.solveVelocityConstraints$0$bailout(73, i, t14, t25, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t25 = t14 * t25;
      t14 = vB.get$x();
      if (typeof t14 !== 'number')
        return this.solveVelocityConstraints$0$bailout(74, i, c, t25, t14, bodyB, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t14 = t25 + t14;
      t25 = vA.get$x();
      if (typeof t25 !== 'number')
        return this.solveVelocityConstraints$0$bailout(75, i, c, bodyA, bodyB, t14, vA, vB, invMassA, invIA, invMassB, invIB, t25, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t25 = t14 - t25;
      t14 = cp2.get$rA().get$y();
      if (typeof t14 !== 'number')
        return this.solveVelocityConstraints$0$bailout(76, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, t14, t25, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t10.x = t25 + wA * t14;
      t30 = cp2.get$rB().get$x();
      if (typeof t30 !== 'number')
        return this.solveVelocityConstraints$0$bailout(77, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, t30, cp2, t4, t5, a, t6, t3, t2, t7, t8, wA, wB, t1, t9, t10);
      t30 = wB * t30;
      t32 = vB.get$y();
      if (typeof t32 !== 'number')
        return this.solveVelocityConstraints$0$bailout(78, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t30, t6, t2, t7, t8, t32, wA, wB, t1, t9, t10);
      t32 = t30 + t32;
      t30 = vA.get$y();
      if (typeof t30 !== 'number')
        return this.solveVelocityConstraints$0$bailout(79, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t32, t6, t30, t2, t7, t8, wA, wB, t1, t9, t10);
      t30 = t32 - t30;
      t32 = cp2.get$rA().get$x();
      if (typeof t32 !== 'number')
        return this.solveVelocityConstraints$0$bailout(80, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t30, t7, t32, t8, wA, wB, t1, t9, t10);
      t10.y = t30 - wA * t32;
      t36 = t9.x;
      if (typeof t36 !== 'number')
        return this.solveVelocityConstraints$0$bailout(81, t36, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t38 = c.get$normal();
      t39 = t38.get$x();
      if (typeof t39 !== 'number')
        return this.solveVelocityConstraints$0$bailout(82, t36, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t39, t9, t10);
      t36 *= t39;
      t41 = t9.y;
      if (typeof t41 !== 'number')
        return this.solveVelocityConstraints$0$bailout(83, t41, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t36, t9, t10);
      t38 = t38.get$y();
      if (typeof t38 !== 'number')
        return this.solveVelocityConstraints$0$bailout(84, t41, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t36, t38, t9, t10);
      vn1 = t36 + t41 * t38;
      t36 = t10.x;
      if (typeof t36 !== 'number')
        return this.solveVelocityConstraints$0$bailout(85, i, t36, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      t39 = t36 * t39;
      t36 = t10.y;
      if (typeof t36 !== 'number')
        return this.solveVelocityConstraints$0$bailout(87, t39, i, t36, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      vn2 = t39 + t36 * t38;
      t39 = cp1.get$velocityBias();
      if (typeof t39 !== 'number')
        return this.solveVelocityConstraints$0$bailout(89, i, vn2, t39, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, vn1, t10);
      t39 = vn1 - t39;
      t47 = cp2.get$velocityBias();
      if (typeof t47 !== 'number')
        return this.solveVelocityConstraints$0$bailout(90, i, vn2, c, t39, t47, bodyB, bodyA, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      b = $.Vector$(t39, vn2 - t47);
      t39 = c.get$K();
      t49 = t39.get$col1().get$x();
      if (typeof t49 !== 'number')
        return this.solveVelocityConstraints$0$bailout(91, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t49, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t51 = a.x;
      if (typeof t51 !== 'number')
        return this.solveVelocityConstraints$0$bailout(92, i, t51, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t49, t1, t9, t10);
      t51 = t49 * t51;
      t49 = t39.get$col2().get$x();
      if (typeof t49 !== 'number')
        return this.solveVelocityConstraints$0$bailout(93, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t51, cp1, t49, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t54 = a.y;
      if (typeof t54 !== 'number')
        return this.solveVelocityConstraints$0$bailout(94, i, t54, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t51, cp1, t49, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t8.x = t51 + t49 * t54;
      t56 = c.get$K();
      t57 = t56.get$col1().get$y();
      if (typeof t57 !== 'number')
        return this.solveVelocityConstraints$0$bailout(95, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t57, t2, t7, t8, wA, wB, t1, t9, t10);
      t59 = a.x;
      if (typeof t59 !== 'number')
        return this.solveVelocityConstraints$0$bailout(96, i, t59, bodyA, bodyB, c, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t57, t2, t7, t8, wA, wB, t1, t9, t10);
      t59 = t57 * t59;
      t57 = t56.get$col2().get$y();
      if (typeof t57 !== 'number')
        return this.solveVelocityConstraints$0$bailout(97, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t59, t8, t57, wA, wB, t1, t9, t10);
      t62 = a.y;
      if (typeof t62 !== 'number')
        return this.solveVelocityConstraints$0$bailout(98, i, c, bodyA, t62, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t59, t8, t57, wA, wB, t1, t9, t10);
      t8.y = t59 + t57 * t62;
      t64 = b.x;
      if (typeof t64 !== 'number')
        return this.solveVelocityConstraints$0$bailout(99, i, c, bodyA, bodyB, t64, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t66 = t8.x;
      if (typeof t66 !== 'number')
        return this.solveVelocityConstraints$0$bailout(100, i, c, bodyA, bodyB, t64, vA, vB, invMassA, invIA, invMassB, invIB, b, t66, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      b.x = t64 - t66;
      t68 = b.y;
      if (typeof t68 !== 'number')
        return this.solveVelocityConstraints$0$bailout(101, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t68, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      t70 = t8.y;
      if (typeof t70 !== 'number')
        return this.solveVelocityConstraints$0$bailout(102, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t70, t68, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
      b.y = t68 - t70;
      while (true) {
        $.Matrix22_mulMatrixAndVectorToOut(c.get$normalMass(), b, t4);
        t4.mulLocal$1(-1);
        t11 = t4.get$x();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(103, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t11, t6, t2, t7, t8, wA, wB, t1, t9, t10);
        if (t11 >= 0) {
          t11 = t4.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(104, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, t11, wA, wB, t1, t9, t10);
          t11 = t11 >= 0;
        } else
          t11 = false;
        if (t11) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(105, t4, t5, t6, i, t2, t7, t8, bodyA, wA, wB, t1, vA, vB, invIA, t11, invIB, t12, bodyB, t9, cp1, t10, cp2, t3);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(106, i, bodyA, bodyB, vA, vB, invIA, t11, invIB, t12, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t14, t1, t9, t10);
          t12 *= t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(107, t4, t5, t3, t6, i, t2, t7, t8, bodyA, wA, wB, t1, vA, vB, invIA, invIB, bodyB, t12, cp1, t11, t10, cp2, t9);
          t17 = t5.x;
          if (typeof t17 !== 'number')
            return this.solveVelocityConstraints$0$bailout(108, i, bodyA, bodyB, vA, vB, invIA, invIB, t12, cp1, t11, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t17, t9, t10);
          t12 -= t11 * t17;
          t19 = cp2.get$rA();
          t20 = t19.get$x();
          if (typeof t20 !== 'number')
            return this.solveVelocityConstraints$0$bailout(109, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t19, t12, t6, t2, t20, t7, t8, wA, wB, t1, t9, t10);
          t22 = t6.y;
          if (typeof t22 !== 'number')
            return this.solveVelocityConstraints$0$bailout(110, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t19, t12, t6, t2, t20, t7, t8, wA, wB, t1, t22, t9, t10);
          t20 *= t22;
          t19 = t19.get$y();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(111, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t12, t6, t2, t20, t19, t7, t8, wA, wB, t1, t9, t10);
          t25 = t6.x;
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(112, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t12, t6, t2, t20, t19, t7, t8, wA, wB, t1, t25, t9, t10);
          wA -= invIA * (t12 + (t20 - t19 * t25));
          t27 = cp1.get$rB();
          t28 = t27.get$x();
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(113, t4, t5, t6, i, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, t27, wA, t28, invIB, t9, cp1, t10, cp2, t3);
          t14 = t28 * t14;
          t27 = t27.get$y();
          if (typeof t27 !== 'number')
            return this.solveVelocityConstraints$0$bailout(115, t4, t5, t6, i, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, wA, invIB, t14, t27, t9, cp1, t10, cp2, t3);
          t14 -= t27 * t17;
          t30 = cp2.get$rB();
          t31 = t30.get$x();
          if (typeof t31 !== 'number')
            return this.solveVelocityConstraints$0$bailout(117, t4, t31, t30, t6, i, t2, t5, t7, t3, t8, bodyA, bodyB, wB, t1, vA, vB, wA, invIB, t9, cp1, t10, t14, cp2);
          t22 = t31 * t22;
          t30 = t30.get$y();
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(119, t4, t5, t3, t22, i, t30, t6, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, wA, invIB, t9, cp1, t10, cp2, t14);
          wB += invIB * (t14 + (t22 - t30 * t25));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        t11 = cp1.get$normalMass();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(121, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, t11, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t9, t10);
        t11 = -t11;
        t13 = b.x;
        if (typeof t13 !== 'number')
          return this.solveVelocityConstraints$0$bailout(122, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, t11, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t13, t1, t9, t10);
        t4.set$x(t11 * t13);
        t4.set$y(0);
        t15 = c.get$K().get$col1().get$y();
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(123, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t15, t2, t7, t8, wA, wB, t1, t9, t10);
        t17 = t4.get$x();
        if (typeof t17 !== 'number')
          return this.solveVelocityConstraints$0$bailout(124, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t15, t2, t7, t17, t8, wA, wB, t1, t9, t10);
        t15 *= t17;
        t19 = b.y;
        if (typeof t19 !== 'number')
          return this.solveVelocityConstraints$0$bailout(125, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t15, t8, wA, wB, t1, t19, t9, t10);
        vn2 = t15 + t19;
        if (t17 >= 0 && vn2 >= 0) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(127, t4, t5, t12, t6, i, t2, t7, t3, t8, bodyA, wA, wB, t1, vA, vB, bodyB, invIA, invIB, t9, cp1, t10, cp2, t11);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(128, i, bodyA, bodyB, vA, vB, invIA, t14, invIB, cp1, cp2, t11, t4, t5, t12, t6, t2, t7, t3, t8, wA, wB, t1, t9, t10);
          t12 *= t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(129, t4, t5, t6, i, t11, t12, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, wA, invIA, invIB, t9, cp1, t10, cp2, t3);
          t17 = t5.x;
          if (typeof t17 !== 'number')
            return this.solveVelocityConstraints$0$bailout(130, i, bodyA, bodyB, vA, vB, invIA, invIB, t17, cp1, cp2, t3, t4, t5, t6, t11, t2, t12, t7, t8, wA, wB, t1, t9, t10);
          t12 -= t11 * t17;
          t19 = cp2.get$rA();
          t20 = t19.get$x();
          if (typeof t20 !== 'number')
            return this.solveVelocityConstraints$0$bailout(131, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t12, t19, t20, wA, wB, t1, t8, t9, t10);
          t22 = t6.y;
          if (typeof t22 !== 'number')
            return this.solveVelocityConstraints$0$bailout(132, i, bodyA, bodyB, vA, vB, invIA, invIB, t22, cp1, cp2, t3, t4, t5, t6, t2, t7, t12, t19, t20, wA, wB, t1, t8, t9, t10);
          t20 *= t22;
          t19 = t19.get$y();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(133, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t12, t8, wA, wB, t20, t19, t1, t9, t10);
          t25 = t6.x;
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(134, i, bodyA, bodyB, vA, vB, invIA, invIB, t25, cp1, cp2, t3, t4, t5, t6, t2, t7, t12, t8, wA, wB, t20, t19, t1, t9, t10);
          wA -= invIA * (t12 + (t20 - t19 * t25));
          t27 = cp1.get$rB();
          t28 = t27.get$x();
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(135, t4, t5, t3, t10, t6, i, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, wA, t27, cp2, t28);
          t14 = t28 * t14;
          t27 = t27.get$y();
          if (typeof t27 !== 'number')
            return this.solveVelocityConstraints$0$bailout(137, t4, t5, t14, t27, t6, i, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, wA, t10, cp2, t3);
          t14 -= t27 * t17;
          t30 = cp2.get$rB();
          t31 = t30.get$x();
          if (typeof t31 !== 'number')
            return this.solveVelocityConstraints$0$bailout(139, t4, t5, t6, i, t2, t7, t14, t30, t8, t31, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, wA, t10, cp2, t3);
          t22 = t31 * t22;
          t30 = t30.get$y();
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(141, t4, t5, t6, i, t2, t7, t14, t8, t22, t30, wB, bodyA, vA, vB, bodyB, t1, invIB, t9, cp1, wA, t10, cp2, t3);
          wB += invIB * (t14 + (t22 - t30 * t25));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        t4.set$x(0);
        t11 = cp2.get$normalMass();
        if (typeof t11 !== 'number')
          return this.solveVelocityConstraints$0$bailout(143, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t11, t2, t7, t8, wA, wB, t1, t9, t10);
        t11 = -t11;
        t13 = b.y;
        if (typeof t13 !== 'number')
          return this.solveVelocityConstraints$0$bailout(144, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t11, t8, wA, wB, t1, t13, t9, t10);
        t4.set$y(t11 * t13);
        t15 = c.get$K().get$col2().get$x();
        if (typeof t15 !== 'number')
          return this.solveVelocityConstraints$0$bailout(145, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t15, t9, t10);
        t17 = t4.get$y();
        if (typeof t17 !== 'number')
          return this.solveVelocityConstraints$0$bailout(146, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t17, t15, t1, t9, t10);
        t15 *= t17;
        t19 = b.x;
        if (typeof t19 !== 'number')
          return this.solveVelocityConstraints$0$bailout(147, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, t15, t19, t9, t10);
        vn1 = t15 + t19;
        if (t17 >= 0 && vn1 >= 0) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(149, t4, t5, t6, i, t2, t7, t11, t8, t12, bodyA, bodyB, wB, t1, vA, vB, wA, invIA, invIB, t9, cp1, t10, cp2, t3);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(150, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t11, t8, t12, wA, wB, t1, t9, t14, t10);
          t12 *= t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(151, t4, t5, t6, i, t2, t7, t8, t12, wA, wB, bodyA, vA, vB, bodyB, invIA, invIB, t11, t1, cp1, t9, t10, cp2, t3);
          t17 = t5.x;
          if (typeof t17 !== 'number')
            return this.solveVelocityConstraints$0$bailout(152, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, t12, wA, wB, t1, t11, t9, t17, t10);
          t12 -= t11 * t17;
          t19 = cp2.get$rA();
          t20 = t19.get$x();
          if (typeof t20 !== 'number')
            return this.solveVelocityConstraints$0$bailout(153, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t12, t19, t20, t9, t10);
          t22 = t6.y;
          if (typeof t22 !== 'number')
            return this.solveVelocityConstraints$0$bailout(154, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t12, t19, t20, t9, t10, t22);
          t20 *= t22;
          t19 = t19.get$y();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(155, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t12, t9, t20, t19, t10);
          t25 = t6.x;
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(156, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, wA, wB, t1, t12, t9, t20, t19, t10, t25);
          wA -= invIA * (t12 + (t20 - t19 * t25));
          t27 = cp1.get$rB();
          t28 = t27.get$x();
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(157, t4, t5, t6, i, wA, t27, t2, t28, t7, t8, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t14 = t28 * t14;
          t27 = t27.get$y();
          if (typeof t27 !== 'number')
            return this.solveVelocityConstraints$0$bailout(159, t4, t5, t6, i, wA, t7, t2, t8, t14, t27, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t14 -= t27 * t17;
          t30 = cp2.get$rB();
          t31 = t30.get$x();
          if (typeof t31 !== 'number')
            return this.solveVelocityConstraints$0$bailout(161, t4, t5, t6, i, wA, t7, t2, t8, bodyA, bodyB, wB, t1, vA, vB, t30, t14, t31, invIB, t9, cp1, t10, cp2, t3);
          t22 = t31 * t22;
          t30 = t30.get$y();
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(163, t4, t5, t6, i, wA, t7, t2, t8, bodyA, bodyB, wB, t1, vA, vB, t14, invIB, t22, t30, t9, cp1, t10, cp2, t3);
          wB += invIB * (t14 + (t22 - t30 * t25));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        t4.set$x(0);
        t4.set$y(0);
        vn1 = b.x;
        if (typeof vn1 !== 'number')
          return this.solveVelocityConstraints$0$bailout(165, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, b, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, vn1, t9, t10);
        vn2 = b.y;
        if (typeof vn2 !== 'number')
          return this.solveVelocityConstraints$0$bailout(166, i, c, bodyA, bodyB, vA, vB, invMassA, invIA, invMassB, invIB, cp1, cp2, t3, t4, t5, a, t6, t2, t7, t8, wA, wB, t1, vn1, vn2, t9, t10);
        if (vn1 >= 0 && vn2 >= 0) {
          t3.setFrom$1(t4).subLocal$1(a);
          t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
          t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
          t7.setFrom$1(t5).addLocal$1(t6);
          t8.setFrom$1(t7).mulLocal$1(invMassA);
          vA.subLocal$1(t8);
          t8.setFrom$1(t7).mulLocal$1(invMassB);
          vB.addLocal$1(t8);
          t11 = cp1.get$rA();
          t12 = t11.get$x();
          if (typeof t12 !== 'number')
            return this.solveVelocityConstraints$0$bailout(167, t4, t5, t11, t6, i, t12, t7, t2, t8, bodyA, bodyB, wB, t1, vA, vB, wA, invIA, invIB, t9, cp1, t10, cp2, t3);
          t14 = t5.y;
          if (typeof t14 !== 'number')
            return this.solveVelocityConstraints$0$bailout(168, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t14, t4, t5, t3, t11, t6, t12, t2, t7, t8, wA, wB, t1, t9, t10);
          t12 *= t14;
          t11 = t11.get$y();
          if (typeof t11 !== 'number')
            return this.solveVelocityConstraints$0$bailout(169, t4, t5, t6, i, t2, t7, t12, t11, t8, bodyA, bodyB, wB, t1, vA, vB, wA, invIA, invIB, t9, cp1, t10, cp2, t3);
          t17 = t5.x;
          if (typeof t17 !== 'number')
            return this.solveVelocityConstraints$0$bailout(170, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t17, t4, t5, t3, t6, t2, t7, t12, t11, t8, wA, wB, t1, t9, t10);
          t12 -= t11 * t17;
          t19 = cp2.get$rA();
          t20 = t19.get$x();
          if (typeof t20 !== 'number')
            return this.solveVelocityConstraints$0$bailout(171, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, t12, wA, wB, t20, t19, t1, t9, t10);
          t22 = t6.y;
          if (typeof t22 !== 'number')
            return this.solveVelocityConstraints$0$bailout(172, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t22, t6, t2, t7, t8, t12, wA, wB, t20, t19, t1, t9, t10);
          t20 *= t22;
          t19 = t19.get$y();
          if (typeof t19 !== 'number')
            return this.solveVelocityConstraints$0$bailout(173, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t6, t2, t7, t8, t12, wA, wB, t1, t20, t19, t9, t10);
          t25 = t6.x;
          if (typeof t25 !== 'number')
            return this.solveVelocityConstraints$0$bailout(174, i, bodyA, bodyB, vA, vB, invIA, invIB, cp1, cp2, t3, t4, t5, t25, t6, t2, t7, t8, t12, wA, wB, t1, t20, t19, t9, t10);
          wA -= invIA * (t12 + (t20 - t19 * t25));
          t27 = cp1.get$rB();
          t28 = t27.get$x();
          if (typeof t28 !== 'number')
            return this.solveVelocityConstraints$0$bailout(175, wA, t4, t5, t28, t6, i, t2, t27, t7, t8, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t14 = t28 * t14;
          t27 = t27.get$y();
          if (typeof t27 !== 'number')
            return this.solveVelocityConstraints$0$bailout(177, wA, t4, t5, t6, i, t14, t27, t2, t7, t8, bodyA, bodyB, wB, t1, vA, vB, invIB, t9, cp1, t10, cp2, t3);
          t14 -= t27 * t17;
          t30 = cp2.get$rB();
          t31 = t30.get$x();
          if (typeof t31 !== 'number')
            return this.solveVelocityConstraints$0$bailout(179, wA, t4, t5, t6, i, t2, t7, t8, t14, t30, bodyA, bodyB, wB, t1, vA, vB, t31, invIB, t9, cp1, t10, cp2, t3);
          t22 = t31 * t22;
          t30 = t30.get$y();
          if (typeof t30 !== 'number')
            return this.solveVelocityConstraints$0$bailout(181, wA, t4, t5, t6, i, t2, t7, t8, t14, bodyA, bodyB, wB, t1, vA, vB, t30, t22, invIB, t9, cp1, t10, cp2, t3);
          wB += invIB * (t14 + (t22 - t30 * t25));
          cp1.set$normalImpulse(t4.get$x());
          cp2.set$normalImpulse(t4.get$y());
          break;
        }
        break;
      }
    }
    bodyA.get$linearVelocity().setFrom$1(vA);
    bodyA.set$angularVelocity(wA);
    bodyB.get$linearVelocity().setFrom$1(vB);
    bodyB.set$angularVelocity(wB);
    ++i;
  }
},
 solveVelocityConstraints$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22, env23, env24, env25, env26, env27, env28, env29) {
  switch (state0) {
    case 1:
      t3 = env11;
      t10 = env10;
      t9 = env9;
      t11 = env8;
      t1 = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 2:
      t3 = env14;
      t10 = env13;
      t9 = env12;
      t1 = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 3:
      t3 = env15;
      t10 = env14;
      t9 = env13;
      t1 = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 4:
      t3 = env18;
      t10 = env17;
      t9 = env16;
      t1 = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 5:
      t3 = env19;
      t10 = env18;
      t9 = env17;
      t1 = env16;
      invIA = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 6:
      t3 = env20;
      t10 = env19;
      t1 = env18;
      t9 = env17;
      invMassB = env16;
      invIA = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 7:
      t3 = env21;
      t10 = env20;
      t1 = env19;
      t9 = env18;
      invIB = env17;
      invMassB = env16;
      invIA = env15;
      invMassA = env14;
      vB = env13;
      vA = env12;
      wB = env11;
      wA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 8:
      t10 = env22;
      t9 = env21;
      t1 = env20;
      t8 = env19;
      friction = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      wB = env5;
      wA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 9:
      t10 = env24;
      t11 = env23;
      t9 = env22;
      j = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      friction = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 10:
      t10 = env24;
      t9 = env23;
      j = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t11 = env0;
      break;
    case 11:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      t13 = env4;
      i = env3;
      t11 = env2;
      a = env1;
      ccp = env0;
      break;
    case 12:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      t11 = env4;
      t13 = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 13:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      t13 = env4;
      t11 = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 14:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyA = env7;
      bodyB = env6;
      t11 = env5;
      t13 = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 15:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      friction = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      t18 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 16:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t20 = env13;
      t18 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 17:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t18 = env13;
      t20 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      a = env1;
      ccp = env0;
      break;
    case 18:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t18 = env19;
      friction = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t20 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 19:
      t10 = env25;
      t9 = env24;
      j = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      friction = env17;
      t6 = env16;
      t2 = env15;
      t24 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 20:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      friction = env18;
      t6 = env17;
      t26 = env16;
      t2 = env15;
      t24 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 21:
      t10 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t26 = env20;
      t8 = env19;
      t24 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 22:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t26 = env21;
      t8 = env20;
      t29 = env19;
      t24 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 23:
      t10 = env26;
      t9 = env25;
      j = env24;
      t26 = env23;
      vt = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 24:
      t10 = env26;
      t9 = env25;
      t26 = env24;
      lambda = env23;
      j = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 25:
      t10 = env27;
      t26 = env26;
      maxFriction = env25;
      t9 = env24;
      lambda = env23;
      j = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      friction = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      ccp = env0;
      break;
    case 26:
      t10 = env27;
      t9 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t34 = env21;
      t8 = env20;
      friction = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      lambda = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 27:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t34 = env22;
      t8 = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      bodyB = env7;
      bodyA = env6;
      c = env5;
      Px = env4;
      lambda = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 28:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      friction = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      invIB = env14;
      invMassB = env13;
      invIA = env12;
      invMassA = env11;
      vB = env10;
      vA = env9;
      t34 = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 29:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      friction = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      t38 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 30:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      friction = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      t40 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 31:
      t10 = env29;
      t9 = env28;
      j = env27;
      t1 = env26;
      wB = env25;
      wA = env24;
      t8 = env23;
      friction = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      t5 = env18;
      t42 = env17;
      t4 = env16;
      t40 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 32:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      wB = env24;
      t8 = env23;
      t44 = env22;
      wA = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 33:
      t10 = env28;
      t9 = env27;
      j = env26;
      t1 = env25;
      t46 = env24;
      wB = env23;
      t8 = env22;
      wA = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 34:
      t10 = env28;
      t9 = env27;
      t48 = env26;
      j = env25;
      t1 = env24;
      wB = env23;
      t8 = env22;
      wA = env21;
      friction = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIB = env13;
      invMassB = env12;
      invIA = env11;
      invMassA = env10;
      vB = env9;
      vA = env8;
      Py = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 35:
      t10 = env28;
      t50 = env27;
      t48 = env26;
      t9 = env25;
      j = env24;
      t1 = env23;
      wB = env22;
      t8 = env21;
      wA = env20;
      friction = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      Px = env3;
      i = env2;
      newImpulse = env1;
      ccp = env0;
      break;
    case 36:
      t10 = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t11 = env1;
      i = env0;
      break;
    case 37:
      t10 = env23;
      t9 = env22;
      wB = env21;
      t1 = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      t13 = env5;
      c = env4;
      bodyB = env3;
      bodyA = env2;
      t11 = env1;
      i = env0;
      break;
    case 38:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t11 = env13;
      t12 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 39:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      a1 = env13;
      t11 = env12;
      t12 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 40:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t12 = env13;
      t11 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 41:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t3 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t11 = env13;
      t12 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 42:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t17 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 43:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t19 = env19;
      t17 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 44:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t17 = env20;
      t19 = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      a1 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 45:
      t10 = env24;
      t9 = env23;
      t17 = env22;
      t19 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 46:
      t10 = env24;
      t9 = env23;
      b = env22;
      t23 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 47:
      t10 = env25;
      t25 = env24;
      t9 = env23;
      b = env22;
      t23 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 48:
      t10 = env25;
      t25 = env24;
      t9 = env23;
      b = env22;
      t23 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      invIA = env10;
      invIB = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 49:
      t10 = env25;
      t25 = env24;
      t9 = env23;
      t23 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      invIA = env11;
      invIB = env10;
      invMassB = env9;
      ccp = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t28 = env0;
      break;
    case 50:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIA = env12;
      invIB = env11;
      invMassB = env10;
      ccp = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t25 = env2;
      i = env1;
      vn = env0;
      break;
    case 51:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      invIA = env13;
      invIB = env12;
      invMassB = env11;
      ccp = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      t31 = env3;
      t25 = env2;
      i = env1;
      vn = env0;
      break;
    case 52:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIA = env12;
      invIB = env11;
      invMassB = env10;
      ccp = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      t25 = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      lambda = env1;
      i = env0;
      break;
    case 53:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      invIA = env12;
      t11 = env11;
      invIB = env10;
      newImpulse = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 54:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      t11 = env13;
      invIA = env12;
      lambda = env11;
      invIB = env10;
      newImpulse = env9;
      invMassB = env8;
      ccp = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 55:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t5 = env16;
      t4 = env15;
      t11 = env14;
      t3 = env13;
      Px = env12;
      invIA = env11;
      lambda = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      invMassA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 56:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t11 = env16;
      Py = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      Px = env11;
      invIA = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      invMassA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 57:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t16 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      Py = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      Px = env11;
      invIA = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      invMassA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 58:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      t18 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      Py = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      Px = env10;
      invIA = env9;
      invIB = env8;
      newImpulse = env7;
      invMassB = env6;
      ccp = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 59:
      t10 = env25;
      t9 = env24;
      t20 = env23;
      t18 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      Py = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      Px = env10;
      invIA = env9;
      invIB = env8;
      newImpulse = env7;
      invMassB = env6;
      ccp = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 60:
      t22 = env23;
      t10 = env22;
      wA = env21;
      t9 = env20;
      t1 = env19;
      wB = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      Py = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      Px = env9;
      invIB = env8;
      newImpulse = env7;
      invMassB = env6;
      ccp = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 61:
      t10 = env23;
      wA = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      Py = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      Px = env10;
      invIB = env9;
      newImpulse = env8;
      invMassB = env7;
      ccp = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      i = env1;
      t24 = env0;
      break;
    case 62:
      t3 = env22;
      Px = env21;
      t10 = env20;
      wA = env19;
      t9 = env18;
      invIB = env17;
      newImpulse = env16;
      ccp = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t8 = env8;
      t26 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      Py = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 63:
      t3 = env22;
      Px = env21;
      t10 = env20;
      wA = env19;
      t9 = env18;
      bodyB = env17;
      invIB = env16;
      newImpulse = env15;
      ccp = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      wB = env10;
      bodyA = env9;
      t28 = env8;
      t26 = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 64:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      t11 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 65:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t2 = env20;
      t7 = env19;
      t13 = env18;
      t11 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 66:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t11 = env20;
      t13 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 67:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t13 = env21;
      t11 = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 68:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      t11 = env22;
      wA = env21;
      t13 = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 69:
      t10 = env25;
      t9 = env24;
      t18 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 70:
      t10 = env26;
      t20 = env25;
      t18 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 71:
      t18 = env26;
      t20 = env25;
      t10 = env24;
      t9 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 72:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      t20 = env1;
      t18 = env0;
      break;
    case 73:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t25 = env2;
      t24 = env1;
      i = env0;
      break;
    case 74:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyA = env5;
      bodyB = env4;
      t24 = env3;
      t25 = env2;
      c = env1;
      i = env0;
      break;
    case 75:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t25 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      t24 = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 76:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t25 = env11;
      t24 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 77:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t3 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      cp2 = env12;
      t30 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 78:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t32 = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      t30 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 79:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t30 = env18;
      t6 = env17;
      t32 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 80:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t32 = env20;
      t7 = env19;
      t30 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 81:
      t10 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 82:
      t10 = env26;
      t9 = env25;
      t38 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 83:
      t10 = env26;
      t9 = env25;
      t38 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 84:
      t10 = env27;
      t9 = env26;
      t41 = env25;
      t38 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      i = env1;
      t36 = env0;
      break;
    case 85:
      t10 = env26;
      vn1 = env25;
      t9 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t38 = env1;
      i = env0;
      break;
    case 86:
      t10 = env27;
      vn1 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t38 = env2;
      i = env1;
      t44 = env0;
      break;
    case 87:
      t10 = env27;
      vn1 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t38 = env2;
      i = env1;
      t44 = env0;
      break;
    case 88:
      t10 = env28;
      vn1 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyB = env6;
      bodyA = env5;
      c = env4;
      t38 = env3;
      t47 = env2;
      i = env1;
      t44 = env0;
      break;
    case 89:
      t10 = env27;
      vn1 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      invIB = env11;
      invMassB = env10;
      invIA = env9;
      invMassA = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      t44 = env2;
      vn2 = env1;
      i = env0;
      break;
    case 90:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      invIB = env12;
      invMassB = env11;
      invIA = env10;
      invMassA = env9;
      vB = env8;
      vA = env7;
      bodyA = env6;
      bodyB = env5;
      t50 = env4;
      t44 = env3;
      c = env2;
      vn2 = env1;
      i = env0;
      break;
    case 91:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t44 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 92:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      t44 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t53 = env1;
      i = env0;
      break;
    case 93:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      t44 = env13;
      cp1 = env12;
      t53 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 94:
      t10 = env28;
      t9 = env27;
      t1 = env26;
      wB = env25;
      wA = env24;
      t8 = env23;
      t7 = env22;
      t2 = env21;
      t6 = env20;
      a = env19;
      t5 = env18;
      t4 = env17;
      t3 = env16;
      cp2 = env15;
      t44 = env14;
      cp1 = env13;
      t53 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      c = env2;
      t56 = env1;
      i = env0;
      break;
    case 95:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t58 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 96:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t58 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      c = env4;
      bodyB = env3;
      bodyA = env2;
      t60 = env1;
      i = env0;
      break;
    case 97:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t58 = env22;
      t8 = env21;
      t60 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 98:
      t10 = env28;
      t9 = env27;
      t1 = env26;
      wB = env25;
      wA = env24;
      t58 = env23;
      t8 = env22;
      t60 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      t63 = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 99:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      t65 = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 100:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      t67 = env12;
      b = env11;
      invIB = env10;
      invMassB = env9;
      invIA = env8;
      invMassA = env7;
      vB = env6;
      vA = env5;
      t65 = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 101:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t69 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 102:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t7 = env21;
      t2 = env20;
      t6 = env19;
      a = env18;
      t5 = env17;
      t4 = env16;
      t3 = env15;
      cp2 = env14;
      cp1 = env13;
      t69 = env12;
      t71 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 103:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      t11 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 104:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t11 = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 105:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      bodyB = env17;
      t12 = env16;
      invIB = env15;
      t11 = env14;
      invIA = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      wB = env9;
      wA = env8;
      bodyA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 106:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      t14 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      cp2 = env10;
      cp1 = env9;
      t12 = env8;
      invIB = env7;
      t11 = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 107:
      t9 = env22;
      cp2 = env21;
      t10 = env20;
      t11 = env19;
      cp1 = env18;
      t14 = env17;
      bodyB = env16;
      invIB = env15;
      invIA = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      wB = env10;
      wA = env9;
      bodyA = env8;
      t8 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t3 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 108:
      t10 = env23;
      t9 = env22;
      t16 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t5 = env13;
      t4 = env12;
      t3 = env11;
      cp2 = env10;
      t11 = env9;
      cp1 = env8;
      t14 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 109:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t19 = env16;
      t2 = env15;
      t6 = env14;
      t14 = env13;
      t18 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 110:
      t10 = env24;
      t9 = env23;
      t21 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t19 = env16;
      t2 = env15;
      t6 = env14;
      t14 = env13;
      t18 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 111:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t18 = env16;
      t21 = env15;
      t2 = env14;
      t6 = env13;
      t14 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 112:
      t10 = env24;
      t9 = env23;
      t23 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t18 = env16;
      t21 = env15;
      t2 = env14;
      t6 = env13;
      t14 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 113:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      t26 = env15;
      wA = env14;
      t25 = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      wB = env9;
      bodyB = env8;
      bodyA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 114:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      t28 = env17;
      invIB = env16;
      t26 = env15;
      wA = env14;
      t25 = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      wB = env9;
      bodyB = env8;
      bodyA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 115:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      t25 = env16;
      t28 = env15;
      invIB = env14;
      wA = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      wB = env9;
      bodyB = env8;
      bodyA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 116:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      t9 = env19;
      cp1 = env18;
      t25 = env17;
      t28 = env16;
      t30 = env15;
      invIB = env14;
      wA = env13;
      vB = env12;
      vA = env11;
      t1 = env10;
      wB = env9;
      bodyB = env8;
      bodyA = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 117:
      cp2 = env22;
      t28 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      wA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t8 = env9;
      t3 = env8;
      t7 = env7;
      t5 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t32 = env2;
      t33 = env1;
      t4 = env0;
      break;
    case 118:
      t32 = env23;
      t28 = env22;
      t10 = env21;
      t35 = env20;
      t9 = env19;
      wA = env18;
      t1 = env17;
      wB = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      i = env1;
      t33 = env0;
      break;
    case 119:
      t28 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      wA = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t8 = env9;
      t7 = env8;
      t2 = env7;
      t6 = env6;
      t32 = env5;
      i = env4;
      t35 = env3;
      t3 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 120:
      t28 = env23;
      t10 = env22;
      t37 = env21;
      t9 = env20;
      wA = env19;
      t1 = env18;
      wB = env17;
      t8 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      invIB = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      t32 = env2;
      i = env1;
      t35 = env0;
      break;
    case 121:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      cp1 = env12;
      t11 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 122:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      t13 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t6 = env18;
      a = env17;
      t5 = env16;
      t4 = env15;
      t3 = env14;
      cp2 = env13;
      t11 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 123:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t15 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 124:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      wB = env24;
      wA = env23;
      t8 = env22;
      t17 = env21;
      t7 = env20;
      t2 = env19;
      t15 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 125:
      t10 = env27;
      t9 = env26;
      t15 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t17 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 126:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      t11 = env24;
      wB = env23;
      wA = env22;
      vn2 = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 127:
      t11 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      bodyB = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      wA = env10;
      bodyA = env9;
      t8 = env8;
      t3 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t12 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 128:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t3 = env17;
      t7 = env16;
      t2 = env15;
      t6 = env14;
      t12 = env13;
      t5 = env12;
      t4 = env11;
      t11 = env10;
      cp2 = env9;
      cp1 = env8;
      invIB = env7;
      t14 = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 129:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      wA = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      t14 = env5;
      t11 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 130:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t14 = env16;
      t2 = env15;
      t11 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      t16 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 131:
      t10 = env23;
      t9 = env22;
      t8 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t19 = env17;
      t18 = env16;
      t14 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 132:
      t10 = env24;
      t9 = env23;
      t8 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t19 = env18;
      t18 = env17;
      t14 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      t21 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 133:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      t18 = env20;
      t21 = env19;
      wB = env18;
      wA = env17;
      t8 = env16;
      t14 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 134:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      t18 = env21;
      t21 = env20;
      wB = env19;
      wA = env18;
      t8 = env17;
      t14 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t5 = env12;
      t4 = env11;
      t3 = env10;
      cp2 = env9;
      cp1 = env8;
      t23 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 135:
      t26 = env21;
      cp2 = env20;
      t25 = env19;
      wA = env18;
      cp1 = env17;
      t9 = env16;
      invIB = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t10 = env3;
      t3 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 136:
      cp2 = env22;
      t25 = env21;
      wA = env20;
      t28 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t8 = env9;
      t3 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t10 = env3;
      t26 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 137:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      wA = env18;
      cp1 = env17;
      t9 = env16;
      invIB = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t25 = env3;
      t28 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 138:
      t3 = env22;
      cp2 = env21;
      t30 = env20;
      wA = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t10 = env9;
      t8 = env8;
      t7 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t25 = env3;
      t28 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 139:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      wA = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t33 = env9;
      t8 = env8;
      t32 = env7;
      t28 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 140:
      t10 = env23;
      wA = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t3 = env14;
      t5 = env13;
      t4 = env12;
      t35 = env11;
      cp2 = env10;
      cp1 = env9;
      invIB = env8;
      vB = env7;
      vA = env6;
      bodyB = env5;
      bodyA = env4;
      t33 = env3;
      t32 = env2;
      t28 = env1;
      i = env0;
      break;
    case 141:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      wA = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      t1 = env15;
      bodyB = env14;
      vB = env13;
      vA = env12;
      bodyA = env11;
      wB = env10;
      t32 = env9;
      t35 = env8;
      t8 = env7;
      t28 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 142:
      t10 = env23;
      wA = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t37 = env13;
      t4 = env12;
      t3 = env11;
      cp2 = env10;
      cp1 = env9;
      invIB = env8;
      vB = env7;
      vA = env6;
      bodyA = env5;
      bodyB = env4;
      t32 = env3;
      t35 = env2;
      t28 = env1;
      i = env0;
      break;
    case 143:
      t10 = env26;
      t9 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t7 = env20;
      t2 = env19;
      t11 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 144:
      t10 = env27;
      t9 = env26;
      t13 = env25;
      t1 = env24;
      wB = env23;
      wA = env22;
      t8 = env21;
      t11 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 145:
      t10 = env26;
      t9 = env25;
      t15 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 146:
      t10 = env27;
      t9 = env26;
      t1 = env25;
      t15 = env24;
      t17 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 147:
      t10 = env27;
      t9 = env26;
      t15 = env25;
      t17 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 148:
      t10 = env27;
      t11 = env26;
      t9 = env25;
      vn1 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 149:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      wA = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t12 = env8;
      t8 = env7;
      t11 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 150:
      t10 = env23;
      t14 = env22;
      t9 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t12 = env17;
      t8 = env16;
      t11 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 151:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      t9 = env19;
      cp1 = env18;
      t1 = env17;
      t11 = env16;
      invIB = env15;
      invIA = env14;
      bodyB = env13;
      vB = env12;
      vA = env11;
      bodyA = env10;
      wB = env9;
      wA = env8;
      t14 = env7;
      t8 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 152:
      t10 = env23;
      t16 = env22;
      t9 = env21;
      t11 = env20;
      t1 = env19;
      wB = env18;
      wA = env17;
      t14 = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 153:
      t10 = env23;
      t9 = env22;
      t19 = env21;
      t18 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 154:
      t21 = env24;
      t10 = env23;
      t9 = env22;
      t19 = env21;
      t18 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 155:
      t10 = env23;
      t18 = env22;
      t21 = env21;
      t9 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 156:
      t23 = env24;
      t10 = env23;
      t18 = env22;
      t21 = env21;
      t9 = env20;
      t14 = env19;
      t1 = env18;
      wB = env17;
      wA = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 157:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t8 = env9;
      t7 = env8;
      t26 = env7;
      t2 = env6;
      t25 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 158:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      wB = env13;
      bodyB = env12;
      bodyA = env11;
      t8 = env10;
      t7 = env9;
      t26 = env8;
      t2 = env7;
      t25 = env6;
      wA = env5;
      i = env4;
      t6 = env3;
      t28 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 159:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t25 = env9;
      t28 = env8;
      t8 = env7;
      t2 = env6;
      t7 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 160:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      wB = env13;
      bodyB = env12;
      bodyA = env11;
      t25 = env10;
      t28 = env9;
      t8 = env8;
      t2 = env7;
      t7 = env6;
      wA = env5;
      i = env4;
      t6 = env3;
      t30 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 161:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t33 = env16;
      t28 = env15;
      t32 = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      wB = env10;
      bodyB = env9;
      bodyA = env8;
      t8 = env7;
      t2 = env6;
      t7 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 162:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      invIB = env10;
      t33 = env9;
      t28 = env8;
      t32 = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      wA = env2;
      i = env1;
      t35 = env0;
      break;
    case 163:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      t32 = env17;
      t35 = env16;
      invIB = env15;
      t28 = env14;
      vB = env13;
      vA = env12;
      t1 = env11;
      wB = env10;
      bodyB = env9;
      bodyA = env8;
      t8 = env7;
      t2 = env6;
      t7 = env5;
      wA = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 164:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      t32 = env10;
      t35 = env9;
      invIB = env8;
      t28 = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      wA = env2;
      i = env1;
      t37 = env0;
      break;
    case 165:
      t10 = env26;
      t9 = env25;
      vn1 = env24;
      t1 = env23;
      wB = env22;
      wA = env21;
      t8 = env20;
      t7 = env19;
      t2 = env18;
      t6 = env17;
      a = env16;
      t5 = env15;
      t4 = env14;
      t3 = env13;
      cp2 = env12;
      cp1 = env11;
      b = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 166:
      t10 = env26;
      t9 = env25;
      vn2 = env24;
      vn1 = env23;
      t1 = env22;
      wB = env21;
      wA = env20;
      t8 = env19;
      t7 = env18;
      t2 = env17;
      t6 = env16;
      a = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      invMassB = env8;
      invIA = env7;
      invMassA = env6;
      vB = env5;
      vA = env4;
      bodyB = env3;
      bodyA = env2;
      c = env1;
      i = env0;
      break;
    case 167:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      wA = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t8 = env8;
      t2 = env7;
      t7 = env6;
      t12 = env5;
      i = env4;
      t6 = env3;
      t11 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 168:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t7 = env17;
      t2 = env16;
      t12 = env15;
      t6 = env14;
      t11 = env13;
      t3 = env12;
      t5 = env11;
      t4 = env10;
      t14 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 169:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      invIA = env16;
      wA = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t8 = env8;
      t11 = env7;
      t14 = env6;
      t7 = env5;
      t2 = env4;
      i = env3;
      t6 = env2;
      t5 = env1;
      t4 = env0;
      break;
    case 170:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      wA = env19;
      t8 = env18;
      t11 = env17;
      t14 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t3 = env12;
      t5 = env11;
      t4 = env10;
      t16 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 171:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      t18 = env20;
      t19 = env19;
      wB = env18;
      wA = env17;
      t14 = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 172:
      t10 = env24;
      t9 = env23;
      t1 = env22;
      t18 = env21;
      t19 = env20;
      wB = env19;
      wA = env18;
      t14 = env17;
      t8 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t21 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 173:
      t10 = env23;
      t9 = env22;
      t18 = env21;
      t21 = env20;
      t1 = env19;
      wB = env18;
      wA = env17;
      t14 = env16;
      t8 = env15;
      t7 = env14;
      t2 = env13;
      t6 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 174:
      t10 = env24;
      t9 = env23;
      t18 = env22;
      t21 = env21;
      t1 = env20;
      wB = env19;
      wA = env18;
      t14 = env17;
      t8 = env16;
      t7 = env15;
      t2 = env14;
      t6 = env13;
      t23 = env12;
      t5 = env11;
      t4 = env10;
      t3 = env9;
      cp2 = env8;
      cp1 = env7;
      invIB = env6;
      invIA = env5;
      vB = env4;
      vA = env3;
      bodyB = env2;
      bodyA = env1;
      i = env0;
      break;
    case 175:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t8 = env9;
      t7 = env8;
      t25 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t26 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 176:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      wB = env13;
      bodyB = env12;
      bodyA = env11;
      t8 = env10;
      t28 = env9;
      t7 = env8;
      t25 = env7;
      t2 = env6;
      i = env5;
      t6 = env4;
      t26 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 177:
      t3 = env21;
      cp2 = env20;
      t10 = env19;
      cp1 = env18;
      t9 = env17;
      invIB = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t8 = env9;
      t7 = env8;
      t2 = env7;
      t25 = env6;
      t28 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 178:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      vB = env16;
      vA = env15;
      t1 = env14;
      wB = env13;
      bodyB = env12;
      bodyA = env11;
      t8 = env10;
      t2 = env9;
      t7 = env8;
      t30 = env7;
      t25 = env6;
      t28 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 179:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t33 = env16;
      vB = env15;
      vA = env14;
      t1 = env13;
      wB = env12;
      bodyB = env11;
      bodyA = env10;
      t32 = env9;
      t28 = env8;
      t8 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 180:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t7 = env18;
      t35 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      vB = env8;
      vA = env7;
      t33 = env6;
      bodyB = env5;
      bodyA = env4;
      t32 = env3;
      t28 = env2;
      i = env1;
      wA = env0;
      break;
    case 181:
      t3 = env22;
      cp2 = env21;
      t10 = env20;
      cp1 = env19;
      t9 = env18;
      invIB = env17;
      t35 = env16;
      t32 = env15;
      vB = env14;
      vA = env13;
      t1 = env12;
      wB = env11;
      bodyB = env10;
      bodyA = env9;
      t28 = env8;
      t8 = env7;
      t7 = env6;
      t2 = env5;
      i = env4;
      t6 = env3;
      t5 = env2;
      t4 = env1;
      wA = env0;
      break;
    case 182:
      t10 = env23;
      t9 = env22;
      t1 = env21;
      wB = env20;
      t8 = env19;
      t37 = env18;
      t7 = env17;
      t2 = env16;
      t6 = env15;
      t5 = env14;
      t4 = env13;
      t3 = env12;
      cp2 = env11;
      cp1 = env10;
      invIB = env9;
      t35 = env8;
      t32 = env7;
      vB = env6;
      vA = env5;
      bodyB = env4;
      bodyA = env3;
      t28 = env2;
      i = env1;
      wA = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.dv;
      t2 = this.tangent;
      t3 = this.d;
      t4 = this.x;
      t5 = this.P1;
      t6 = this.P2;
      t7 = this.temp1;
      t8 = this.temp2;
      t9 = this.dv1;
      t10 = this.dv2;
      i = 0;
    default:
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, i, t11, c, bodyA, bodyB, wA, wB, vA, vB, invMassA, invIA, invMassB, invIB, t17, t18, friction, j, ccp, a, t13, t20, t24, t26, t29, vt, lambda, maxFriction, newImpulse, t34, Px, Py, t38, t40, t42, t44, t46, t48, t50, a1, t12, t19, b, t23, t25, t28, vn, t31, t16, t22, cp1, cp2, t30, t32, t36, t41, vn1, t47, vn2, t53, t56, t58, t60, t63, t65, t67, t69, t71, t14, t21, t33, t35, t37, t15;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t11 = this.constraintCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t11))
                break L0;
              t11 = this.constraints;
              if (i >= t11.length)
                throw $.ioore(i);
              c = t11[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              wA = bodyA.get$angularVelocity();
            case 2:
              state0 = 0;
              wB = bodyB.get$angularVelocity();
            case 3:
              state0 = 0;
              vA = bodyA.get$linearVelocity();
              vB = bodyB.get$linearVelocity();
              invMassA = bodyA.get$invMass();
            case 4:
              state0 = 0;
              invIA = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              invMassB = bodyB.get$invMass();
            case 6:
              state0 = 0;
              invIB = bodyB.get$invInertia();
            case 7:
              state0 = 0;
              t17 = c.get$normal().get$y();
              if (typeof t17 !== 'number')
                throw $.iae(t17);
              t2.x = 1 * t17;
              t18 = c.get$normal().get$x();
              if (typeof t18 !== 'number')
                throw $.iae(t18);
              t2.y = -1 * t18;
              friction = c.get$friction();
            case 8:
              state0 = 0;
              j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t11 = c.get$pointCount();
                    case 9:
                      state0 = 0;
                      if (!$.ltB(j, t11))
                        break L1;
                      t11 = c.get$points();
                    case 10:
                      state0 = 0;
                      ccp = $.index(t11, j);
                      a = ccp.get$rA();
                      t11 = $.neg(wB);
                      t13 = ccp.get$rB().get$y();
                    case 11:
                      state0 = 0;
                      t13 = $.mul(t11, t13);
                      t11 = vB.get$x();
                    case 12:
                      state0 = 0;
                      t11 = $.add(t13, t11);
                      t13 = vA.get$x();
                    case 13:
                      state0 = 0;
                      t13 = $.sub(t11, t13);
                      t11 = a.get$y();
                    case 14:
                      state0 = 0;
                      t1.x = $.add(t13, $.mul(wA, t11));
                      t18 = ccp.get$rB().get$x();
                    case 15:
                      state0 = 0;
                      t18 = $.mul(wB, t18);
                      t20 = vB.get$y();
                    case 16:
                      state0 = 0;
                      t20 = $.add(t18, t20);
                      t18 = vA.get$y();
                    case 17:
                      state0 = 0;
                      t18 = $.sub(t20, t18);
                      t20 = a.get$x();
                    case 18:
                      state0 = 0;
                      t1.y = $.sub(t18, $.mul(wA, t20));
                      t24 = t1.x;
                    case 19:
                      state0 = 0;
                      t26 = t2.x;
                    case 20:
                      state0 = 0;
                      t26 = $.mul(t24, t26);
                      t24 = t1.y;
                    case 21:
                      state0 = 0;
                      t29 = t2.y;
                    case 22:
                      state0 = 0;
                      vt = $.add(t26, $.mul(t24, t29));
                      t26 = ccp.get$tangentMass();
                    case 23:
                      state0 = 0;
                      lambda = $.mul(t26, $.neg(vt));
                      t26 = ccp.get$normalImpulse();
                    case 24:
                      state0 = 0;
                      maxFriction = $.mul(friction, t26);
                      t26 = ccp.get$tangentImpulse();
                    case 25:
                      state0 = 0;
                      t26 = $.add(t26, lambda);
                      newImpulse = $.max($.neg(maxFriction), $.min(t26, maxFriction));
                      t34 = ccp.get$tangentImpulse();
                      if (typeof t34 !== 'number')
                        throw $.iae(t34);
                      lambda = newImpulse - t34;
                      t34 = t2.x;
                    case 26:
                      state0 = 0;
                      Px = $.mul(t34, lambda);
                      t34 = t2.y;
                    case 27:
                      state0 = 0;
                      Py = $.mul(t34, lambda);
                      t34 = vA.get$x();
                    case 28:
                      state0 = 0;
                      vA.set$x($.sub(t34, $.mul(Px, invMassA)));
                      t38 = vA.get$y();
                    case 29:
                      state0 = 0;
                      vA.set$y($.sub(t38, $.mul(Py, invMassA)));
                      t40 = ccp.get$rA().get$x();
                    case 30:
                      state0 = 0;
                      t40 = $.mul(t40, Py);
                      t42 = ccp.get$rA().get$y();
                    case 31:
                      state0 = 0;
                      wA = $.sub(wA, $.mul(invIA, $.sub(t40, $.mul(t42, Px))));
                      t44 = vB.get$x();
                    case 32:
                      state0 = 0;
                      vB.set$x($.add(t44, $.mul(Px, invMassB)));
                      t46 = vB.get$y();
                    case 33:
                      state0 = 0;
                      vB.set$y($.add(t46, $.mul(Py, invMassB)));
                      t48 = ccp.get$rB().get$x();
                    case 34:
                      state0 = 0;
                      t48 = $.mul(t48, Py);
                      t50 = ccp.get$rB().get$y();
                    case 35:
                      state0 = 0;
                      wB = $.add(wB, $.mul(invIB, $.sub(t48, $.mul(t50, Px))));
                      ccp.set$tangentImpulse(newImpulse);
                      ++j;
                  }
              t11 = c.get$pointCount();
            case 36:
              state0 = 0;
              t11 = $.eqB(t11, 1);
              t13 = c.get$points();
            case 37:
              state0 = 0;
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
              if (state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 0 && t11)
                switch (state0) {
                  case 0:
                    ccp = $.index(t13, 0);
                    a1 = ccp.get$rA();
                    t11 = $.neg(wB);
                    t12 = ccp.get$rB().get$y();
                  case 38:
                    state0 = 0;
                    t12 = $.mul(t11, t12);
                    t11 = vB.get$x();
                  case 39:
                    state0 = 0;
                    t11 = $.add(t12, t11);
                    t12 = vA.get$x();
                  case 40:
                    state0 = 0;
                    t12 = $.sub(t11, t12);
                    t11 = a1.get$y();
                  case 41:
                    state0 = 0;
                    t1.x = $.add(t12, $.mul(wA, t11));
                    t17 = ccp.get$rB().get$x();
                  case 42:
                    state0 = 0;
                    t17 = $.mul(wB, t17);
                    t19 = vB.get$y();
                  case 43:
                    state0 = 0;
                    t19 = $.add(t17, t19);
                    t17 = vA.get$y();
                  case 44:
                    state0 = 0;
                    t17 = $.sub(t19, t17);
                    t19 = a1.get$x();
                  case 45:
                    state0 = 0;
                    t1.y = $.sub(t17, $.mul(wA, t19));
                    b = c.get$normal();
                    t23 = t1.x;
                  case 46:
                    state0 = 0;
                    t25 = b.get$x();
                  case 47:
                    state0 = 0;
                    t25 = $.mul(t23, t25);
                    t23 = t1.y;
                  case 48:
                    state0 = 0;
                    t28 = b.get$y();
                  case 49:
                    state0 = 0;
                    vn = $.add(t25, $.mul(t23, t28));
                    t25 = ccp.get$normalMass();
                  case 50:
                    state0 = 0;
                    t25 = $.neg(t25);
                    t31 = ccp.get$velocityBias();
                  case 51:
                    state0 = 0;
                    lambda = $.mul(t25, $.sub(vn, t31));
                    t25 = ccp.get$normalImpulse();
                  case 52:
                    state0 = 0;
                    a = $.add(t25, lambda);
                    newImpulse = $.gtB(a, 0) ? a : 0;
                    t11 = ccp.get$normalImpulse();
                  case 53:
                    state0 = 0;
                    lambda = $.sub(newImpulse, t11);
                    t11 = c.get$normal().get$x();
                  case 54:
                    state0 = 0;
                    Px = $.mul(t11, lambda);
                    t11 = c.get$normal().get$y();
                  case 55:
                    state0 = 0;
                    Py = $.mul(t11, lambda);
                    t11 = vA.get$x();
                  case 56:
                    state0 = 0;
                    vA.set$x($.sub(t11, $.mul(Px, invMassA)));
                    t16 = vA.get$y();
                  case 57:
                    state0 = 0;
                    vA.set$y($.sub(t16, $.mul(Py, invMassA)));
                    t18 = ccp.get$rA().get$x();
                  case 58:
                    state0 = 0;
                    t18 = $.mul(t18, Py);
                    t20 = ccp.get$rA().get$y();
                  case 59:
                    state0 = 0;
                    wA = $.sub(wA, $.mul(invIA, $.sub(t18, $.mul(t20, Px))));
                    t22 = vB.get$x();
                  case 60:
                    state0 = 0;
                    vB.set$x($.add(t22, $.mul(Px, invMassB)));
                    t24 = vB.get$y();
                  case 61:
                    state0 = 0;
                    vB.set$y($.add(t24, $.mul(Py, invMassB)));
                    t26 = ccp.get$rB().get$x();
                  case 62:
                    state0 = 0;
                    t26 = $.mul(t26, Py);
                    t28 = ccp.get$rB().get$y();
                  case 63:
                    state0 = 0;
                    wB = $.add(wB, $.mul(invIB, $.sub(t26, $.mul(t28, Px))));
                    ccp.set$normalImpulse(newImpulse);
                }
              else
                switch (state0) {
                  case 0:
                    cp1 = $.index(t13, 0);
                    t11 = c.get$points();
                  case 64:
                    state0 = 0;
                    cp2 = $.index(t11, 1);
                    a = $.Vector$(cp1.get$normalImpulse(), cp2.get$normalImpulse());
                    t11 = $.neg(wB);
                    t13 = cp1.get$rB().get$y();
                  case 65:
                    state0 = 0;
                    t13 = $.mul(t11, t13);
                    t11 = vB.get$x();
                  case 66:
                    state0 = 0;
                    t11 = $.add(t13, t11);
                    t13 = vA.get$x();
                  case 67:
                    state0 = 0;
                    t13 = $.sub(t11, t13);
                    t11 = cp1.get$rA().get$y();
                  case 68:
                    state0 = 0;
                    t9.x = $.add(t13, $.mul(wA, t11));
                    t18 = cp1.get$rB().get$x();
                  case 69:
                    state0 = 0;
                    t18 = $.mul(wB, t18);
                    t20 = vB.get$y();
                  case 70:
                    state0 = 0;
                    t20 = $.add(t18, t20);
                    t18 = vA.get$y();
                  case 71:
                    state0 = 0;
                    t18 = $.sub(t20, t18);
                    t20 = cp1.get$rA().get$x();
                  case 72:
                    state0 = 0;
                    t9.y = $.sub(t18, $.mul(wA, t20));
                    t24 = $.neg(wB);
                    t25 = cp2.get$rB().get$y();
                  case 73:
                    state0 = 0;
                    t25 = $.mul(t24, t25);
                    t24 = vB.get$x();
                  case 74:
                    state0 = 0;
                    t24 = $.add(t25, t24);
                    t25 = vA.get$x();
                  case 75:
                    state0 = 0;
                    t25 = $.sub(t24, t25);
                    t24 = cp2.get$rA().get$y();
                  case 76:
                    state0 = 0;
                    t10.x = $.add(t25, $.mul(wA, t24));
                    t30 = cp2.get$rB().get$x();
                  case 77:
                    state0 = 0;
                    t30 = $.mul(wB, t30);
                    t32 = vB.get$y();
                  case 78:
                    state0 = 0;
                    t32 = $.add(t30, t32);
                    t30 = vA.get$y();
                  case 79:
                    state0 = 0;
                    t30 = $.sub(t32, t30);
                    t32 = cp2.get$rA().get$x();
                  case 80:
                    state0 = 0;
                    t10.y = $.sub(t30, $.mul(wA, t32));
                    t36 = t9.x;
                  case 81:
                    state0 = 0;
                    t38 = c.get$normal().get$x();
                  case 82:
                    state0 = 0;
                    t38 = $.mul(t36, t38);
                    t36 = t9.y;
                  case 83:
                    state0 = 0;
                    t41 = c.get$normal().get$y();
                  case 84:
                    state0 = 0;
                    vn1 = $.add(t38, $.mul(t36, t41));
                    t38 = t10.x;
                  case 85:
                    state0 = 0;
                    t44 = c.get$normal().get$x();
                  case 86:
                    state0 = 0;
                    t44 = $.mul(t38, t44);
                    t38 = t10.y;
                  case 87:
                    state0 = 0;
                    t47 = c.get$normal().get$y();
                  case 88:
                    state0 = 0;
                    vn2 = $.add(t44, $.mul(t38, t47));
                    t44 = cp1.get$velocityBias();
                  case 89:
                    state0 = 0;
                    t44 = $.sub(vn1, t44);
                    t50 = cp2.get$velocityBias();
                  case 90:
                    state0 = 0;
                    b = $.Vector$(t44, $.sub(vn2, t50));
                    t44 = c.get$K().get$col1().get$x();
                  case 91:
                    state0 = 0;
                    t53 = a.x;
                  case 92:
                    state0 = 0;
                    t53 = $.mul(t44, t53);
                    t44 = c.get$K().get$col2().get$x();
                  case 93:
                    state0 = 0;
                    t56 = a.y;
                  case 94:
                    state0 = 0;
                    t8.x = $.add(t53, $.mul(t44, t56));
                    t58 = c.get$K().get$col1().get$y();
                  case 95:
                    state0 = 0;
                    t60 = a.x;
                  case 96:
                    state0 = 0;
                    t60 = $.mul(t58, t60);
                    t58 = c.get$K().get$col2().get$y();
                  case 97:
                    state0 = 0;
                    t63 = a.y;
                  case 98:
                    state0 = 0;
                    t8.y = $.add(t60, $.mul(t58, t63));
                    t65 = b.x;
                  case 99:
                    state0 = 0;
                    t67 = t8.x;
                  case 100:
                    state0 = 0;
                    b.x = $.sub(t65, t67);
                    t69 = b.y;
                  case 101:
                    state0 = 0;
                    t71 = t8.y;
                  case 102:
                    state0 = 0;
                    b.y = $.sub(t69, t71);
                  default:
                    L2:
                      while (true)
                        switch (state0) {
                          case 0:
                            if (!true)
                              break L2;
                            $.Matrix22_mulMatrixAndVectorToOut(c.get$normalMass(), b, t4);
                            t4.mulLocal$1(-1);
                            t11 = t4.get$x();
                          case 103:
                            state0 = 0;
                          case 104:
                            if (state0 === 104 || state0 === 0 && $.geB(t11, 0))
                              switch (state0) {
                                case 0:
                                  t11 = t4.get$y();
                                case 104:
                                  state0 = 0;
                                  t11 = $.geB(t11, 0);
                              }
                            else
                              t11 = false;
                          default:
                            if (state0 === 120 || state0 === 119 || state0 === 118 || state0 === 117 || state0 === 116 || state0 === 115 || state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 0 && t11)
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 105:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 106:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 107:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 108:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 109:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 110:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 111:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 112:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 113:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 114:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 115:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 116:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 117:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 118:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 119:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 120:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            t11 = cp1.get$normalMass();
                          case 121:
                            state0 = 0;
                            t11 = $.neg(t11);
                            t13 = b.x;
                          case 122:
                            state0 = 0;
                            t4.set$x($.mul(t11, t13));
                            t4.set$y(0);
                            t15 = c.get$K().get$col1().get$y();
                          case 123:
                            state0 = 0;
                            t17 = t4.get$x();
                          case 124:
                            state0 = 0;
                            t17 = $.mul(t15, t17);
                            t15 = b.y;
                          case 125:
                            state0 = 0;
                            vn2 = $.add(t17, t15);
                            t11 = t4.get$x();
                          case 126:
                            state0 = 0;
                          case 127:
                          case 128:
                          case 129:
                          case 130:
                          case 131:
                          case 132:
                          case 133:
                          case 134:
                          case 135:
                          case 136:
                          case 137:
                          case 138:
                          case 139:
                          case 140:
                          case 141:
                          case 142:
                            if (state0 === 142 || state0 === 141 || state0 === 140 || state0 === 139 || state0 === 138 || state0 === 137 || state0 === 136 || state0 === 135 || state0 === 134 || state0 === 133 || state0 === 132 || state0 === 131 || state0 === 130 || state0 === 129 || state0 === 128 || state0 === 127 || state0 === 0 && $.geB(t11, 0) && $.geB(vn2, 0))
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 127:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 128:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 129:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 130:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 131:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 132:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 133:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 134:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 135:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 136:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 137:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 138:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 139:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 140:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 141:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 142:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            t4.set$x(0);
                            t11 = cp2.get$normalMass();
                          case 143:
                            state0 = 0;
                            t11 = $.neg(t11);
                            t13 = b.y;
                          case 144:
                            state0 = 0;
                            t4.set$y($.mul(t11, t13));
                            t15 = c.get$K().get$col2().get$x();
                          case 145:
                            state0 = 0;
                            t17 = t4.get$y();
                          case 146:
                            state0 = 0;
                            t17 = $.mul(t15, t17);
                            t15 = b.x;
                          case 147:
                            state0 = 0;
                            vn1 = $.add(t17, t15);
                            t11 = t4.get$y();
                          case 148:
                            state0 = 0;
                          case 149:
                          case 150:
                          case 151:
                          case 152:
                          case 153:
                          case 154:
                          case 155:
                          case 156:
                          case 157:
                          case 158:
                          case 159:
                          case 160:
                          case 161:
                          case 162:
                          case 163:
                          case 164:
                            if (state0 === 164 || state0 === 163 || state0 === 162 || state0 === 161 || state0 === 160 || state0 === 159 || state0 === 158 || state0 === 157 || state0 === 156 || state0 === 155 || state0 === 154 || state0 === 153 || state0 === 152 || state0 === 151 || state0 === 150 || state0 === 149 || state0 === 0 && $.geB(t11, 0) && $.geB(vn1, 0))
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 149:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 150:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 151:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 152:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 153:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 154:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 155:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 156:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 157:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 158:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 159:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 160:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 161:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 162:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 163:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 164:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            t4.set$x(0);
                            t4.set$y(0);
                            vn1 = b.x;
                          case 165:
                            state0 = 0;
                            vn2 = b.y;
                          case 166:
                            state0 = 0;
                          case 167:
                          case 168:
                          case 169:
                          case 170:
                          case 171:
                          case 172:
                          case 173:
                          case 174:
                          case 175:
                          case 176:
                          case 177:
                          case 178:
                          case 179:
                          case 180:
                          case 181:
                          case 182:
                            if (state0 === 182 || state0 === 181 || state0 === 180 || state0 === 179 || state0 === 178 || state0 === 177 || state0 === 176 || state0 === 175 || state0 === 174 || state0 === 173 || state0 === 172 || state0 === 171 || state0 === 170 || state0 === 169 || state0 === 168 || state0 === 167 || state0 === 0 && $.geB(vn1, 0) && $.geB(vn2, 0))
                              switch (state0) {
                                case 0:
                                  t3.setFrom$1(t4).subLocal$1(a);
                                  t5.setFrom$1(c.get$normal()).mulLocal$1(t3.x);
                                  t6.setFrom$1(c.get$normal()).mulLocal$1(t3.y);
                                  t7.setFrom$1(t5).addLocal$1(t6);
                                  t8.setFrom$1(t7).mulLocal$1(invMassA);
                                  vA.subLocal$1(t8);
                                  t8.setFrom$1(t7).mulLocal$1(invMassB);
                                  vB.addLocal$1(t8);
                                  t11 = cp1.get$rA();
                                  t12 = t11.get$x();
                                case 167:
                                  state0 = 0;
                                  t14 = t5.y;
                                case 168:
                                  state0 = 0;
                                  t14 = $.mul(t12, t14);
                                  t11 = t11.get$y();
                                case 169:
                                  state0 = 0;
                                  t16 = t5.x;
                                case 170:
                                  state0 = 0;
                                  t14 = $.sub(t14, $.mul(t11, t16));
                                  t18 = cp2.get$rA();
                                  t19 = t18.get$x();
                                case 171:
                                  state0 = 0;
                                  t21 = t6.y;
                                case 172:
                                  state0 = 0;
                                  t21 = $.mul(t19, t21);
                                  t18 = t18.get$y();
                                case 173:
                                  state0 = 0;
                                  t23 = t6.x;
                                case 174:
                                  state0 = 0;
                                  wA = $.sub(wA, $.mul(invIA, $.add(t14, $.sub(t21, $.mul(t18, t23)))));
                                  t25 = cp1.get$rB();
                                  t26 = t25.get$x();
                                case 175:
                                  state0 = 0;
                                  t28 = t5.y;
                                case 176:
                                  state0 = 0;
                                  t28 = $.mul(t26, t28);
                                  t25 = t25.get$y();
                                case 177:
                                  state0 = 0;
                                  t30 = t5.x;
                                case 178:
                                  state0 = 0;
                                  t28 = $.sub(t28, $.mul(t25, t30));
                                  t32 = cp2.get$rB();
                                  t33 = t32.get$x();
                                case 179:
                                  state0 = 0;
                                  t35 = t6.y;
                                case 180:
                                  state0 = 0;
                                  t35 = $.mul(t33, t35);
                                  t32 = t32.get$y();
                                case 181:
                                  state0 = 0;
                                  t37 = t6.x;
                                case 182:
                                  state0 = 0;
                                  wB = $.add(wB, $.mul(invIB, $.add(t28, $.sub(t35, $.mul(t32, t37)))));
                                  cp1.set$normalImpulse(t4.get$x());
                                  cp2.set$normalImpulse(t4.get$y());
                                  break L2;
                              }
                            break L2;
                        }
                }
              bodyA.get$linearVelocity().setFrom$1(vA);
              bodyA.set$angularVelocity(wA);
              bodyB.get$linearVelocity().setFrom$1(vB);
              bodyB.set$angularVelocity(wB);
              ++i;
          }
  }
},
 storeImpulses$0: function() {
  var i, t1, c, m, j;
  for (i = 0; $.ltB(i, this.constraintCount); ++i) {
    t1 = this.constraints;
    if (i >= t1.length)
      throw $.ioore(i);
    c = t1[i];
    m = c.get$manifold();
    for (j = 0; $.ltB(j, c.get$pointCount()); ++j) {
      t1 = $.index(c.get$points(), j).get$normalImpulse();
      $.index(m.get$points(), j).set$normalImpulse(t1);
      t1 = $.index(c.get$points(), j).get$tangentImpulse();
      $.index(m.get$points(), j).set$tangentImpulse(t1);
    }
  }
},
 solvePositionConstraints$1: function(baumgarte) {
  var t1, t2, t3, t4, psm, normal, point, minSeparation, i, t5, c, bodyA, bodyB, t7, invMassA, invIA, t10, invMassB, invIB, j, t6, separation, C, t9, t11, t13, rnA, rnB, K, impulse, t14, t16, t18, t20, t23;
  t1 = this.P;
  t2 = this.temp1;
  t3 = this.rA;
  t4 = this.rB;
  psm = this.psolver;
  normal = psm.normal;
  point = psm.point;
  minSeparation = 0;
  i = 0;
  while (true) {
    t5 = this.constraintCount;
    if (typeof t5 !== 'number')
      return this.solvePositionConstraints$1$bailout(1, baumgarte, minSeparation, t1, t2, i, t3, t5, t4, psm, normal, point);
    if (!(i < t5))
      break;
    t5 = this.constraints;
    if (i >= t5.length)
      throw $.ioore(i);
    c = t5[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    t5 = bodyA.get$mass();
    if (typeof t5 !== 'number')
      return this.solvePositionConstraints$1$bailout(2, baumgarte, minSeparation, i, t2, t1, t3, c, bodyA, bodyB, t5, t4, psm, normal, point);
    t7 = bodyA.get$invMass();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(3, baumgarte, minSeparation, i, t2, t1, t3, c, bodyA, bodyB, t5, t4, t7, psm, normal, point);
    invMassA = t5 * t7;
    t7 = bodyA.get$invInertia();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(5, baumgarte, minSeparation, i, t2, t1, t3, c, bodyA, bodyB, t4, invMassA, normal, point, psm, t5, t7);
    invIA = t5 * t7;
    t7 = bodyB.get$mass();
    if (typeof t7 !== 'number')
      return this.solvePositionConstraints$1$bailout(6, baumgarte, minSeparation, i, t2, t1, t3, c, bodyA, bodyB, t4, invMassA, normal, point, psm, invIA, t7);
    t10 = bodyB.get$invMass();
    if (typeof t10 !== 'number')
      return this.solvePositionConstraints$1$bailout(7, baumgarte, minSeparation, i, t2, t1, t3, c, bodyA, bodyB, t4, invMassA, normal, point, psm, invIA, t7, t10);
    invMassB = t7 * t10;
    t10 = bodyB.get$invInertia();
    if (typeof t10 !== 'number')
      return this.solvePositionConstraints$1$bailout(9, baumgarte, t10, minSeparation, t1, t2, i, t3, c, bodyA, bodyB, t4, invMassA, normal, point, psm, invIA, invMassB, t7);
    invIB = t7 * t10;
    t5 = invMassA + invMassB;
    j = 0;
    while (true) {
      t6 = c.get$pointCount();
      if (typeof t6 !== 'number')
        return this.solvePositionConstraints$1$bailout(10, baumgarte, invIB, t1, t2, j, t3, minSeparation, i, c, bodyA, bodyB, t6, t4, invMassA, normal, point, psm, invIA, invMassB);
      if (!(j < t6))
        break;
      psm.initialize$2(c, j);
      separation = psm.separation;
      if (typeof separation !== 'number')
        return this.solvePositionConstraints$1$bailout(11, baumgarte, invIB, t1, t2, j, t3, minSeparation, i, c, bodyA, bodyB, t4, invMassA, normal, point, separation, invIA, psm, invMassB);
      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
      minSeparation = $.min(minSeparation, separation);
      C = $.max(-0.2, $.min(baumgarte * (separation + 0.005), 0));
      t7 = t3.x;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(12, baumgarte, invIB, minSeparation, t1, t2, j, t3, i, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, t7, invMassB);
      t9 = normal.y;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(13, baumgarte, invIB, minSeparation, t1, t2, j, t3, i, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, t7, invMassB, t9);
      t7 *= t9;
      t11 = t3.y;
      if (typeof t11 !== 'number')
        return this.solvePositionConstraints$1$bailout(14, baumgarte, invIB, minSeparation, t1, t2, j, t3, i, c, bodyA, bodyB, C, t4, invMassA, normal, t7, point, invIA, psm, invMassB, t11);
      t13 = normal.x;
      if (typeof t13 !== 'number')
        return this.solvePositionConstraints$1$bailout(15, t13, baumgarte, invIB, minSeparation, t1, t2, j, t3, i, c, bodyA, bodyB, C, t4, invMassA, normal, t7, point, invIA, psm, invMassB, t11);
      rnA = t7 - t11 * t13;
      t7 = t4.x;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(16, baumgarte, invIB, t7, minSeparation, t1, t2, j, t3, i, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, invMassB, rnA);
      t9 = t7 * t9;
      t7 = t4.y;
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(18, baumgarte, invIB, t9, t7, minSeparation, t1, t2, j, t3, i, c, bodyA, bodyB, C, t4, invMassA, normal, point, psm, invIA, invMassB, rnA);
      rnB = t9 - t7 * t13;
      K = t5 + invIA * rnA * rnA + invIB * rnB * rnB;
      impulse = K > 0 ? -C / K : 0;
      t1.setFrom$1(normal).mulLocal$1(impulse);
      t2.setFrom$1(t1).mulLocal$1(invMassA);
      bodyA.get$sweep().get$center().subLocal$1(t2);
      t6 = bodyA.get$sweep();
      t7 = t6.get$angle();
      if (typeof t7 !== 'number')
        return this.solvePositionConstraints$1$bailout(20, baumgarte, invIB, minSeparation, t1, t2, j, t3, i, t6, t7, bodyA, bodyB, c, t4, invMassA, normal, point, psm, invIA, invMassB);
      t9 = t3.x;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(21, baumgarte, invIB, minSeparation, t1, t2, j, t3, t9, t6, t7, bodyA, bodyB, c, t4, i, invMassA, normal, point, invIA, psm, invMassB);
      t11 = t1.y;
      if (typeof t11 !== 'number')
        return this.solvePositionConstraints$1$bailout(22, baumgarte, invIB, minSeparation, t1, t2, j, t3, t9, t11, t6, t7, bodyA, bodyB, c, t4, i, invMassA, normal, point, invIA, psm, invMassB);
      t11 = t9 * t11;
      t9 = t3.y;
      if (typeof t9 !== 'number')
        return this.solvePositionConstraints$1$bailout(23, baumgarte, invIB, minSeparation, t1, t2, j, t3, i, t9, t7, bodyA, bodyB, c, t4, t6, t11, invMassA, normal, point, invIA, psm, invMassB);
      t14 = t1.x;
      if (typeof t14 !== 'number')
        return this.solvePositionConstraints$1$bailout(24, baumgarte, minSeparation, i, t6, t7, bodyA, bodyB, c, t11, invMassA, normal, point, invIA, psm, invMassB, invIB, t1, t2, j, t3, t9, t14, t4);
      t6.set$angle(t7 - invIA * (t11 - t9 * t14));
      bodyA.synchronizeTransform$0();
      t2.setFrom$1(t1).mulLocal$1(invMassB);
      bodyB.get$sweep().get$center().addLocal$1(t2);
      t6 = bodyB.get$sweep();
      t16 = t6.get$angle();
      if (typeof t16 !== 'number')
        return this.solvePositionConstraints$1$bailout(25, baumgarte, invIB, minSeparation, t1, t2, j, t6, t16, i, t3, c, bodyA, bodyB, t4, invMassA, normal, point, psm, invIA, invMassB);
      t18 = t4.x;
      if (typeof t18 !== 'number')
        return this.solvePositionConstraints$1$bailout(26, baumgarte, invIB, minSeparation, t1, t2, j, t6, t16, i, t3, c, bodyA, bodyB, t4, t18, invMassA, normal, point, invIA, psm, invMassB);
      t20 = t1.y;
      if (typeof t20 !== 'number')
        return this.solvePositionConstraints$1$bailout(27, baumgarte, invIB, minSeparation, t1, t2, j, t6, t16, i, t3, c, bodyA, bodyB, t4, t18, t20, normal, invMassA, invIA, point, psm, invMassB);
      t20 = t18 * t20;
      t18 = t4.y;
      if (typeof t18 !== 'number')
        return this.solvePositionConstraints$1$bailout(28, baumgarte, invIB, minSeparation, t1, t2, j, t6, t16, i, t3, c, bodyA, t20, bodyB, t4, invMassA, normal, t18, point, invIA, psm, invMassB);
      t23 = t1.x;
      if (typeof t23 !== 'number')
        return this.solvePositionConstraints$1$bailout(29, baumgarte, invIB, minSeparation, t1, t2, j, t6, t16, i, t3, c, bodyA, t20, bodyB, t4, invMassA, normal, t18, t23, invIA, point, psm, invMassB);
      t6.set$angle(t16 + invIB * (t20 - t18 * t23));
      bodyB.synchronizeTransform$0();
      ++j;
    }
    ++i;
  }
  return minSeparation >= -0.0075;
},
 solvePositionConstraints$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22) {
  switch (state0) {
    case 1:
      point = env10;
      normal = env9;
      psm = env8;
      t4 = env7;
      t5 = env6;
      t3 = env5;
      i = env4;
      t2 = env3;
      t1 = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 2:
      point = env13;
      normal = env12;
      psm = env11;
      t4 = env10;
      t5 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 3:
      point = env14;
      normal = env13;
      psm = env12;
      t7 = env11;
      t4 = env10;
      t5 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 4:
      t7 = env14;
      psm = env13;
      point = env12;
      normal = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 5:
      t9 = env15;
      t7 = env14;
      psm = env13;
      point = env12;
      normal = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 6:
      t9 = env15;
      invIA = env14;
      psm = env13;
      point = env12;
      normal = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 7:
      t11 = env16;
      t9 = env15;
      invIA = env14;
      psm = env13;
      point = env12;
      normal = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 8:
      t11 = env16;
      invMassB = env15;
      invIA = env14;
      psm = env13;
      point = env12;
      normal = env11;
      invMassA = env10;
      t4 = env9;
      bodyB = env8;
      bodyA = env7;
      c = env6;
      t3 = env5;
      t1 = env4;
      t2 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 9:
      t11 = env17;
      invMassB = env16;
      invIA = env15;
      psm = env14;
      point = env13;
      normal = env12;
      invMassA = env11;
      t4 = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      t3 = env6;
      i = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      t13 = env1;
      baumgarte = env0;
      break;
    case 10:
      invMassB = env18;
      invIA = env17;
      psm = env16;
      point = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      t5 = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      i = env7;
      minSeparation = env6;
      t3 = env5;
      j = env4;
      t2 = env3;
      t1 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 11:
      invMassB = env18;
      psm = env17;
      invIA = env16;
      separation = env15;
      point = env14;
      normal = env13;
      invMassA = env12;
      t4 = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      i = env7;
      minSeparation = env6;
      t3 = env5;
      j = env4;
      t2 = env3;
      t1 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 12:
      invMassB = env19;
      t7 = env18;
      invIA = env17;
      psm = env16;
      point = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      C = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      i = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 13:
      t9 = env20;
      invMassB = env19;
      t7 = env18;
      invIA = env17;
      psm = env16;
      point = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      C = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      i = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 14:
      t7 = env20;
      invMassB = env19;
      psm = env18;
      invIA = env17;
      point = env16;
      t9 = env15;
      normal = env14;
      invMassA = env13;
      t4 = env12;
      C = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      i = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 15:
      t7 = env21;
      invMassB = env20;
      psm = env19;
      invIA = env18;
      point = env17;
      t9 = env16;
      normal = env15;
      invMassA = env14;
      t4 = env13;
      C = env12;
      bodyB = env11;
      bodyA = env10;
      c = env9;
      i = env8;
      t3 = env7;
      j = env6;
      t2 = env5;
      t1 = env4;
      minSeparation = env3;
      invIB = env2;
      baumgarte = env1;
      t12 = env0;
      break;
    case 16:
      rnA = env20;
      invMassB = env19;
      invIA = env18;
      psm = env17;
      point = env16;
      normal = env15;
      invMassA = env14;
      t4 = env13;
      C = env12;
      bodyB = env11;
      bodyA = env10;
      c = env9;
      i = env8;
      t3 = env7;
      j = env6;
      t2 = env5;
      t1 = env4;
      minSeparation = env3;
      t9 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 17:
      rnA = env21;
      invMassB = env20;
      invIA = env19;
      psm = env18;
      point = env17;
      normal = env16;
      invMassA = env15;
      t4 = env14;
      C = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      i = env9;
      t3 = env8;
      j = env7;
      t2 = env6;
      t1 = env5;
      minSeparation = env4;
      t15 = env3;
      t9 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 18:
      rnA = env21;
      invMassB = env20;
      invIA = env19;
      psm = env18;
      point = env17;
      normal = env16;
      invMassA = env15;
      t4 = env14;
      C = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      i = env9;
      t3 = env8;
      j = env7;
      t2 = env6;
      t1 = env5;
      minSeparation = env4;
      t9 = env3;
      t15 = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 19:
      t4 = env22;
      t3 = env21;
      j = env20;
      t2 = env19;
      t1 = env18;
      t18 = env17;
      t9 = env16;
      t15 = env15;
      invIB = env14;
      rnA = env13;
      invMassB = env12;
      invIA = env11;
      psm = env10;
      point = env9;
      normal = env8;
      invMassA = env7;
      C = env6;
      bodyB = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 20:
      invMassB = env19;
      invIA = env18;
      psm = env17;
      point = env16;
      normal = env15;
      invMassA = env14;
      t4 = env13;
      c = env12;
      bodyB = env11;
      bodyA = env10;
      t6 = env9;
      t5 = env8;
      i = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 21:
      invMassB = env20;
      psm = env19;
      invIA = env18;
      point = env17;
      normal = env16;
      invMassA = env15;
      i = env14;
      t4 = env13;
      c = env12;
      bodyB = env11;
      bodyA = env10;
      t6 = env9;
      t5 = env8;
      t8 = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 22:
      invMassB = env21;
      psm = env20;
      invIA = env19;
      point = env18;
      normal = env17;
      invMassA = env16;
      i = env15;
      t4 = env14;
      c = env13;
      bodyB = env12;
      bodyA = env11;
      t6 = env10;
      t5 = env9;
      t10 = env8;
      t8 = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 23:
      invMassB = env21;
      psm = env20;
      invIA = env19;
      point = env18;
      normal = env17;
      invMassA = env16;
      t10 = env15;
      t5 = env14;
      t4 = env13;
      c = env12;
      bodyB = env11;
      bodyA = env10;
      t6 = env9;
      t8 = env8;
      i = env7;
      t3 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 24:
      t4 = env22;
      t13 = env21;
      t8 = env20;
      t3 = env19;
      j = env18;
      t2 = env17;
      t1 = env16;
      invIB = env15;
      invMassB = env14;
      psm = env13;
      invIA = env12;
      point = env11;
      normal = env10;
      invMassA = env9;
      t10 = env8;
      c = env7;
      bodyB = env6;
      bodyA = env5;
      t6 = env4;
      t5 = env3;
      i = env2;
      minSeparation = env1;
      baumgarte = env0;
      break;
    case 25:
      invMassB = env19;
      invIA = env18;
      psm = env17;
      point = env16;
      normal = env15;
      invMassA = env14;
      t4 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      i = env8;
      t15 = env7;
      t5 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 26:
      invMassB = env20;
      psm = env19;
      invIA = env18;
      point = env17;
      normal = env16;
      invMassA = env15;
      t17 = env14;
      t4 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      i = env8;
      t15 = env7;
      t5 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 27:
      invMassB = env21;
      psm = env20;
      point = env19;
      invIA = env18;
      invMassA = env17;
      normal = env16;
      t19 = env15;
      t17 = env14;
      t4 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      i = env8;
      t15 = env7;
      t5 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 28:
      invMassB = env21;
      psm = env20;
      invIA = env19;
      point = env18;
      t17 = env17;
      normal = env16;
      invMassA = env15;
      t4 = env14;
      bodyB = env13;
      t19 = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      i = env8;
      t15 = env7;
      t5 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
    case 29:
      invMassB = env22;
      psm = env21;
      point = env20;
      invIA = env19;
      t22 = env18;
      t17 = env17;
      normal = env16;
      invMassA = env15;
      t4 = env14;
      bodyB = env13;
      t19 = env12;
      bodyA = env11;
      c = env10;
      t3 = env9;
      i = env8;
      t15 = env7;
      t5 = env6;
      j = env5;
      t2 = env4;
      t1 = env3;
      minSeparation = env2;
      invIB = env1;
      baumgarte = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.P;
      t2 = this.temp1;
      t3 = this.rA;
      t4 = this.rB;
      psm = this.psolver;
      normal = psm.normal;
      point = psm.point;
      minSeparation = 0;
      i = 0;
    default:
      var t1, t2, t3, t4, psm, normal, point, minSeparation, i, t5, baumgarte, c, bodyA, bodyB, t7, invMassA, t9, invIA, t11, invMassB, t13, invIB, j, separation, t6, C, t12, rnA, t15, t18, rnB, K, impulse, t8, t10, t17, t19, t22;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t5 = this.constraintCount;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t5))
                break L0;
              t5 = this.constraints;
              if (i >= t5.length)
                throw $.ioore(i);
              c = t5[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              t5 = bodyA.get$mass();
            case 2:
              state0 = 0;
              t7 = bodyA.get$invMass();
            case 3:
              state0 = 0;
              invMassA = $.mul(t5, t7);
              t7 = bodyA.get$mass();
            case 4:
              state0 = 0;
              t9 = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              invIA = $.mul(t7, t9);
              t9 = bodyB.get$mass();
            case 6:
              state0 = 0;
              t11 = bodyB.get$invMass();
            case 7:
              state0 = 0;
              invMassB = $.mul(t9, t11);
              t11 = bodyB.get$mass();
            case 8:
              state0 = 0;
              t13 = bodyB.get$invInertia();
            case 9:
              state0 = 0;
              invIB = $.mul(t11, t13);
              j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t5 = c.get$pointCount();
                    case 10:
                      state0 = 0;
                      if (!$.ltB(j, t5))
                        break L1;
                      psm.initialize$2(c, j);
                      separation = psm.separation;
                    case 11:
                      state0 = 0;
                      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
                      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
                      minSeparation = $.min(minSeparation, separation);
                      t6 = $.add(separation, 0.005);
                      if (typeof t6 !== 'number')
                        throw $.iae(t6);
                      C = $.max(-0.2, $.min(baumgarte * t6, 0));
                      t7 = t3.x;
                    case 12:
                      state0 = 0;
                      t9 = normal.y;
                    case 13:
                      state0 = 0;
                      t9 = $.mul(t7, t9);
                      t7 = t3.y;
                    case 14:
                      state0 = 0;
                      t12 = normal.x;
                    case 15:
                      state0 = 0;
                      rnA = $.sub(t9, $.mul(t7, t12));
                      t9 = t4.x;
                    case 16:
                      state0 = 0;
                      t15 = normal.y;
                    case 17:
                      state0 = 0;
                      t15 = $.mul(t9, t15);
                      t9 = t4.y;
                    case 18:
                      state0 = 0;
                      t18 = normal.x;
                    case 19:
                      state0 = 0;
                      rnB = $.sub(t15, $.mul(t9, t18));
                      K = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rnA), rnA)), $.mul($.mul(invIB, rnB), rnB));
                      if ($.gtB(K, 0)) {
                        t5 = -C;
                        if (typeof K !== 'number')
                          throw $.iae(K);
                        impulse = t5 / K;
                      } else
                        impulse = 0;
                      t1.setFrom$1(normal).mulLocal$1(impulse);
                      t2.setFrom$1(t1).mulLocal$1(invMassA);
                      bodyA.get$sweep().get$center().subLocal$1(t2);
                      t5 = bodyA.get$sweep();
                      t6 = t5.get$angle();
                    case 20:
                      state0 = 0;
                      t8 = t3.x;
                    case 21:
                      state0 = 0;
                      t10 = t1.y;
                    case 22:
                      state0 = 0;
                      t10 = $.mul(t8, t10);
                      t8 = t3.y;
                    case 23:
                      state0 = 0;
                      t13 = t1.x;
                    case 24:
                      state0 = 0;
                      t5.set$angle($.sub(t6, $.mul(invIA, $.sub(t10, $.mul(t8, t13)))));
                      bodyA.synchronizeTransform$0();
                      t2.setFrom$1(t1).mulLocal$1(invMassB);
                      bodyB.get$sweep().get$center().addLocal$1(t2);
                      t5 = bodyB.get$sweep();
                      t15 = t5.get$angle();
                    case 25:
                      state0 = 0;
                      t17 = t4.x;
                    case 26:
                      state0 = 0;
                      t19 = t1.y;
                    case 27:
                      state0 = 0;
                      t19 = $.mul(t17, t19);
                      t17 = t4.y;
                    case 28:
                      state0 = 0;
                      t22 = t1.x;
                    case 29:
                      state0 = 0;
                      t5.set$angle($.add(t15, $.mul(invIB, $.sub(t19, $.mul(t17, t22)))));
                      bodyB.synchronizeTransform$0();
                      ++j;
                  }
              ++i;
          }
      return minSeparation >= -0.0075;
  }
},
 ContactSolver$0: function() {
  var i, t1, t2;
  for (i = 0; t1 = this.constraints, i < t1.length; ++i) {
    t2 = $.ContactConstraint$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.PositionSolverManifold = {"": ["normal?", "point?", "separation?", "pointA", "pointB", "temp", "planePoint", "clipPoint"],
 "super": "Object",
 initialize$2: function(cc, index) {
  var t1, t2, t3, t4, t5;
  switch (cc.get$type()) {
    case 0:
      t1 = cc.get$bodyA();
      t2 = cc.get$localPoint();
      t3 = this.pointA;
      t1.getWorldPointToOut$2(t2, t3);
      t2 = cc.get$bodyB();
      t1 = $.index(cc.get$points(), 0).get$localPoint();
      t4 = this.pointB;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = $.gtB($.MathBox_distanceSquared(t3, t4), 1.4208639999999999e-14);
      t2 = this.normal;
      if (t1) {
        t2.setFrom$1(t4).subLocal$1(t3);
        t2.normalize$0();
      } else
        t2.setCoords$2(1, 0);
      this.point.setFrom$1(t3).addLocal$1(t4).mulLocal$1(0.5);
      t1 = this.temp;
      t1.setFrom$1(t4).subLocal$1(t3);
      t3 = this.normal;
      this.separation = $.sub($.add($.mul(t1.x, t3.x), $.mul(t1.y, t3.y)), cc.get$radius());
      break;
    case 1:
      t1 = cc.get$bodyA();
      t2 = cc.get$localNormal();
      t3 = this.normal;
      t1.getWorldVectorToOut$2(t2, t3);
      t2 = cc.get$bodyA();
      t1 = cc.get$localPoint();
      t4 = this.planePoint;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = cc.get$bodyB();
      t2 = $.index(cc.get$points(), index).get$localPoint();
      t5 = this.clipPoint;
      t1.getWorldPointToOut$2(t2, t5);
      t2 = this.temp;
      t2.setFrom$1(t5).subLocal$1(t4);
      this.separation = $.sub($.add($.mul(t2.x, t3.x), $.mul(t2.y, t3.y)), cc.get$radius());
      this.point.setFrom$1(t5);
      break;
    case 2:
      t1 = cc.get$bodyB();
      t2 = cc.get$localNormal();
      t3 = this.normal;
      t1.getWorldVectorToOut$2(t2, t3);
      t2 = cc.get$bodyB();
      t1 = cc.get$localPoint();
      t4 = this.planePoint;
      t2.getWorldPointToOut$2(t1, t4);
      t1 = cc.get$bodyA();
      t2 = $.index(cc.get$points(), index).get$localPoint();
      t5 = this.clipPoint;
      t1.getWorldPointToOut$2(t2, t5);
      t2 = this.temp;
      t2.setFrom$1(t5).subLocal$1(t4);
      this.separation = $.sub($.add($.mul(t2.x, t3.x), $.mul(t2.y, t3.y)), cc.get$radius());
      this.point.setFrom$1(t5);
      t3.negateLocal$0();
      break;
  }
}
};

$$.PolygonAndCircleContact = {"": ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(1, fA.get$type(), null);
  $.Expect_equals(0, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collidePolygonAndCircle$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.PolygonContact = {"": ["flags", "prev", "next", "edge1", "edge2", "fixtureA", "fixtureB", "manifold", "toiCount", "pool", "_oldManifold"],
 "super": "Contact",
 init$2: function(fA, fB) {
  $.Expect_equals(1, fA.get$type(), null);
  $.Expect_equals(1, fB.get$type(), null);
  $.Contact.prototype.init$2.call(this, fA, fB);
},
 evaluate$3: function(argManifold, xfA, xfB) {
  this.pool.collision.collidePolygons$5(argManifold, this.fixtureA.get$shape(), xfA, this.fixtureB.get$shape(), xfB);
}
};

$$.TimeOfImpactSolver = {"": ["constraints?", "count=", "toiBody", "psm", "rA?", "rB?", "P", "temp"],
 "super": "Object",
 initialize$3: function(contacts, argCount, argToiBody) {
  var old, i, t1, t2, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, constraint, j, cp;
  if (typeof contacts !== 'string' && (typeof contacts !== 'object' || contacts === null || contacts.constructor !== Array && !contacts.is$JavaScriptIndexingBehavior()))
    return this.initialize$3$bailout(1, contacts, argCount, argToiBody);
  this.count = argCount;
  this.toiBody = argToiBody;
  if ($.geB(this.count, this.constraints.length)) {
    old = this.constraints;
    this.constraints = $._ListImpl_List($.max(this.count, old.length * 2));
    $.setRange$3(this.constraints, 0, old.length, old);
    for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
      t2 = $.TimeOfImpactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (i = 0; $.ltB(i, this.count); ++i) {
    if (i >= contacts.length)
      throw $.ioore(i);
    contact = contacts[i];
    fixtureA = contact.get$fixtureA();
    fixtureB = contact.get$fixtureB();
    shapeA = fixtureA.get$shape();
    shapeB = fixtureB.get$shape();
    radiusA = shapeA.get$radius();
    radiusB = shapeB.get$radius();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    manifold = contact.get$manifold();
    t1 = this.constraints;
    if (i >= t1.length)
      throw $.ioore(i);
    constraint = t1[i];
    constraint.set$bodyA(bodyA);
    constraint.set$bodyB(bodyB);
    constraint.get$localNormal().setFrom$1(manifold.get$localNormal());
    constraint.get$localPoint().setFrom$1(manifold.get$localPoint());
    constraint.set$type(manifold.get$type());
    constraint.set$pointCount(manifold.get$pointCount());
    constraint.set$radius($.add(radiusA, radiusB));
    for (j = 0; $.ltB(j, constraint.get$pointCount()); ++j) {
      cp = $.index(manifold.get$points(), j);
      $.indexSet(constraint.get$localPoints(), j, cp.get$localPoint());
    }
  }
},
 initialize$3$bailout: function(state0, contacts, argCount, argToiBody) {
  var old, i, t1, t2, contact, fixtureA, fixtureB, shapeA, shapeB, radiusA, radiusB, bodyA, bodyB, manifold, constraint, j, cp;
  this.count = argCount;
  this.toiBody = argToiBody;
  if ($.geB(this.count, this.constraints.length)) {
    old = this.constraints;
    this.constraints = $._ListImpl_List($.max(this.count, old.length * 2));
    $.setRange$3(this.constraints, 0, old.length, old);
    for (i = old.length; t1 = this.constraints, i < t1.length; ++i) {
      t2 = $.TimeOfImpactConstraint$();
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = t2;
    }
  }
  for (i = 0; $.ltB(i, this.count); ++i) {
    contact = $.index(contacts, i);
    fixtureA = contact.get$fixtureA();
    fixtureB = contact.get$fixtureB();
    shapeA = fixtureA.get$shape();
    shapeB = fixtureB.get$shape();
    radiusA = shapeA.get$radius();
    radiusB = shapeB.get$radius();
    bodyA = fixtureA.get$body();
    bodyB = fixtureB.get$body();
    manifold = contact.get$manifold();
    t1 = this.constraints;
    if (i >= t1.length)
      throw $.ioore(i);
    constraint = t1[i];
    constraint.set$bodyA(bodyA);
    constraint.set$bodyB(bodyB);
    constraint.get$localNormal().setFrom$1(manifold.get$localNormal());
    constraint.get$localPoint().setFrom$1(manifold.get$localPoint());
    constraint.set$type(manifold.get$type());
    constraint.set$pointCount(manifold.get$pointCount());
    constraint.set$radius($.add(radiusA, radiusB));
    for (j = 0; $.ltB(j, constraint.get$pointCount()); ++j) {
      cp = $.index(manifold.get$points(), j);
      $.indexSet(constraint.get$localPoints(), j, cp.get$localPoint());
    }
  }
},
 solve$1: function(baumgarte) {
  var t1, t2, t3, t4, t5, normal, point, i, minSeparation, t6, c, bodyA, bodyB, massA, massB, invMassA, invIA, invMassB, invIB, j, t7, separation, C, t8, t10, t12, t14, rnA, rnB, K, impulse, t15, t17, t19, t21, t24;
  t1 = this.P;
  t2 = this.temp;
  t3 = this.rA;
  t4 = this.rB;
  t5 = this.psm;
  normal = t5.normal;
  point = t5.point;
  i = 0;
  minSeparation = 0;
  while (true) {
    t6 = this.count;
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(1, baumgarte, t5, t4, normal, minSeparation, point, i, t1, t2, t3, t6);
    if (!(i < t6))
      break;
    t6 = this.constraints;
    if (i >= t6.length)
      throw $.ioore(i);
    c = t6[i];
    bodyA = c.get$bodyA();
    bodyB = c.get$bodyB();
    massA = bodyA.get$mass();
    if (typeof massA !== 'number')
      return this.solve$1$bailout(2, baumgarte, t5, t4, normal, minSeparation, point, i, c, bodyA, bodyB, massA, t1, t2, t3);
    massB = bodyB.get$mass();
    if (typeof massB !== 'number')
      return this.solve$1$bailout(3, baumgarte, t5, t4, normal, minSeparation, point, i, c, bodyA, bodyB, massA, massB, t1, t2, t3);
    if ($.eqB(bodyA, this.toiBody))
      massB = 0;
    else
      massA = 0;
    t6 = bodyA.get$invMass();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(4, baumgarte, massB, t5, t4, normal, minSeparation, point, i, c, bodyA, bodyB, t1, t2, massA, t3, t6);
    invMassA = massA * t6;
    t6 = bodyA.get$invInertia();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(5, baumgarte, invMassA, t6, t5, t4, normal, minSeparation, point, i, c, bodyA, bodyB, t1, t2, massA, t3, massB);
    invIA = massA * t6;
    t6 = bodyB.get$invMass();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(6, baumgarte, invMassA, invIA, t5, t4, normal, t6, point, minSeparation, i, c, bodyA, bodyB, t1, t2, t3, massB);
    invMassB = massB * t6;
    t6 = bodyB.get$invInertia();
    if (typeof t6 !== 'number')
      return this.solve$1$bailout(7, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, minSeparation, i, t6, c, bodyA, bodyB, t1, t2, t3, massB);
    invIB = massB * t6;
    t6 = invMassA + invMassB;
    j = 0;
    while (true) {
      t7 = c.get$pointCount();
      if (typeof t7 !== 'number')
        return this.solve$1$bailout(8, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, i, j, bodyA, bodyB, minSeparation, c, t1, t2, t7, t3);
      if (!(j < t7))
        break;
      t5.initialize$2(c, j);
      separation = t5.separation;
      if (typeof separation !== 'number')
        return this.solve$1$bailout(9, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, separation, i, j, bodyA, bodyB, minSeparation, c, t1, t2, t3);
      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
      minSeparation = $.min(minSeparation, separation);
      C = $.max(-0.2, $.min(baumgarte * (separation + 0.005), 0));
      t8 = t3.x;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(10, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, i, t8, j, bodyA, minSeparation, bodyB, c, t1, t2, t3);
      t10 = normal.y;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(11, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, i, t8, j, bodyA, minSeparation, bodyB, t10, t1, t2, t3, c);
      t8 *= t10;
      t12 = t3.y;
      if (typeof t12 !== 'number')
        return this.solve$1$bailout(12, C, invMassA, baumgarte, invIA, t8, t4, normal, invMassB, point, invIB, t5, i, j, bodyA, minSeparation, bodyB, t12, c, t1, t2, t3);
      t14 = normal.x;
      if (typeof t14 !== 'number')
        return this.solve$1$bailout(13, C, invMassA, baumgarte, invIA, t8, t4, normal, invMassB, point, invIB, t5, i, j, bodyA, minSeparation, bodyB, t12, t14, c, t1, t2, t3);
      rnA = t8 - t12 * t14;
      t8 = t4.x;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(14, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, rnA, i, j, bodyA, minSeparation, bodyB, t8, c, t1, t2, t3);
      t10 = t8 * t10;
      t8 = t4.y;
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(16, C, invMassA, baumgarte, invIA, t5, t4, normal, invMassB, point, invIB, rnA, i, j, bodyA, minSeparation, bodyB, t10, t8, t1, t2, t3, c);
      rnB = t10 - t8 * t14;
      K = t6 + invIA * rnA * rnA + invIB * rnB * rnB;
      impulse = K > 0 ? -C / K : 0;
      t1.setFrom$1(normal).mulLocal$1(impulse);
      t2.setFrom$1(t1).mulLocal$1(invMassA);
      bodyA.get$sweep().get$center().subLocal$1(t2);
      t7 = bodyA.get$sweep();
      t8 = t7.get$angle();
      if (typeof t8 !== 'number')
        return this.solve$1$bailout(18, baumgarte, invMassA, invIA, t5, t4, invMassB, normal, point, invIB, i, j, bodyA, minSeparation, bodyB, c, t1, t2, t7, t8, t3);
      t10 = t3.x;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(19, baumgarte, invMassA, invIA, t5, t4, invMassB, normal, point, invIB, i, j, bodyA, minSeparation, bodyB, c, t1, t2, t7, t8, t3, t10);
      t12 = t1.y;
      if (typeof t12 !== 'number')
        return this.solve$1$bailout(20, t12, baumgarte, invMassA, invIA, t5, t4, invMassB, normal, point, invIB, i, j, bodyA, minSeparation, bodyB, c, t1, t2, t7, t8, t3, t10);
      t12 = t10 * t12;
      t10 = t3.y;
      if (typeof t10 !== 'number')
        return this.solve$1$bailout(21, baumgarte, t10, invMassA, t12, invIA, t5, t4, invMassB, normal, point, invIB, i, j, bodyA, minSeparation, bodyB, c, t1, t2, t7, t8, t3);
      t15 = t1.x;
      if (typeof t15 !== 'number')
        return this.solve$1$bailout(22, baumgarte, t10, t15, t4, i, c, bodyA, minSeparation, bodyB, t7, t8, invMassA, t12, invIA, t5, invMassB, normal, point, invIB, j, t1, t2, t3);
      t7.set$angle(t8 - invIA * (t12 - t10 * t15));
      bodyA.synchronizeTransform$0();
      t2.setFrom$1(t1).mulLocal$1(invMassB);
      bodyB.get$sweep().get$center().addLocal$1(t2);
      t7 = bodyB.get$sweep();
      t17 = t7.get$angle();
      if (typeof t17 !== 'number')
        return this.solve$1$bailout(23, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, i, j, bodyA, minSeparation, bodyB, c, t7, t17, t1, t2, t3);
      t19 = t4.x;
      if (typeof t19 !== 'number')
        return this.solve$1$bailout(24, baumgarte, invMassA, invIA, t5, t4, normal, t19, point, invIB, i, invMassB, j, bodyA, minSeparation, bodyB, c, t7, t17, t1, t2, t3);
      t21 = t1.y;
      if (typeof t21 !== 'number')
        return this.solve$1$bailout(25, baumgarte, invMassA, invIA, t5, t4, normal, t19, t21, invIB, point, invMassB, j, bodyA, minSeparation, bodyB, i, c, t7, t17, t1, t2, t3);
      t21 = t19 * t21;
      t19 = t4.y;
      if (typeof t19 !== 'number')
        return this.solve$1$bailout(26, baumgarte, invMassA, invIA, t5, t4, normal, invMassB, point, invIB, t19, i, j, bodyA, minSeparation, bodyB, c, t7, t17, t1, t2, t3, t21);
      t24 = t1.x;
      if (typeof t24 !== 'number')
        return this.solve$1$bailout(27, baumgarte, t4, i, t19, t24, c, bodyA, minSeparation, bodyB, invMassA, invIA, t5, normal, invMassB, point, invIB, j, t7, t17, t1, t2, t3, t21);
      t7.set$angle(t17 + invIB * (t21 - t19 * t24));
      bodyB.synchronizeTransform$0();
      ++j;
    }
    ++i;
  }
  return minSeparation >= -0.0075;
},
 solve$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13, env14, env15, env16, env17, env18, env19, env20, env21, env22) {
  switch (state0) {
    case 1:
      t6 = env10;
      t3 = env9;
      t2 = env8;
      t1 = env7;
      i = env6;
      point = env5;
      minSeparation = env4;
      normal = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 2:
      t3 = env13;
      t2 = env12;
      t1 = env11;
      massA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      i = env6;
      point = env5;
      minSeparation = env4;
      normal = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 3:
      t3 = env14;
      t2 = env13;
      t1 = env12;
      massB = env11;
      massA = env10;
      bodyB = env9;
      bodyA = env8;
      c = env7;
      i = env6;
      point = env5;
      minSeparation = env4;
      normal = env3;
      t4 = env2;
      t5 = env1;
      baumgarte = env0;
      break;
    case 4:
      t6 = env15;
      t3 = env14;
      massA = env13;
      t2 = env12;
      t1 = env11;
      bodyB = env10;
      bodyA = env9;
      c = env8;
      i = env7;
      point = env6;
      minSeparation = env5;
      normal = env4;
      t4 = env3;
      t5 = env2;
      massB = env1;
      baumgarte = env0;
      break;
    case 5:
      massB = env16;
      t3 = env15;
      massA = env14;
      t2 = env13;
      t1 = env12;
      bodyB = env11;
      bodyA = env10;
      c = env9;
      i = env8;
      point = env7;
      minSeparation = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      t6 = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 6:
      massB = env16;
      t3 = env15;
      t2 = env14;
      t1 = env13;
      bodyB = env12;
      bodyA = env11;
      c = env10;
      i = env9;
      minSeparation = env8;
      point = env7;
      t6 = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 7:
      massB = env17;
      t3 = env16;
      t2 = env15;
      t1 = env14;
      bodyB = env13;
      bodyA = env12;
      c = env11;
      t6 = env10;
      i = env9;
      minSeparation = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 8:
      t3 = env18;
      t6 = env17;
      t2 = env16;
      t1 = env15;
      c = env14;
      minSeparation = env13;
      bodyB = env12;
      bodyA = env11;
      j = env10;
      i = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 9:
      t3 = env18;
      t2 = env17;
      t1 = env16;
      c = env15;
      minSeparation = env14;
      bodyB = env13;
      bodyA = env12;
      j = env11;
      i = env10;
      separation = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 10:
      t3 = env19;
      t2 = env18;
      t1 = env17;
      c = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      t8 = env11;
      i = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 11:
      c = env20;
      t3 = env19;
      t2 = env18;
      t1 = env17;
      t10 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      t8 = env11;
      i = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 12:
      t3 = env20;
      t2 = env19;
      t1 = env18;
      c = env17;
      t8 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      i = env11;
      t5 = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t10 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 13:
      t3 = env21;
      t2 = env20;
      t1 = env19;
      c = env18;
      t13 = env17;
      t8 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      i = env11;
      t5 = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t10 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 14:
      t3 = env20;
      t2 = env19;
      t1 = env18;
      c = env17;
      t10 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      i = env11;
      rnA = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 15:
      t3 = env21;
      t2 = env20;
      t1 = env19;
      c = env18;
      t16 = env17;
      t10 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      i = env11;
      rnA = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 16:
      c = env21;
      t3 = env20;
      t2 = env19;
      t1 = env18;
      t10 = env17;
      t16 = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      i = env11;
      rnA = env10;
      invIB = env9;
      point = env8;
      invMassB = env7;
      normal = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      baumgarte = env2;
      invMassA = env1;
      C = env0;
      break;
    case 17:
      t3 = env22;
      t2 = env21;
      t1 = env20;
      t19 = env19;
      t10 = env18;
      t16 = env17;
      j = env16;
      rnA = env15;
      invIB = env14;
      point = env13;
      invMassB = env12;
      normal = env11;
      t5 = env10;
      invIA = env9;
      invMassA = env8;
      C = env7;
      bodyB = env6;
      minSeparation = env5;
      bodyA = env4;
      c = env3;
      i = env2;
      t4 = env1;
      baumgarte = env0;
      break;
    case 18:
      t3 = env19;
      t7 = env18;
      t6 = env17;
      t2 = env16;
      t1 = env15;
      c = env14;
      bodyB = env13;
      minSeparation = env12;
      bodyA = env11;
      j = env10;
      i = env9;
      invIB = env8;
      point = env7;
      normal = env6;
      invMassB = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 19:
      t9 = env20;
      t3 = env19;
      t7 = env18;
      t6 = env17;
      t2 = env16;
      t1 = env15;
      c = env14;
      bodyB = env13;
      minSeparation = env12;
      bodyA = env11;
      j = env10;
      i = env9;
      invIB = env8;
      point = env7;
      normal = env6;
      invMassB = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 20:
      t9 = env21;
      t3 = env20;
      t7 = env19;
      t6 = env18;
      t2 = env17;
      t1 = env16;
      c = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      j = env11;
      i = env10;
      invIB = env9;
      point = env8;
      normal = env7;
      invMassB = env6;
      t4 = env5;
      t5 = env4;
      invIA = env3;
      invMassA = env2;
      baumgarte = env1;
      t11 = env0;
      break;
    case 21:
      t3 = env21;
      t7 = env20;
      t6 = env19;
      t2 = env18;
      t1 = env17;
      c = env16;
      bodyB = env15;
      minSeparation = env14;
      bodyA = env13;
      j = env12;
      i = env11;
      invIB = env10;
      point = env9;
      normal = env8;
      invMassB = env7;
      t4 = env6;
      t5 = env5;
      invIA = env4;
      t11 = env3;
      invMassA = env2;
      t9 = env1;
      baumgarte = env0;
      break;
    case 22:
      t3 = env22;
      t2 = env21;
      t1 = env20;
      j = env19;
      invIB = env18;
      point = env17;
      normal = env16;
      invMassB = env15;
      t5 = env14;
      invIA = env13;
      t11 = env12;
      invMassA = env11;
      t7 = env10;
      t6 = env9;
      bodyB = env8;
      minSeparation = env7;
      bodyA = env6;
      c = env5;
      i = env4;
      t4 = env3;
      t14 = env2;
      t9 = env1;
      baumgarte = env0;
      break;
    case 23:
      t3 = env19;
      t2 = env18;
      t1 = env17;
      t16 = env16;
      t6 = env15;
      c = env14;
      bodyB = env13;
      minSeparation = env12;
      bodyA = env11;
      j = env10;
      i = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 24:
      t3 = env20;
      t2 = env19;
      t1 = env18;
      t16 = env17;
      t6 = env16;
      c = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      j = env11;
      invMassB = env10;
      i = env9;
      invIB = env8;
      point = env7;
      t18 = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 25:
      t3 = env21;
      t2 = env20;
      t1 = env19;
      t16 = env18;
      t6 = env17;
      c = env16;
      i = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      j = env11;
      invMassB = env10;
      point = env9;
      invIB = env8;
      t20 = env7;
      t18 = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 26:
      t20 = env21;
      t3 = env20;
      t2 = env19;
      t1 = env18;
      t16 = env17;
      t6 = env16;
      c = env15;
      bodyB = env14;
      minSeparation = env13;
      bodyA = env12;
      j = env11;
      i = env10;
      t18 = env9;
      invIB = env8;
      point = env7;
      invMassB = env6;
      normal = env5;
      t4 = env4;
      t5 = env3;
      invIA = env2;
      invMassA = env1;
      baumgarte = env0;
      break;
    case 27:
      t20 = env22;
      t3 = env21;
      t2 = env20;
      t1 = env19;
      t16 = env18;
      t6 = env17;
      j = env16;
      invIB = env15;
      point = env14;
      invMassB = env13;
      normal = env12;
      t5 = env11;
      invIA = env10;
      invMassA = env9;
      bodyB = env8;
      minSeparation = env7;
      bodyA = env6;
      c = env5;
      t23 = env4;
      t18 = env3;
      i = env2;
      t4 = env1;
      baumgarte = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.P;
      t2 = this.temp;
      t3 = this.rA;
      t4 = this.rB;
      t5 = this.psm;
      normal = t5.normal;
      point = t5.point;
      i = 0;
      minSeparation = 0;
    default:
      var t1, t2, t3, t4, t5, normal, point, i, minSeparation, t6, baumgarte, c, bodyA, bodyB, massA, massB, invMassA, invIA, invMassB, invIB, j, separation, t7, C, t8, t10, t13, rnA, t16, t19, rnB, K, impulse, t9, t11, t14, t18, t20, t23;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t6 = this.count;
            case 1:
              state0 = 0;
              if (!$.ltB(i, t6))
                break L0;
              t6 = this.constraints;
              if (i >= t6.length)
                throw $.ioore(i);
              c = t6[i];
              bodyA = c.get$bodyA();
              bodyB = c.get$bodyB();
              massA = bodyA.get$mass();
            case 2:
              state0 = 0;
              massB = bodyB.get$mass();
            case 3:
              state0 = 0;
              if ($.eqB(bodyA, this.toiBody))
                massB = 0;
              else
                massA = 0;
              t6 = bodyA.get$invMass();
            case 4:
              state0 = 0;
              invMassA = $.mul(massA, t6);
              t6 = bodyA.get$invInertia();
            case 5:
              state0 = 0;
              invIA = $.mul(massA, t6);
              t6 = bodyB.get$invMass();
            case 6:
              state0 = 0;
              invMassB = $.mul(massB, t6);
              t6 = bodyB.get$invInertia();
            case 7:
              state0 = 0;
              invIB = $.mul(massB, t6);
              j = 0;
            default:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      t6 = c.get$pointCount();
                    case 8:
                      state0 = 0;
                      if (!$.ltB(j, t6))
                        break L1;
                      t5.initialize$2(c, j);
                      separation = t5.separation;
                    case 9:
                      state0 = 0;
                      t3.setFrom$1(point).subLocal$1(bodyA.get$sweep().get$center());
                      t4.setFrom$1(point).subLocal$1(bodyB.get$sweep().get$center());
                      minSeparation = $.min(minSeparation, separation);
                      t7 = $.add(separation, 0.005);
                      if (typeof t7 !== 'number')
                        throw $.iae(t7);
                      C = $.max(-0.2, $.min(baumgarte * t7, 0));
                      t8 = t3.x;
                    case 10:
                      state0 = 0;
                      t10 = normal.y;
                    case 11:
                      state0 = 0;
                      t10 = $.mul(t8, t10);
                      t8 = t3.y;
                    case 12:
                      state0 = 0;
                      t13 = normal.x;
                    case 13:
                      state0 = 0;
                      rnA = $.sub(t10, $.mul(t8, t13));
                      t10 = t4.x;
                    case 14:
                      state0 = 0;
                      t16 = normal.y;
                    case 15:
                      state0 = 0;
                      t16 = $.mul(t10, t16);
                      t10 = t4.y;
                    case 16:
                      state0 = 0;
                      t19 = normal.x;
                    case 17:
                      state0 = 0;
                      rnB = $.sub(t16, $.mul(t10, t19));
                      K = $.add($.add($.add(invMassA, invMassB), $.mul($.mul(invIA, rnA), rnA)), $.mul($.mul(invIB, rnB), rnB));
                      if ($.gtB(K, 0)) {
                        t6 = -C;
                        if (typeof K !== 'number')
                          throw $.iae(K);
                        impulse = t6 / K;
                      } else
                        impulse = 0;
                      t1.setFrom$1(normal).mulLocal$1(impulse);
                      t2.setFrom$1(t1).mulLocal$1(invMassA);
                      bodyA.get$sweep().get$center().subLocal$1(t2);
                      t6 = bodyA.get$sweep();
                      t7 = t6.get$angle();
                    case 18:
                      state0 = 0;
                      t9 = t3.x;
                    case 19:
                      state0 = 0;
                      t11 = t1.y;
                    case 20:
                      state0 = 0;
                      t11 = $.mul(t9, t11);
                      t9 = t3.y;
                    case 21:
                      state0 = 0;
                      t14 = t1.x;
                    case 22:
                      state0 = 0;
                      t6.set$angle($.sub(t7, $.mul(invIA, $.sub(t11, $.mul(t9, t14)))));
                      bodyA.synchronizeTransform$0();
                      t2.setFrom$1(t1).mulLocal$1(invMassB);
                      bodyB.get$sweep().get$center().addLocal$1(t2);
                      t6 = bodyB.get$sweep();
                      t16 = t6.get$angle();
                    case 23:
                      state0 = 0;
                      t18 = t4.x;
                    case 24:
                      state0 = 0;
                      t20 = t1.y;
                    case 25:
                      state0 = 0;
                      t20 = $.mul(t18, t20);
                      t18 = t4.y;
                    case 26:
                      state0 = 0;
                      t23 = t1.x;
                    case 27:
                      state0 = 0;
                      t6.set$angle($.add(t16, $.mul(invIB, $.sub(t20, $.mul(t18, t23)))));
                      bodyB.synchronizeTransform$0();
                      ++j;
                  }
              ++i;
          }
      return minSeparation >= -0.0075;
  }
},
 TimeOfImpactSolver$0: function() {
  var i, t1, t2;
  for (i = 0; t1 = this.constraints, i < t1.length; ++i) {
    t2 = $.TimeOfImpactConstraint$();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
}
};

$$.TimeOfImpactSolverManifold = {"": ["normal?", "point?", "separation?", "pointA", "pointB", "temp", "planePoint", "clipPoint"],
 "super": "Object",
 initialize$2: function(cc, index) {
  var t1, t2, t3, t4;
  switch (cc.get$type()) {
    case 0:
      t1 = this.pointA;
      t1.setFrom$1(cc.get$bodyA().getWorldPoint$1(cc.get$localPoint()));
      t2 = this.pointB;
      t2.setFrom$1(cc.get$bodyB().getWorldPoint$1($.index(cc.get$localPoints(), 0)));
      t3 = $.gtB($.MathBox_distanceSquared(t1, t2), 1.4208639999999999e-14);
      t4 = this.normal;
      if (t3) {
        t4.setFrom$1(t2).subLocal$1(t1);
        t4.normalize$0();
      } else
        t4.setCoords$2(1, 0);
      this.point.setFrom$1(t1).addLocal$1(t2).mulLocal$1(0.5);
      t3 = this.temp;
      t3.setFrom$1(t2).subLocal$1(t1);
      t1 = this.normal;
      this.separation = $.sub($.add($.mul(t3.x, t1.x), $.mul(t3.y, t1.y)), cc.get$radius());
      break;
    case 1:
      t1 = this.normal;
      t1.setFrom$1(cc.get$bodyA().getWorldVector$1(cc.get$localNormal()));
      t2 = this.planePoint;
      t2.setFrom$1(cc.get$bodyA().getWorldPoint$1(cc.get$localPoint()));
      t3 = this.clipPoint;
      t3.setFrom$1(cc.get$bodyB().getWorldPoint$1($.index(cc.get$localPoints(), index)));
      t4 = this.temp;
      t4.setFrom$1(t3).subLocal$1(t2);
      this.separation = $.sub($.add($.mul(t4.x, t1.x), $.mul(t4.y, t1.y)), cc.get$radius());
      this.point.setFrom$1(t3);
      break;
    case 2:
      t1 = this.normal;
      t1.setFrom$1(cc.get$bodyB().getWorldVector$1(cc.get$localNormal()));
      t2 = this.planePoint;
      t2.setFrom$1(cc.get$bodyB().getWorldPoint$1(cc.get$localPoint()));
      t3 = this.clipPoint;
      t3.setFrom$1(cc.get$bodyA().getWorldPoint$1($.index(cc.get$localPoints(), index)));
      t4 = this.temp;
      t4.setFrom$1(t3).subLocal$1(t2);
      this.separation = $.sub($.add($.mul(t4.x, t1.x), $.mul(t4.y, t1.y)), cc.get$radius());
      this.point.setFrom$1(t3);
      t1.negateLocal$0();
      break;
  }
}
};

$$.TimeOfImpactConstraint = {"": ["localPoints?", "localNormal?", "localPoint?", "type=", "radius=", "pointCount=", "bodyA=", "bodyB="],
 "super": "Object",
 setFrom$1: function(argOther) {
  var t1, t2, i, t3, t4;
  for (t1 = this.localPoints, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    t4 = argOther.get$localPoints();
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.setFrom$1$bailout(1, argOther, t3, t4, i, t2, t1);
    if (i >= t4.length)
      throw $.ioore(i);
    t3.setFrom$1(t4[i]);
  }
  this.localNormal.setFrom$1(argOther.get$localNormal());
  this.localPoint.setFrom$1(argOther.get$localPoint());
  this.type = argOther.get$type();
  this.radius = argOther.get$radius();
  this.pointCount = argOther.get$pointCount();
  this.bodyA = argOther.get$bodyA();
  this.bodyB = argOther.get$bodyB();
},
 setFrom$1$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env5;
      t2 = env4;
      i = env3;
      t4 = env2;
      t3 = env1;
      argOther = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.localPoints;
      t2 = t1.length;
      i = 0;
    case 1:
      var t1, t2, i, t3, t4, argOther;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(i < t2))
                break L0;
              t3 = t1[i];
              t4 = argOther.get$localPoints();
            case 1:
              state0 = 0;
              t3.setFrom$1($.index(t4, i));
              ++i;
          }
      this.localNormal.setFrom$1(argOther.get$localNormal());
      this.localPoint.setFrom$1(argOther.get$localPoint());
      this.type = argOther.get$type();
      this.radius = argOther.get$radius();
      this.pointCount = argOther.get$pointCount();
      this.bodyA = argOther.get$bodyA();
      this.bodyB = argOther.get$bodyB();
  }
},
 TimeOfImpactConstraint$0: function() {
  var t1, t2, i;
  for (t1 = this.localPoints, t2 = t1.length, i = 0; i < t2; ++i)
    t1[i] = $.Vector$(0, 0);
}
};

$$.DefaultWorldPool = {"": ["collision", "timeOfImpact?", "distance"],
 "super": "Object",
 timeOfImpact$2: function(arg0, arg1) { return this.timeOfImpact.call$2(arg0, arg1); },
 distance$3: function(arg0, arg1, arg2) { return this.distance.call$3(arg0, arg1, arg2); },
 getCircleContactStack$0: function() {
  var queue, i;
  queue = $.Queue_Queue();
  for (i = 0; i < 10; ++i)
    queue.addFirst$1($.CircleContact$(this));
  return queue;
},
 getPolyCircleContactStack$0: function() {
  var queue, i;
  queue = $.Queue_Queue();
  for (i = 0; i < 10; ++i)
    queue.addFirst$1($.PolygonAndCircleContact$(this));
  return queue;
},
 getPolyContactStack$0: function() {
  var queue, i;
  queue = $.Queue_Queue();
  for (i = 0; i < 10; ++i)
    queue.addFirst$1($.PolygonContact$(this));
  return queue;
},
 DefaultWorldPool$0: function() {
  this.distance = $.Distance$_construct();
  this.collision = $.Collision$_construct(this);
  this.timeOfImpact = $.TimeOfImpact$_construct(this);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["values_3", "copies_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_3;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_2, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_2, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["writeSlot_8", "readSlot_7", "findSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_6.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_6.call$1(e);
    t2 = this.readSlot_7;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, elementCopy, length$, copy, slot, i);
          for (t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, i);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$('structured clone of other type'));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      i = env6;
      slot = env5;
      copy = env4;
      length$ = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 3:
      i = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_6.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, copy, t3, i, element, elementCopy, j;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.get$length(e);
            slot = this.findSlot_6.call$1(e);
            t2 = this.readSlot_7;
            copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_8;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$('structured clone of other type'));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["box_0", "walk_9"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.Maps__emitMap_anon = {"": ["visiting_3", "result_2", "box_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_2, ', ');
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["values_1", "copies_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_1;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_0, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_0, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["mustCopy_7", "writeSlot_6", "readSlot_5", "findSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.get$length(e);
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.DoubleLinkedQueue_length__ = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.BroadPhase_updatePairs_anon = {"": [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(a, b);
}
};

$$.startRootIsolate_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"": ["completer_1", "port_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  var t1, t2;
  this.port_0.close$0();
  t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"": ["message_2", "replyTo_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, workerMessage, t3;
  t1 = this.this_0;
  t2 = this.replyTo_1;
  t1._checkReplyTo$1(t2);
  workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_2, 'replyTo', t2]));
  t2 = $._globalState0().get$isWorker() === true;
  t3 = $._globalState0;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"": ["box_0", "pos_5", "result_4", "completer_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_2;
  $.indexSet(t1, this.pos_5, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_4.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"": ["future_8", "result_7", "completer_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_7.get$isComplete() !== true)
    this.completer_6.completeException$2(exception, this.future_8.get$stackTrace());
  return true;
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.box_0;
  if ($.gtB(t1.i_2, 0))
    $.add$1(t1.sb_1, ', ');
  $.add$1(t1.sb_1, key);
  $.add$1(t1.sb_1, ': ');
  $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$._PendingSendPortFinder_visitMap_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$.Storage_values_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$._LinkedHashMapImpl_values__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$._HashMapImpl_values__ = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._PendingSendPortFinder_visitList_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"": ["replyTo_5", "message_4", "this_3"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, t3, isolate, shouldSerialize, msg;
  t1 = {};
  t2 = this.this_3;
  t3 = this.replyTo_5;
  t2._checkReplyTo$1(t3);
  isolate = $.index($._globalState0().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_callback() == null)
    return;
  shouldSerialize = !($._globalState0().get$currentContext() == null) && !$.eqB($._globalState0().get$currentContext().get$id(), t2.get$_isolateId());
  msg = this.message_4;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState0().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(shouldSerialize, t2, t1), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"": ["shouldSerialize_7", "this_6", "box_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.this_6;
  if (!(t1.get$_receivePort().get$_callback() == null)) {
    if (this.shouldSerialize_7 === true) {
      t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "closure_4", "arg1_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.Storage_keys_anon = {"": ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$._LinkedHashMapImpl_keys__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._HashMapImpl_keys__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._Copier_visitMap_anon = {"": ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1, t2;
  t1 = this.box_0.copy_10;
  t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon0 = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure1 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$$.BoundClosure2 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$$.BoundClosure3 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.coreSort = function(l, compare) {
  $._Sort__doSort(l, 0, $.sub($.get$length(l), 1), compare);
  return;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], $.makeLiteralMap([]), null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg2, closure, arg1));
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return 'Null';
  constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf('Chrome') !== -1 || userAgent.indexOf('DumpRenderTree') !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf('Firefox') !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf('MSIE') !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf('Opera') !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf('AppleWebKit') !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC3)[name$];
  if (!(dartMethod == null))
    methods['Object'] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global === true)
    $.add$1(sb, 'g');
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, length$, patternLength, startIndex, position, endIndex;
  result = $._ListImpl_List(null);
  length$ = $.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).get$hasNext();
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split('|');
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.eqB($.get$length(receiver), 0))
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.compareTo = function(a, b) {
  var aIsNegative, t1;
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        aIsNegative = $.get$isNegative(a);
        if ($.eqB(aIsNegative, $.get$isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.get$isNaN(a) === true) {
      if ($.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return receiver.operator$index$1($.sub($.get$length(receiver), 1));
};

$.setRange$3 = function(receiver, start, length$, from) {
  if ($.isJsArray(receiver))
    return $.setRange$4(receiver, start, length$, from, 0);
  return receiver.setRange$3(start, length$, from);
};

$.setRange$4 = function(receiver, start, length$, from, startFrom) {
  var t1;
  if (!$.isJsArray(receiver))
    return receiver.setRange$4(start, length$, from, startFrom);
  $.checkMutable(receiver, 'indexed set');
  if ($.eqB(length$, 0))
    return;
  $.checkNull(start);
  $.checkNull(length$);
  $.checkNull(from);
  $.checkNull(startFrom);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof startFrom === 'number' && Math.floor(startFrom) === startFrom))
    throw $.$$throw($.ArgumentError$(startFrom));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if ($.gtB(t1, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(t1));
  $.Arrays_copy(from, startFrom, receiver, start, length$);
};

$.get$isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.get$isNaN();
};

$.sort$1 = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.coreSort(receiver, compare);
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i;
  if (from === '')
    if (receiver === '')
      return to;
    else {
      result = $.StringBuffer_StringBuffer('');
      length$ = receiver.length;
      $.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC4, true), "\\$&"), false, false), true), to);
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.floor$0();
  return Math.floor(receiver);
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.getRange = function(receiver, start, length$) {
  var t1, end;
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$.get$isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.get$isNegative();
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  var length$;
  $.checkNum(startIndex);
  length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if (startIndex < 0)
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.RangeError$value(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.get$hashCode = function(receiver) {
  var length$, i, hash, hash0, hash1;
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  length$ = receiver.length;
  for (i = 0, hash = 0; i < length$; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.contains$1 = function(receiver, other) {
  var i;
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; i < receiver.length; ++i)
      if ($.eqB(other, receiver[i]))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.endsWith = function(receiver, other) {
  var receiverLength, otherLength;
  $.checkString(other);
  receiverLength = receiver.length;
  otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.main = function() {
  var bench2d = $.Bench2d$();
  bench2d.initialize$0();
  bench2d.warmup$0();
  bench2d.bench$0();
};

$.window = function() {
  return window;
};

$.Features$ = function() {
  return new $.Features(0, 0, 0, 0);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.DynamicTree$ = function() {
  var t1, t2, t3;
  t1 = $._ListImpl_List(4);
  t2 = $.Vector$(0, 0);
  t3 = $.AxisAlignedBox$(null, null);
  t3 = new $.DynamicTree(null, 0, null, 0, 0, $.Queue_Queue(), t1, 0, t2, t3, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t3.DynamicTree$0();
  return t3;
};

$.Pair$ = function() {
  return new $.Pair(null, null);
};

$.Expect_equals = function(expected, actual, reason) {
  var msg;
  if ($.eqB(expected, actual))
    return;
  msg = reason == null ? '' : ', \'' + $.S(reason) + '\'';
  $.Expect__fail('Expect.equals(expected: <' + $.S(expected) + '>, actual: <' + $.S(actual) + '>' + msg + ') fails.');
};

$.Expect__fail = function(message) {
  throw $.$$throw($.ExpectException$(message));
};

$.ExpectException$ = function(message) {
  return new $.ExpectException(message);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Sort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, pivots_are_equal, k, ak, comp, great0, less0, t3;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  index1 = left + sixth;
  index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$.Bench2d$ = function() {
  var t1 = new $.Bench2d(null, null, null, null, null);
  t1.Bench2d$0();
  return t1;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$.World$ = function(gravity, doSleep, argPool) {
  var t1 = new $.World(4, null, null, null, 0, 0, gravity, doSleep, null, null, null, argPool, 0, true, true, $._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.TimeStep$(), $.Vector$(0, 0), $.Vector$(0, 0), $.WorldQueryWrapper$(), $.TimeOfImpactInput$(), $.TimeOfImpactOutput$(), $.Sweep$(), $.TimeOfImpactSolver$(), $._ListImpl_List(32), $.Island$(), $._ListImpl_List(10));
  t1.World$3(gravity, doSleep, argPool);
  return t1;
};

$._convertNativeToDart_SerializedScriptValue = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, true);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(values, copies);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t2, t1).call$1(value);
  t4.call$0();
  return copy;
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1, t2;
  values = [];
  copies = [];
  t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(values, copies);
  t2 = new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies), t2, t1).call$1(object);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState0().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState0().get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState(t1);
  if ($._globalState0().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState0().set$rootContext(rootContext);
  $globals = rootContext.isolateStatics;
  $static_init();
  $._globalState0().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState0().get$topEventLoop().run$0();
};

$._globalState0 = function() {
  return $globalState;
};

$._globalState = function(val) {
  $globalState = val;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._serializeMessage = function(message) {
  if ($._globalState0().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$.Stopwatch_Stopwatch = function() {
  return $._StopwatchImpl$();
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._deserializeMessage = function(message) {
  if ($._globalState0().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ('\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n' === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.get$isNegative(b) === true || $.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (t1 = $.iterator(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.RangeError$value = function(value) {
  return new $.RangeError('value ' + $.S(value));
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.Filter$ = function() {
  return new $.Filter(0, 0, 0);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(visiting, result, t1));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$._Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$.PositionSolverManifold$ = function() {
  return new $.PositionSolverManifold($.Vector$(0, 0), $.Vector$(0, 0), 0, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.MathBox_distanceSquared = function(v1, v2) {
  var dx, dy;
  dx = $.sub(v1.get$x(), v2.get$x());
  dy = $.sub(v1.get$y(), v2.get$y());
  return $.add($.mul(dx, dx), $.mul(dy, dy));
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$._StringImpl__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $._StringImpl__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$._ListImpl_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._ListImpl_List$from = function(other) {
  var result, t1;
  result = $._ListImpl_List(null);
  for (t1 = $.iterator(other); t1.get$hasNext() === true;)
    result.push(t1.next$0());
  return result;
};

$.ContactConstraintPoint$ = function() {
  return new $.ContactConstraintPoint($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0, 0, 0);
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$._StopwatchImpl$ = function() {
  return new $._StopwatchImpl(null, null);
};

$.Matrix22$ = function(c1, c2) {
  var t1 = new $.Matrix22(null, null);
  t1.Matrix22$2(c1, c2);
  return t1;
};

$._StopwatchImpl__frequency = function() {
  return 1000;
};

$.Matrix22_mulMatrixAndVectorToOut = function(matrix, vector, out) {
  var tempy = $.add($.mul(matrix.get$col1().get$y(), vector.get$x()), $.mul(matrix.get$col2().get$y(), vector.get$y()));
  out.set$x($.add($.mul(matrix.get$col1().get$x(), vector.get$x()), $.mul(matrix.get$col2().get$x(), vector.get$y())));
  out.set$y(tempy);
};

$.Matrix22_mulTransMatrixAndVectorToOut = function(matrix, vector, out) {
  var outx = $.add($.mul(vector.get$x(), matrix.get$col1().get$x()), $.mul(vector.get$y(), matrix.get$col1().get$y()));
  out.set$y($.add($.mul(vector.get$x(), matrix.get$col2().get$x()), $.mul(vector.get$y(), matrix.get$col2().get$y())));
  out.set$x(outx);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.Vector$copy = function(other) {
  return new $.Vector(other.get$x(), other.get$y());
};

$.Vector_crossNumAndVectorToOut = function(s, a, out) {
  var tempY = $.mul(s, a.get$x());
  out.set$x($.mul($.neg(s), a.get$y()));
  out.set$y(tempY);
};

$.Vector_crossVectorAndNumToOut = function(a, s, out) {
  var t1, t2, tempy;
  t1 = -s;
  t2 = a.get$x();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  tempy = t1 * t2;
  t2 = a.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  out.set$x(s * t2);
  out.set$y(tempy);
};

$.DefaultWorldPool$ = function() {
  var t1 = new $.DefaultWorldPool(null, null, null);
  t1.DefaultWorldPool$0();
  return t1;
};

$.Collision$_construct = function(pool) {
  var t1 = $.DistanceInput$();
  t1 = new $.Collision(pool, $.SimplexCache$(), t1, $.DistanceOutput$(), $.EdgeResults$(), $.EdgeResults$(), $._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $._ListImpl_List(2), $._ListImpl_List(2));
  t1.Collision$_construct$1(pool);
  return t1;
};

$.Collision_clipSegmentToLine = function(vOut, vIn, norm, offset) {
  var t1, distance0, t2, distance1, numOut, numOut0, interp, vin;
  t1 = $.index(vIn, 0).get$v();
  distance0 = $.sub($.add($.mul(norm.x, t1.get$x()), $.mul(norm.y, t1.get$y())), offset);
  t2 = $.index(vIn, 1).get$v();
  distance1 = $.sub($.add($.mul(norm.x, t2.get$x()), $.mul(norm.y, t2.get$y())), offset);
  if ($.leB(distance0, 0)) {
    if (0 >= vOut.length)
      throw $.ioore(0);
    vOut[0].setFrom$1($.index(vIn, 0));
    numOut = 1;
  } else
    numOut = 0;
  if ($.leB(distance1, 0)) {
    numOut0 = numOut + 1;
    if (numOut >= vOut.length)
      throw $.ioore(numOut);
    vOut[numOut].setFrom$1($.index(vIn, 1));
    numOut = numOut0;
  }
  if ($.ltB($.mul(distance0, distance1), 0)) {
    interp = $.div(distance0, $.sub(distance0, distance1));
    if (numOut >= vOut.length)
      throw $.ioore(numOut);
    vOut[numOut].get$v().setFrom$1($.index(vIn, 1).get$v()).subLocal$1($.index(vIn, 0).get$v()).mulLocal$1(interp).addLocal$1($.index(vIn, 0).get$v());
    vin = $.gtB(distance0, 0) ? $.index(vIn, 0) : $.index(vIn, 1);
    vOut[numOut].get$id().setFrom$1(vin.get$id());
    ++numOut;
  }
  return numOut;
};

$.TimeOfImpact$_construct = function(argPool) {
  var t1 = new $.TimeOfImpact($.SimplexCache$(), $.DistanceInput$(), $.Transform$(), $.Transform$(), $.DistanceOutput$(), $.SeparationFunction$(), $._ListImpl_List(2), $.Sweep$(), $.Sweep$(), argPool);
  t1.TimeOfImpact$_construct$1(argPool);
  return t1;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.Distance$_construct = function() {
  return new $.Distance(0, 0, 20, $.Simplex$(), $._ListImpl_List(3), $._ListImpl_List(3), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$.CircleContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.CircleContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.PolygonAndCircleContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.PolygonAndCircleContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.PolygonContact$ = function(argPool) {
  var t1 = $.Manifold$();
  return new $.PolygonContact(null, null, null, $.ContactEdge$(), $.ContactEdge$(), null, null, t1, null, argPool, $.Manifold$());
};

$.ContactManager$ = function(argPool) {
  var t1 = $.ContactFilter$();
  return new $.ContactManager($.BroadPhase$(), null, 0, t1, null, argPool);
};

$.Body$ = function(bd, world) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
  t1 = $.Transform$();
  t2 = $.Sweep$();
  t3 = $.Vector$copy(bd.linearVelocity);
  t4 = bd.linearDamping;
  t5 = bd.angularDamping;
  t6 = $.Vector$(0, 0);
  t7 = bd.userData;
  t8 = $.FixtureDef$();
  t9 = $.MassData$();
  t10 = $.Transform$();
  t11 = $.Vector$(0, 0);
  t12 = $.Vector$(0, 0);
  t12 = new $.Body(world, 0, null, 0, t7, t3, 0, null, null, null, null, null, 0, null, t6, 0, 0, 0, t4, t5, bd.type, null, t1, t2, t8, t9, t10, t11, t12);
  t12.Body$2(bd, world);
  return t12;
};

$.Simplex$ = function() {
  var t1, t2, t3, t4, t5, t6;
  t1 = $.SimplexVertex$();
  t2 = $.SimplexVertex$();
  t3 = $.SimplexVertex$();
  t4 = $._ListImpl_List(3);
  t5 = $.Vector$(0, 0);
  t6 = $.Vector$(0, 0);
  t6 = new $.Simplex(t1, t2, t3, t4, 0, t5, $.Vector$(0, 0), t6, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t6.Simplex$0();
  return t6;
};

$.DistanceOutput$ = function() {
  return new $.DistanceOutput($.Vector$(0, 0), $.Vector$(0, 0), null, null);
};

$.SimplexCache$ = function() {
  var t1 = new $.SimplexCache(0, 0, $._ListImpl_List(3), $._ListImpl_List(3));
  t1.SimplexCache$0();
  return t1;
};

$.DistanceInput$ = function() {
  return new $.DistanceInput($.DistanceProxy$(), $.DistanceProxy$(), $.Transform$(), $.Transform$(), false);
};

$.Fixture$ = function() {
  return new $.Fixture($.AxisAlignedBox$(null, null), null, null, null, null, null, null, null, $.Filter$(), null, null, $.AxisAlignedBox$(null, null), $.AxisAlignedBox$(null, null));
};

$.PolygonShape$ = function() {
  var t1, t2;
  t1 = $._ListImpl_List(8);
  t2 = $._ListImpl_List(8);
  t2 = new $.PolygonShape($.Vector$(0, 0), t1, t2, 0, 1, 0.01);
  t2.PolygonShape$0();
  return t2;
};

$.PolygonShape$copy = function(other) {
  var t1, t2, t3, t4;
  t1 = other.radius;
  t2 = other.vertexCount;
  t3 = $._ListImpl_List(8);
  t4 = $._ListImpl_List(8);
  t1 = new $.PolygonShape($.Vector$copy(other.centroid), t3, t4, t2, 1, t1);
  t1.PolygonShape$copy$1(other);
  return t1;
};

$.ContactRegister$ = function() {
  return new $.ContactRegister(null, false);
};

$.TimeStep$ = function() {
  return new $.TimeStep(0, 0, 0, 0, 0, true);
};

$.WorldQueryWrapper$ = function() {
  return new $.WorldQueryWrapper(null, null);
};

$.EdgeResults$ = function() {
  return new $.EdgeResults(0, 0);
};

$.TimeOfImpactInput$ = function() {
  return new $.TimeOfImpactInput($.DistanceProxy$(), $.DistanceProxy$(), $.Sweep$(), $.Sweep$(), 0);
};

$.ClipVertex$ = function() {
  return new $.ClipVertex($.Vector$(0, 0), $.ContactID$());
};

$.TimeOfImpactOutput$ = function() {
  return new $.TimeOfImpactOutput(0, 0);
};

$.Sweep$ = function() {
  return new $.Sweep($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0);
};

$.TimeOfImpactSolver$ = function() {
  var t1 = new $.TimeOfImpactSolver($._ListImpl_List(4), 0, null, $.TimeOfImpactSolverManifold$(), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
  t1.TimeOfImpactSolver$0();
  return t1;
};

$.Island$ = function() {
  return new $.Island(null, null, null, null, null, null, null, null, null, null, null, null, null, $.ContactSolver$(), $.Vector$(0, 0), $.ContactImpulse$());
};

$.SeparationFunction$ = function() {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18;
  t1 = $.DistanceProxy$();
  t2 = $.DistanceProxy$();
  t3 = $.Vector$(0, 0);
  t4 = $.Vector$(0, 0);
  t5 = $.Sweep$();
  t6 = $.Sweep$();
  t7 = $.Vector$(0, 0);
  t8 = $.Vector$(0, 0);
  t9 = $.Vector$(0, 0);
  t10 = $.Vector$(0, 0);
  t11 = $.Vector$(0, 0);
  t12 = $.Vector$(0, 0);
  t13 = $.Vector$(0, 0);
  t14 = $.Vector$(0, 0);
  t15 = $.Vector$(0, 0);
  t16 = $.Vector$(0, 0);
  t17 = $.Transform$();
  t18 = $.Transform$();
  return new $.SeparationFunction(t1, t2, 0, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, $.Vector$(0, 0), $.Vector$(0, 0), t16, t17, t18);
};

$.ContactFilter$ = function() {
  return new $.ContactFilter();
};

$.BodyDef$ = function() {
  return new $.BodyDef(0, 0, null, $.Vector$(0, 0), $.Vector$(0, 0), 0, false, null, false, true, 0, 0, true, true);
};

$.AxisAlignedBox$ = function(lowerBound, upperBound) {
  var t1 = new $.AxisAlignedBox(lowerBound, upperBound);
  t1.AxisAlignedBox$2(lowerBound, upperBound);
  return t1;
};

$.AxisAlignedBox_testOverlap = function(a, b) {
  return !($.gtB(b.get$lowerBound().get$x(), a.get$upperBound().get$x()) || $.gtB(b.get$lowerBound().get$y(), a.get$upperBound().get$y()) || $.gtB(a.get$lowerBound().get$x(), b.get$upperBound().get$x()) || $.gtB(a.get$lowerBound().get$y(), b.get$upperBound().get$y()));
};

$.SimplexVertex$ = function() {
  return new $.SimplexVertex($.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0);
};

$.Transform$ = function() {
  return new $.Transform($.Vector$(0, 0), $.Matrix22$(null, null));
};

$.Transform_mulToOut = function(transform, vector, out) {
  var tempY = $.add($.add(transform.get$position().get$y(), $.mul(transform.get$rotation().get$col1().get$y(), vector.get$x())), $.mul(transform.get$rotation().get$col2().get$y(), vector.get$y()));
  out.set$x($.add($.add(transform.get$position().get$x(), $.mul(transform.get$rotation().get$col1().get$x(), vector.get$x())), $.mul(transform.get$rotation().get$col2().get$x(), vector.get$y())));
  out.set$y(tempY);
};

$.Transform_mulTransToOut = function(T, v, out) {
  var v1x, v1y, t1, b, b1, tempy;
  v1x = $.sub(v.get$x(), T.get$position().get$x());
  v1y = $.sub(v.get$y(), T.get$position().get$y());
  t1 = T.get$rotation();
  b = t1.get$col1();
  b1 = t1.get$col2();
  tempy = $.add($.mul(v1x, b1.get$x()), $.mul(v1y, b1.get$y()));
  out.set$x($.add($.mul(v1x, b.get$x()), $.mul(v1y, b.get$y())));
  out.set$y(tempy);
};

$.ContactEdge$ = function() {
  return new $.ContactEdge(null, null, null, null);
};

$.Settings_mixRestitution = function(restitution1, restitution2) {
  return $.gtB(restitution1, restitution2) ? restitution1 : restitution2;
};

$.BroadPhase$ = function() {
  var t1 = new $.BroadPhase($.DynamicTree$(), 0, null, null, 16, 0, null);
  t1.BroadPhase$0();
  return t1;
};

$.DynamicTreeNode$_construct = function() {
  return new $.DynamicTreeNode($.AxisAlignedBox$(null, null), null, null, null, null, null, null);
};

$.DistanceProxy$ = function() {
  var t1 = new $.DistanceProxy($._ListImpl_List(8), 0, 0);
  t1.DistanceProxy$0();
  return t1;
};

$.TimeOfImpactConstraint$ = function() {
  var t1 = new $.TimeOfImpactConstraint($._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), 0, 0, 0, null, null);
  t1.TimeOfImpactConstraint$0();
  return t1;
};

$.TimeOfImpactSolverManifold$ = function() {
  return new $.TimeOfImpactSolverManifold($.Vector$(0, 0), $.Vector$(0, 0), 0, $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0));
};

$.Position$ = function() {
  var t1 = new $.Position(null, null);
  t1.Position$0();
  return t1;
};

$.Velocity$ = function() {
  var t1 = new $.Velocity(null, null);
  t1.Velocity$0();
  return t1;
};

$.ContactSolver$ = function() {
  var t1 = new $.ContactSolver($._ListImpl_List(256), null, $.WorldManifold$(), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.PositionSolverManifold$(), $.Vector$(0, 0), $.Vector$(0, 0));
  t1.ContactSolver$0();
  return t1;
};

$.ContactImpulse$ = function() {
  return new $.ContactImpulse($._ListImpl_List(2), $._ListImpl_List(2));
};

$.ContactConstraint$ = function() {
  var t1 = new $.ContactConstraint($._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), $.Vector$(0, 0), $.Matrix22$(null, null), $.Matrix22$(null, null), null, null, null, null, null, null, 0, null);
  t1.ContactConstraint$0();
  return t1;
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$.MassData$ = function() {
  return new $.MassData(0, $.Vector$(0, 0), 0);
};

$.Manifold$ = function() {
  var t1 = new $.Manifold($._ListImpl_List(2), $.Vector$(0, 0), $.Vector$(0, 0), null, 0);
  t1.Manifold$0();
  return t1;
};

$.WorldManifold$ = function() {
  var t1, t2, t3;
  t1 = $.Vector$(0, 0);
  t2 = $.Vector$(0, 0);
  t3 = $.Vector$(0, 0);
  t3 = new $.WorldManifold(t1, $._ListImpl_List(2), t2, t3);
  t3.WorldManifold$0();
  return t3;
};

$.FixtureDef$ = function() {
  var t1 = new $.FixtureDef(null, null, 0.2, 0, 0, false, $.Filter$());
  t1.FixtureDef$0();
  return t1;
};

$.ManifoldPoint$ = function() {
  return new $.ManifoldPoint($.Vector$(0, 0), 0, 0, $.ContactID$());
};

$.ContactID$ = function() {
  return new $.ContactID($.Features$());
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = futures.length;
  values = $._ListImpl_List(futures.length);
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(t1, i, result, completer, values));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, [], [], []);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.contains$1$bailout = function(state0, receiver, other) {
  var i;
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if ($.eqB(other, $.index(receiver, i)))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, el1, el2, el3, el4, el5, t0, less, great, pivots_are_equal, k, ak, comp, less0, great0, t1;
  sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  index1 = left + sixth;
  index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  el1 = $.index(a, index1);
  el2 = $.index(a, index2);
  el3 = $.index(a, index3);
  el4 = $.index(a, index4);
  el5 = $.index(a, index5);
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.indexSet(a, index1, el1);
  $.indexSet(a, index3, el3);
  $.indexSet(a, index5, el5);
  $.indexSet(a, index2, $.index(a, left));
  $.indexSet(a, index4, $.index(a, right));
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          comp = compare.call$2($.index(a, great), el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else if ($.ltB(comp, 0)) {
            $.indexSet(a, k, $.index(a, less));
            less0 = less + 1;
            $.indexSet(a, less, $.index(a, great));
            great0 = great - 1;
            $.indexSet(a, great, ak);
            great = great0;
            less = less0;
            break;
          } else {
            $.indexSet(a, k, $.index(a, great));
            great0 = great - 1;
            $.indexSet(a, great, ak);
            great = great0;
            break;
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;)
          if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
              $.indexSet(a, k, $.index(a, less));
              less0 = less + 1;
              $.indexSet(a, less, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              $.indexSet(a, k, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
  t1 = less - 1;
  $.indexSet(a, left, $.index(a, t1));
  $.indexSet(a, t1, el2);
  $.indexSet(a, right, $.index(a, great + 1));
  $.indexSet(a, great + 1, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && $.gtB(great, index5)) {
    for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
      ++less;
    for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
      --great;
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;)
          if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
              $.indexSet(a, k, $.index(a, less));
              less0 = less + 1;
              $.indexSet(a, less, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              $.indexSet(a, k, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, j0;
  for (i = left + 1; $.leB(i, right); ++i) {
    el = $.index(a, i);
    j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  var completer, result, values, i, future;
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  values = $._ListImpl_List($.get$length(futures));
  for (i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(t1, i, result, completer, values));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$._StringImpl__toJsStringArray$bailout = function(state0, strings) {
  var length$, i, string, array;
  $.checkNull(strings);
  length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i)
    accumulator.push($.index(a, i));
  return accumulator;
};

$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC2 = new Isolate.$isolateProperties._ExceptionImplementation('Incorrect number or type of arguments');
$.CTC1 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC4 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC3 = new Isolate.$isolateProperties.Object();
$.ManifoldType_CIRCLES = 0;
$.ManifoldType_FACE_A = 1;
$.ManifoldType_FACE_B = 2;
$._cachedBrowserPrefix = null;
$.Contact_ISLAND_FLAG = 1;
$.Contact_TOUCHING_FLAG = 2;
$.Contact_ENABLED_FLAG = 4;
$.Contact_FILTER_FLAG = 8;
$.Contact_BULLET_HIT_FLAG = 16;
$.Bench2d_FRAMES = 256;
$.Bench2d_PYRAMID_SIZE = 20;
$.Bench2d_GRAVITY = -10;
$.Bench2d_TIME_STEP = 0.016666666666666666;
$.Bench2d_VELOCITY_ITERATIONS = 10;
$.Bench2d_POSITION_ITERATIONS = 10;
$.BodyType_STATIC = 0;
$.BodyType_KINEMATIC = 1;
$.BodyType_DYNAMIC = 2;
$.DynamicTree_MAX_STACK_SIZE = 64;
$.DynamicTree__DEFAULT_NODE_ADDITION = 6;
$.Body_ISLAND_FLAG = 1;
$.Body_AWAKE_FLAG = 2;
$.Body_AUTO_SLEEP_FLAG = 4;
$.Body_FIXED_ROTATION_FLAG = 16;
$.Body_TO_I_FLAG = 64;
$.Body_ACTIVE_FLAG = 32;
$.Body_BULLET_FLAG = 8;
$.TimeOfImpactOutputState_UNKNOWN = 0;
$.TimeOfImpactOutputState_FAILED = 1;
$.TimeOfImpactOutputState_OVERLAPPED = 2;
$.TimeOfImpactOutputState_TOUCHING = 3;
$.SeparationType_POINTS = 0;
$.TimeOfImpactOutputState_SEPARATED = 4;
$.SeparationType_FACE_A = 1;
$.Settings_CONTACT_STACK_INIT_SIZE = 10;
$.SeparationType_FACE_B = 2;
$.World_NEW_FIXTURE = 1;
$.Settings_EPSILON = 1.192e-7;
$.World_LOCKED = 2;
$.Settings_MAX_TIME_OF_IMPACT_CONTACTS = 32;
$.World_CLEAR_FORCES = 4;
$.Settings_MAX_LINEAR_CORRECTION = 0.2;
$.Settings_LINEAR_SLEEP_TOLERANCE = 0.01;
$.Settings_ANGULAR_SLEEP_TOLERANCE = 0.03490658503988659;
$.Settings_TIME_TO_SLEEP = 0.5;
$.Settings_TREE_REBALANCE_STEPS = 4;
$.Settings_MAX_INTEGER = 2147483647;
$.Settings_SMALL_NUMBER = 1e-12;
$.Settings_BIG_NUMBER = 99999999999999;
$.Settings_LINEAR_SLOP = 0.005;
$.Settings_POLYGON_RADIUS = 0.01;
$.Settings_VELOCITY_THRESHOLD = 1;
$.Settings_BOUNDING_BOX_EXTENSION = 0.1;
$.Settings_BOUNDING_BOX_MULTIPLIER = 2;
$.MathBox_TWO_PI = 6.283185307179586;
$.Settings_CONTACT_BAUMGARTE = 0.2;
$.Settings_MAX_TRANSLATION = 2;
$.Settings_MAX_TRANSLATION_SQUARED = 4;
$.Settings_MAX_ROTATION = 1.5707963267948966;
$.Settings_MAX_ROTATION_SQUARED = 2.4674011002723395;
$.Settings_MAX_MANIFOLD_POINTS = 2;
$.Settings_MAX_POLYGON_VERTICES = 8;
$._ReceivePortImpl__nextFreeId = 1;
$._getTypeNameOf = null;
$.Primitives_hashCodeSeed = 0;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._TimerFactory__factory = null;
$.MIRROR_OPT_IN_MESSAGE = '\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n';
$.PI = 3.141592653589793;
$.ShapeType_TYPE_COUNT = 2;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC1;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.ShapeType_POLYGON = 1;
$.ShapeType_CIRCLE = 0;
$.BroadPhase_PAIR_CAPACITY = 16;
$.TimeOfImpact_MAX_ITERATIONS = 1000;
$.TimeOfImpact_toiCalls = null;
$.TimeOfImpact_toiIters = null;
$.TimeOfImpact_toiMaxIters = null;
$.TimeOfImpact_toiRootIters = null;
$.TimeOfImpact_toiMaxRootIters = null;
$.ContactSolver_INITIAL_NUM_CONSTRAINTS = 256;
$.ContactSolver_K_MAX_CONDITION_NUMBER = 100;
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$_FileList: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$IDBKeyRange: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Blob: function() { return false; },
 is$File: function() { return false; },
 is$List: function() { return false; },
 is$ImageData: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Collection: function() { return false; },
 is$Map: function() { return false; }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": []
});

$.$defineNativeClass('AnalyserNode', {"": []
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["shape?", "type="],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WebKitAnimation', {"": []
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('HTMLAppletElement', {"": []
});

$.$defineNativeClass('HTMLAreaElement', {"": ["shape?"]
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length?"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": []
});

$.$defineNativeClass('AudioContext', {"": []
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": []
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioListener', {"": []
});

$.$defineNativeClass('AudioNode', {"": []
});

$.$defineNativeClass('AudioParam', {"": ["value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); }
});

$.$defineNativeClass('BarInfo', {"": []
});

$.$defineNativeClass('HTMLBaseElement', {"": []
});

$.$defineNativeClass('HTMLBaseFontElement', {"": []
});

$.$defineNativeClass('BatteryManager', {"": []
});

$.$defineNativeClass('BeforeLoadEvent', {"": []
});

$.$defineNativeClass('BiquadFilterNode', {"": ["frequency?", "type="]
});

$.$defineNativeClass('Blob', {"": ["type?"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": []
});

$.$defineNativeClass('HTMLButtonElement', {"": ["type=", "value="]
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": []
});

$.$defineNativeClass('CSSImportRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": []
});

$.$defineNativeClass('WebKitCSSMatrix', {"": ["a="],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": []
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["type?"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length?"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 get$position: function() {
  return this.getPropertyValue$1('position');
}
});

$.$defineNativeClass('CSSStyleRule', {"": []
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": []
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": []
});

$.$defineNativeClass('HTMLCanvasElement', {"": []
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext', {"": []
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": []
});

$.$defineNativeClass('ChannelMergerNode', {"": []
});

$.$defineNativeClass('ChannelSplitterNode', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["length?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": []
});

$.$defineNativeClass('Clipboard', {"": []
});

$.$defineNativeClass('CloseEvent', {"": []
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": []
});

Console = (typeof console == 'undefined' ? {} : console);
Console.count$1 = function(arg) {
  return this.count(arg);
};
Console.get$count = function() { return new $.BoundClosure0(this, 'count$1'); };
$.$defineNativeClass('HTMLContentElement', {"": []
});

$.$defineNativeClass('ConvolverNode', {"": [],
 normalize$0: function() { return this.normalize.call$0(); }
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": []
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": []
});

$.$defineNativeClass('DOMApplicationCache', {"": []
});

$.$defineNativeClass('DOMError', {"": []
});

$.$defineNativeClass('DOMException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": []
});

$.$defineNativeClass('DOMFileSystemSync', {"": []
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeType', {"": ["type?"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('Plugin', {"": ["length?"]
});

$.$defineNativeClass('PluginArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"": ["type?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length?"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {"": []
});

$.$defineNativeClass('DataTransferItem', {"": ["type?"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length?"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": []
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": []
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": []
});

$.$defineNativeClass('DirectoryEntry', {"": []
});

$.$defineNativeClass('DirectoryEntrySync', {"": []
});

$.$defineNativeClass('DirectoryReader', {"": []
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": []
});

$.$defineNativeClass('HTMLDocument', {"": ["body?"]
});

$.$defineNativeClass('DocumentFragment', {"": [],
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
}
});

$.$defineNativeClass('DocumentType', {"": [],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["id?"]
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["type="]
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('Entry', {"": [],
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": [],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"": []
});

$.$defineNativeClass('Event', {"": ["type?"]
});

$.$defineNativeClass('EventException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": [],
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('EventTarget', {"": []
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["type?"]
});

$.$defineNativeClass('File', {"": [],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": []
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": []
});

$.$defineNativeClass('FileException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": []
});

$.$defineNativeClass('FileReaderSync', {"": []
});

$.$defineNativeClass('FileWriter', {"": ["length?", "position?"]
});

$.$defineNativeClass('FileWriterSync', {"": ["length?", "position?"]
});

$.$defineNativeClass('Float32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": []
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length?"],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('HTMLFrameElement', {"": []
});

$.$defineNativeClass('HTMLFrameSetElement', {"": []
});

$.$defineNativeClass('GainNode', {"": []
});

$.$defineNativeClass('Gamepad', {"": ["id?"]
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": []
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": []
});

$.$defineNativeClass('HTMLHeadingElement', {"": []
});

$.$defineNativeClass('HTMLHtmlElement', {"": []
});

$.$defineNativeClass('XMLHttpRequest', {"": []
});

$.$defineNativeClass('XMLHttpRequestException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": ["position?"]
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": []
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": ["key?"],
 advance$1: function(count) {
  return this.advance(count);
},
 update$1: function(value) {
  return this._update_1$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 _update_1$1: function(value) {
  return this.update(value);
}
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value?"]
});

$.$defineNativeClass('IDBDatabase', {"": [],
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('IDBDatabaseException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": [],
 count$1: function(key_OR_range) {
  var t1, t2;
  t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC2);
},
 get$count: function() { return new $.BoundClosure1(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": [],
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', {"": [],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
},
 count$1: function(key_OR_range) {
  var t1, t2;
  t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC2);
},
 get$count: function() { return new $.BoundClosure2(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": []
});

$.$defineNativeClass('IDBRequest', {"": []
});

$.$defineNativeClass('IDBTransaction', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": []
});

$.$defineNativeClass('HTMLIFrameElement', {"": []
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": [],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["x?", "y?"],
 complete$1: function(arg0) { return this.complete.call$1(arg0); }
});

$.$defineNativeClass('HTMLInputElement', {"": ["pattern?", "type=", "value="],
 step$3: function(arg0, arg1, arg2) { return this.step.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('Int16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["type?"]
});

$.$defineNativeClass('KeyboardEvent', {"": []
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["type?"]
});

$.$defineNativeClass('HTMLLIElement', {"": ["type=", "value="]
});

$.$defineNativeClass('HTMLLabelElement', {"": []
});

$.$defineNativeClass('HTMLLegendElement', {"": []
});

$.$defineNativeClass('HTMLLinkElement', {"": ["type="]
});

$.$defineNativeClass('History', {"": ["length?", "state?"]
});

$.$defineNativeClass('Location', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', {"": [],
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('DOMWindow', {"": ["navigator?"],
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_parent());
},
 get$_parent: function() {
  return this.parent;
},
 close$0: function() {
  return this.close();
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('HTMLMapElement', {"": []
});

$.$defineNativeClass('HTMLMarqueeElement', {"": [],
 start$0: function() {
  return this.start();
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('MediaController', {"": []
});

$.$defineNativeClass('HTMLMediaElement', {"": []
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaError', {"": []
});

$.$defineNativeClass('MediaKeyError', {"": []
});

$.$defineNativeClass('MediaKeyEvent', {"": []
});

$.$defineNativeClass('MediaList', {"": ["length?"]
});

$.$defineNativeClass('MediaQueryList', {"": []
});

$.$defineNativeClass('MediaSource', {"": []
});

$.$defineNativeClass('MediaStream', {"": []
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": ["enabled?"]
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length?"],
 add$1: function(track) {
  return this.add(track);
},
 remove$1: function(track) {
  return this.remove(track);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": []
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": ["ports?"]
});

$.$defineNativeClass('MessagePort', {"": [],
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 start$0: function() {
  return this.start();
}
});

$.$defineNativeClass('HTMLMetaElement', {"": []
});

$.$defineNativeClass('Metadata', {"": []
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="]
});

$.$defineNativeClass('HTMLModElement', {"": []
});

$.$defineNativeClass('MouseEvent', {"": ["x?", "y?"]
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": []
});

$.$defineNativeClass('MutationRecord', {"": ["type?"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent?"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": []
});

$.$defineNativeClass('Node', {"": [],
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
  this.textContent = value;
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('NodeIterator', {"": ["filter?"],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', {"": ["_parent?", "length?"],
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
  return this[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('OESElementIndexUint', {"": []
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["type="],
 start$0: function() { return this.start.call$0(); }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["type="]
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": []
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="]
});

$.$defineNativeClass('OscillatorNode', {"": ["frequency?", "type="]
});

$.$defineNativeClass('HTMLOutputElement', {"": ["type?", "value="]
});

$.$defineNativeClass('OverflowEvent', {"": []
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('PannerNode', {"": []
});

$.$defineNativeClass('HTMLParagraphElement', {"": []
});

$.$defineNativeClass('HTMLParamElement', {"": ["type=", "value="]
});

$.$defineNativeClass('PeerConnection00', {"": [],
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type?"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('PopStateEvent', {"": [],
 get$state: function() {
  return $._convertNativeToDart_SerializedScriptValue(this.get$_state());
},
 get$_state: function() {
  return this.state;
}
});

$.$defineNativeClass('PositionError', {"": []
});

$.$defineNativeClass('HTMLPreElement', {"": []
});

$.$defineNativeClass('ProcessingInstruction', {"": []
});

$.$defineNativeClass('HTMLProgressElement', {"": ["position?", "value="]
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": []
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": [],
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": [],
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type="]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": []
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": []
});

$.$defineNativeClass('SQLError', {"": []
});

$.$defineNativeClass('SQLException', {"": []
});

$.$defineNativeClass('SQLResultSet', {"": []
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('SVGAElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": []
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": []
});

$.$defineNativeClass('SVGAnimateElement', {"": []
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": []
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": []
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": []
});

$.$defineNativeClass('SVGCircleElement', {"": []
});

$.$defineNativeClass('SVGClipPathElement', {"": []
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["type?"]
});

$.$defineNativeClass('SVGCursorElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGDefsElement', {"": []
});

$.$defineNativeClass('SVGDescElement', {"": []
});

$.$defineNativeClass('SVGDocument', {"": []
});

$.$defineNativeClass('SVGElement', {"": [],
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGElementInstance', {"": []
});

$.$defineNativeClass('SVGEllipseElement', {"": []
});

$.$defineNativeClass('SVGException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type?", "x?", "y?"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": []
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEFuncAElement', {"": []
});

$.$defineNativeClass('SVGFEFuncBElement', {"": []
});

$.$defineNativeClass('SVGFEFuncGElement', {"": []
});

$.$defineNativeClass('SVGFEFuncRElement', {"": []
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEImageElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": []
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFEPointLightElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFESpotLightElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFETileElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type?", "x?", "y?"]
});

$.$defineNativeClass('SVGFilterElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGFontElement', {"": []
});

$.$defineNativeClass('SVGFontFaceElement', {"": []
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": []
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": []
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": []
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": []
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGGElement', {"": []
});

$.$defineNativeClass('SVGGlyphElement', {"": []
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGGradientElement', {"": []
});

$.$defineNativeClass('SVGHKernElement', {"": []
});

$.$defineNativeClass('SVGImageElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": []
});

$.$defineNativeClass('SVGLinearGradientElement', {"": []
});

$.$defineNativeClass('SVGMPathElement', {"": []
});

$.$defineNativeClass('SVGMarkerElement', {"": []
});

$.$defineNativeClass('SVGMaskElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGMatrix', {"": ["a="]
});

$.$defineNativeClass('SVGMetadataElement', {"": []
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": []
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": []
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": ["angle=", "x=", "y="]
});

$.$defineNativeClass('SVGPathSegArcRel', {"": ["angle=", "x=", "y="]
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPatternElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": ["points?"]
});

$.$defineNativeClass('SVGPolylineElement', {"": ["points?"]
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGRadialGradientElement', {"": []
});

$.$defineNativeClass('SVGRect', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGRectElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGScriptElement', {"": ["type="]
});

$.$defineNativeClass('SVGSetElement', {"": []
});

$.$defineNativeClass('SVGStopElement', {"": []
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type="]
});

$.$defineNativeClass('SVGSwitchElement', {"": []
});

$.$defineNativeClass('SVGSymbolElement', {"": []
});

$.$defineNativeClass('SVGTRefElement', {"": []
});

$.$defineNativeClass('SVGTSpanElement', {"": []
});

$.$defineNativeClass('SVGTextContentElement', {"": []
});

$.$defineNativeClass('SVGTextElement', {"": []
});

$.$defineNativeClass('SVGTextPathElement', {"": []
});

$.$defineNativeClass('SVGTextPositioningElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGTitleElement', {"": []
});

$.$defineNativeClass('SVGTransform', {"": ["angle?", "type?"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": ["x?", "y?"]
});

$.$defineNativeClass('SVGVKernElement', {"": []
});

$.$defineNativeClass('SVGViewElement', {"": []
});

$.$defineNativeClass('SVGViewSpec', {"": []
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('Screen', {"": []
});

$.$defineNativeClass('HTMLScriptElement', {"": ["type="]
});

$.$defineNativeClass('ScriptProcessorNode', {"": []
});

$.$defineNativeClass('ScriptProfile', {"": []
});

$.$defineNativeClass('ScriptProfileNode', {"": []
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "type?", "value="]
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": []
});

$.$defineNativeClass('ShadowRoot', {"": []
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SharedWorkerContext', {"": []
});

$.$defineNativeClass('SourceBuffer', {"": []
});

$.$defineNativeClass('SourceBufferList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["type="]
});

$.$defineNativeClass('HTMLSpanElement', {"": []
});

$.$defineNativeClass('SpeechGrammar', {"": []
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 start$0: function() {
  return this.start();
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": []
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": []
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length?"]
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key?"]
});

$.$defineNativeClass('StorageInfo', {"": []
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type="]
});

$.$defineNativeClass('StyleMedia', {"": ["type?"]
});

$.$defineNativeClass('StyleSheet', {"": ["type?"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": []
});

$.$defineNativeClass('HTMLTableCellElement', {"": []
});

$.$defineNativeClass('HTMLTableColElement', {"": []
});

$.$defineNativeClass('HTMLTableElement', {"": []
});

$.$defineNativeClass('HTMLTableRowElement', {"": []
});

$.$defineNativeClass('HTMLTableSectionElement', {"": []
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["type?", "value="]
});

$.$defineNativeClass('TextEvent', {"": []
});

$.$defineNativeClass('TextMetrics', {"": []
});

$.$defineNativeClass('TextTrack', {"": []
});

$.$defineNativeClass('TextTrackCue', {"": ["id?", "position?", "text!"]
});

$.$defineNativeClass('TextTrackCueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length?"]
});

$.$defineNativeClass('HTMLTitleElement', {"": []
});

$.$defineNativeClass('Touch', {"": []
});

$.$defineNativeClass('TouchEvent', {"": []
});

$.$defineNativeClass('TouchList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": []
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": ["filter?"],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('UIEvent', {"": []
});

$.$defineNativeClass('HTMLUListElement', {"": ["type="]
});

$.$defineNativeClass('Uint16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": []
});

$.$defineNativeClass('HTMLUnknownElement', {"": []
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": []
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["type?"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": []
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": []
});

$.$defineNativeClass('WebKitNamedFlow', {"": []
});

$.$defineNativeClass('WebSocket', {"": [],
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
}
});

$.$defineNativeClass('WheelEvent', {"": []
});

$.$defineNativeClass('Worker', {"": [],
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', {"": ["navigator?"],
 close$0: function() {
  return this.close();
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('WorkerLocation', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent?"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": []
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('CSSRuleList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {"": [],
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {"": [],
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
}
});

// 527 dynamic classes.
// 527 classes
// 41 !leaf
(function(){
  var v0/*class(Uint8Array)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v1/*class(AudioSourceNode)*/ = 'AudioSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode';
  var v2/*class(_CSSValueList)*/ = 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue';
  var v3/*class(SVGColor)*/ = 'SVGColor|SVGPaint|SVGPaint';
  var v4/*class(Text)*/ = 'Text|CDATASection|CDATASection';
  var v5/*class(SVGTextPositioningElement)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v6/*class(SVGTextContentElement)*/ = [v5/*class(SVGTextPositioningElement)*/,v5/*class(SVGTextPositioningElement)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v7/*class(SVGGradientElement)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v8/*class(SVGComponentTransferFunctionElement)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v9/*class(SVGAnimationElement)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v10/*class(SVGElement)*/ = [v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v11/*class(MediaElement)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v12/*class(MouseEvent)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(UIEvent)*/ = [v12/*class(MouseEvent)*/,v12/*class(MouseEvent)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v14/*class(ProgressEvent)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent';
  var v15/*class(Element)*/ = [v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v16/*class(DocumentFragment)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v17/*class(Document)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v18/*class(CharacterData)*/ = [v4/*class(Text)*/,v4/*class(Text)*/,'CharacterData|Comment|Comment'].join('|');
  var v19/*class(WorkerContext)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v20/*class(Node)*/ = [v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,'Node|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr'].join('|');
  var v21/*class(MediaStream)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v22/*class(IDBRequest)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v23/*class(AbstractWorker)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['AbstractWorker', v23/*class(AbstractWorker)*/],
    ['Uint8Array', v0/*class(Uint8Array)*/],
    ['ArrayBufferView', [v0/*class(Uint8Array)*/,v0/*class(Uint8Array)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['AudioSourceNode', v1/*class(AudioSourceNode)*/],
    ['AudioNode', [v1/*class(AudioSourceNode)*/,v1/*class(AudioSourceNode)*/,'AudioNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['CSSValueList', v2/*class(_CSSValueList)*/],
    ['SVGColor', v3/*class(SVGColor)*/],
    ['CSSValue', [v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,'CSSValue|CSSPrimitiveValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['Text', v4/*class(Text)*/],
    ['CharacterData', v18/*class(CharacterData)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['HTMLDocument', v17/*class(Document)*/],
    ['DocumentFragment', v16/*class(DocumentFragment)*/],
    ['SVGTextPositioningElement', v5/*class(SVGTextPositioningElement)*/],
    ['SVGTextContentElement', v6/*class(SVGTextContentElement)*/],
    ['SVGGradientElement', v7/*class(SVGGradientElement)*/],
    ['SVGComponentTransferFunctionElement', v8/*class(SVGComponentTransferFunctionElement)*/],
    ['SVGAnimationElement', v9/*class(SVGAnimationElement)*/],
    ['SVGElement', v10/*class(SVGElement)*/],
    ['HTMLMediaElement', v11/*class(MediaElement)*/],
    ['Element', v15/*class(Element)*/],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['MouseEvent', v12/*class(MouseEvent)*/],
    ['UIEvent', v13/*class(UIEvent)*/],
    ['ProgressEvent', v14/*class(ProgressEvent)*/],
    ['Event', [v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['WorkerContext', v19/*class(WorkerContext)*/],
    ['Node', v20/*class(Node)*/],
    ['MediaStream', v21/*class(MediaStream)*/],
    ['IDBRequest', v22/*class(IDBRequest)*/],
    ['EventTarget', [v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs'],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=Bench2d.dart.js.map